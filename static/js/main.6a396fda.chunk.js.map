{"version":3,"sources":["Navigation.js","Components/Home.js","Components/Users.js","Components/Purchase/Overview.js","Components/Purchase/ManageOptions.js","Components/Production/Overview.js","Components/Production/ManageOptions.js","Components/Sales/Overview.js","Components/Sales/ManageOptions.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","faHome","faUsers","faComment","faEnvelope","faInbox","faDownload","currentDate","Date","year","String","getFullYear","getDay","getDate","padStart","getMonth","class","to","Home","Users","Overview","url","plus","icon","faPlus","trash","faTrash","useState","supplierFeedbackPanel","showSupplierFeedbackPanel","resourcePanel","showReasourcePanel","purposes","setPurposes","materials","setMaterials","suppliers","setSuppliers","resources","setResources","statuses","setStatuses","supplierFeedbacks","setSupplierFeedbacks","modalResources","setModalResources","modalArchived","setModalArchived","modalSupplierFeedback","setModalSupplierFeedback","modalDateUpdate","setModalDateUpdate","modalReplaceResource","setModalReplaceResource","currentId","setCurrentId","currentWeight","setCurrentWeight","currentPrice","setCurrentPrice","currentColor","setCurrentColor","currentEstimatedArrival","setCurrentEstimatedArrival","currentStatus","setCurrentStatus","currentMaterial","setCurrentMaterial","currentPurpose","setCurrentPurpose","currentSupplier","setCurrentSupplier","specifiedSupplier","setSpecifiedSupplier","currentReasoning","setCurrentReasoning","a","axios","get","then","result","data","fetchResources","useEffect","fetchPurpose","fetchSupplier","fetchMaterial","fetchStatuses","fetchSupplierFeedbacks","today","month","day","addResource","e","preventDefault","post","color","estimatedArrival","id","material","price","purpose","registryDate","status","supplier","weight","onClick","title","map","resource","onChange","target","value","option","feedback","resourceID","qualityReasoning","purchaseReasoning","isOpen","appElement","document","getElementById","type","length","addSupplierFeedback","delete","patch","patchDate","min","step","precision","put","putReplaceResource","ManageOptions","showSuppliers","setShowSuppliers","showPurpose","setShowPurpose","showMaterial","setShowMaterial","showWarning","modalPurpose","setModalPurpose","modalMaterial","setModalMaterial","modalSupplier","setModalSupplier","newTitle","setNewTitle","required","placeholder","addPurpose","addMaterial","addSupplier","showResourceEvaluation","setShowResourceEvaluation","showProductPlans","setShowProductPlans","modalResourceEvaluation","setModalEvaluation","modalProductPlan","setModalProductPlan","modalReceive","setModalReceive","resourceEvaluations","setResourceEvaluations","productPlans","setProductPlans","productTypes","setProductTypes","currentRegistryDate","setCurrentRegistryDate","currentEvaluationReasoning","setCurrentEvaluationReasoning","currentResourceID","setCurrentResourceID","currentProductType","setCurrentProductType","currentEstimatedQuantity","setCurrentEstimatedQuantity","currentUsedWeight","setCurrentUsedWeight","currentQualityReasoning","setCurrentQualityReasoning","fetchResourceEvaluations","fetchProductPlans","handleModalProductPlan","evaluationId","assignedToPlan","patchEvaluationAssignedToPlan","putStatus","selectedStatus","GetOneCategory","props","cat","JSON","stringify","fetchSuppliers","fetchProductTypes","onMouseOver","evaluation","receivedAt","evaluationReasoning","plan","estimatedQuantity","productType","done","catch","error","console","log","patchQualityReasoning","addResourceEvaluation","productCategoryID","usedWeight","addProductPlan","productCategories","setProductCategories","showProductTypes","setShowProductTypes","showProductCategories","setShowProductCategories","modalProductType","setModalProductType","modalProductCategory","setModalProductCategory","currentProductCategoryID","setCurrentProductCategoryID","currentType","setCurrentType","currentTitle","setCurrentTitle","fetchProductCategories","deleteProductType","category","deleteProductCategory","addProductType","addProductCategory","finalProducts","setFinalProducts","currentPlanId","setCurrentPlanId","currentQualityAmount","setCurrentQualityAmount","currentTotalAmount","setCurrentTotalAmount","currentUnitPrice","setCurrentUnitPrice","productOverviewPanel","setProductOverviewPanel","profitPanel","setProfitPanel","modalFinalProduct","setModalFinalProduct","fetchFinalProducts","productPlanID","qualityAmount","totalAmount","unitPrice","handlePatchDonePlan","planId","handleAddFinalProduct","addFinalProduct","product","App","path","component","exact","PurchaseOverview","ManagePurchaseOptions","ProductionOverview","ManageProductionOptions","SalesOverview","ManageSalesOptions","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6a396fda.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome, faUsers, faEnvelope, faComment, faInbox, faFileDownload, faDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport \"./Styling/Navbar.scss\";\r\n//Navigation bar where all choices are presented in the purchase interface\r\n\r\n// good optionals\r\n\r\n// send emails for externals\r\n// send chats for internals\r\n// look in inbox for internal chats\r\n// download a report (choose from API)\r\n\r\n\r\n\r\nconst Navigation = () => {\r\n  // icons\r\n  const home = <FontAwesomeIcon icon={faHome} />\r\n  const users = <FontAwesomeIcon icon={faUsers} />\r\n  const message = <FontAwesomeIcon icon={faComment} />\r\n  const email = <FontAwesomeIcon icon={faEnvelope} />\r\n  const inbox = <FontAwesomeIcon icon={faInbox} />\r\n  const download = <FontAwesomeIcon icon={faDownload} />\r\n\r\n  const weekdays= [\"Monday\",\"Tuesday\", \"Wednesday\", \"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"]\r\n  // variables\r\n  const currentDate = new Date();\r\n  var year = String(currentDate.getFullYear());\r\n  var weekday = String(weekdays[currentDate.getDay()-1]);\r\n  var day = String(currentDate.getDate()).padStart(2, '0');\r\n  var month = String(currentDate.getMonth()+1).padStart(2, '0');\r\n  var displayDate = weekday + \" \" + day + \"/\" +month + \"/\" +year;\r\n\r\n\r\n    return (\r\n      <div class=\"navigation\">\r\n        <div class=\"upper\">\r\n        <Link to=\"/purchaseOverview\"><button class=\"navButton\">Purchase Overview</button></Link>\r\n        <Link to=\"/managePurchaseOptions\"><button class=\"navButton\">Purchase Options</button></Link>\r\n        <Link to=\"/productionOverview\"><button class=\"navButton\">Production Overview</button></Link>\r\n        <Link to=\"/manageProductionOptions\"><button class=\"navButton\">Production Options</button></Link>\r\n        <Link to=\"/salesOverview\"><button class=\"navButton\">Sales Overview</button></Link>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Navigation;\r\n\r\n\r\n\r\n  \r\n","import {useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal, { setAppElement } from 'react-modal';\r\nimport \"C:/Users/umada/my-application/src/Styling/Main.scss\";\r\n\r\n// to do list (cleans in a day)\r\n// \r\n\r\n\r\nfunction Home () {\r\n    return(\r\n\r\n        <div class=\"main\" >\r\n            <div class=\"selection\">\r\n                \r\n            </div>\r\n\r\n            <div class=\"display\">\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import {useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal, { setAppElement } from 'react-modal';\r\nimport \"C:/Users/umada/my-application/src/Styling/Main.scss\";\r\nfunction Users () {\r\n    return(\r\n\r\n        <div class=\"main\">\r\n            <div class=\"selection\">\r\n\r\n            </div>\r\n            <div class=\"display\">\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import {useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal, { setAppElement } from 'react-modal';\r\nimport \"C:/Users/umada/my-application/src/Styling/Main.scss\";\r\n\r\nfunction Overview () {\r\n    const url = \"https://management-backend-app.herokuapp.com/api/\";\r\n    // icons\r\n    const plus = <FontAwesomeIcon icon={faPlus} />\r\n    const trash = <FontAwesomeIcon icon={faTrash} />\r\n\r\n    // Supplier feedback pannel \r\n\r\n    const [supplierFeedbackPanel, showSupplierFeedbackPanel] = useState(false);\r\n    const [resourcePanel, showReasourcePanel] = useState(true);\r\n\r\n    // hooks to store resource descriptor api value collections\r\n    const [purposes, setPurposes] = useState([]);\r\n    const [materials, setMaterials] = useState([]);\r\n    const [suppliers, setSuppliers] = useState([]);\r\n    const [resources, setResources] = useState([]);\r\n    const [statuses, setStatuses] = useState([]);\r\n    const [supplierFeedbacks,setSupplierFeedbacks] = useState([]);\r\n\r\n    // hooks to collect suppliers' feedback\r\n\r\n    // modal dependencies\r\n    const [modalResources, setModalResources] = useState(false);\r\n    const [modalArchived,setModalArchived] = useState(false);\r\n    const [modalSupplierFeedback, setModalSupplierFeedback] = useState(false);\r\n    const [modalDateUpdate, setModalDateUpdate] = useState(false);\r\n    const [modalReplaceResource, setModalReplaceResource] = useState(false);\r\n\r\n    // hooks for adding a new resource\r\n    const [currentId, setCurrentId] = useState(null);\r\n    const [currentWeight, setCurrentWeight] = useState(1.0);\r\n    const [currentPrice, setCurrentPrice] = useState(1.0);\r\n    const [currentColor, setCurrentColor] = useState(\"#000000\");\r\n    const [currentEstimatedArrival, setCurrentEstimatedArrival] = useState(\"2021-12-12\");\r\n    const [currentStatus,setCurrentStatus] = useState(\"\");\r\n    const [currentMaterial, setCurrentMaterial] = useState(\"\");\r\n    const [currentPurpose,setCurrentPurpose] = useState(\"\");\r\n    const [currentSupplier, setCurrentSupplier] = useState(\"\");\r\n\r\n    const [specifiedSupplier,setSpecifiedSupplier] = useState([]);\r\n\r\n    // hooks for adding a new supplier feedback\r\n    const [currentReasoning,setCurrentReasoning] = useState(\"\");\r\n\r\n    // functions to handle modal interactions\r\n\r\n    function handleResourceModal(){\r\n        // clearing old modal values\r\n        setModalResources(true);\r\n        setCurrentMaterial(materials[0].title);\r\n        setCurrentPurpose(purposes[0].title);\r\n        setCurrentSupplier(suppliers[0].title);\r\n        setCurrentStatus(statuses[0].status);\r\n    }\r\n\r\n    function handleSupplierFeedbackModal(){\r\n        setModalResources(false);\r\n        setModalSupplierFeedback(true);\r\n        // old resource ID based on the length of list, \r\n        // as well as supplier is clear from previous selection\r\n        setCurrentReasoning(\"\"); // cleaning up the previous value\r\n    }\r\n\r\n    function handlePatchDate(id){\r\n        setCurrentId(id);\r\n        setModalDateUpdate(true);\r\n    }\r\n\r\n    function handlePutReplaceResource(id, weight, material, color, purpose){\r\n        setCurrentId(id);\r\n        setCurrentWeight(weight);\r\n        setCurrentMaterial(material);\r\n        setCurrentColor(color);\r\n        setCurrentPurpose(purpose);\r\n        setModalReplaceResource(true);\r\n    }\r\n\r\n    // functions that manage appearance when buttons are clicked.\r\n\r\n    function handleSupplierFeedbackPanel(){\r\n        showReasourcePanel(false)\r\n        showSupplierFeedbackPanel(true)\r\n    }\r\n\r\n    function handleResourcePanel(){\r\n        showSupplierFeedbackPanel(false);\r\n        showReasourcePanel(true)\r\n    }\r\n\r\n// internal functions \r\n    useEffect(() => {\r\n        fetchPurpose();\r\n        fetchSupplier();\r\n        fetchMaterial();\r\n        fetchStatuses();\r\n        fetchResources();\r\n        fetchSupplierFeedbacks();\r\n    }, []);\r\n\r\n\r\n// fetching data functions\r\n\r\n    async function fetchPurpose(){\r\n        await axios.get(url+'resourcePurpose')\r\n        .then(result => { \r\n            setPurposes(result.data);\r\n    })}\r\n\r\n    async function fetchMaterial(){\r\n        await axios.get(url+'resourceMaterial')\r\n        .then(result => { \r\n            setMaterials(result.data);\r\n    })}\r\n    \r\n    async function fetchSupplier(){\r\n        await axios.get(url+'resourceSupplier')\r\n        .then(result => { \r\n            setSuppliers(result.data);\r\n    })}\r\n\r\n    async function fetchResources(){\r\n        await axios.get(url+'textileResources')\r\n        .then(result => { \r\n            setResources(result.data);\r\n    })}\r\n\r\n    async function fetchStatuses(){\r\n        await axios.get(url+'resourceStatus')\r\n        .then(result => { \r\n            setStatuses(result.data);\r\n    })}\r\n\r\n    async function fetchSupplierFeedbacks(){\r\n        await axios.get()\r\n        .then(result =>\r\n            setSupplierFeedbacks(result.data));\r\n    }\r\n\r\n    // current date expression \r\n    const today = new Date();\r\n    const month = ((today.getMonth() +1) <10 ? \"0\" + String(today.getMonth() + 1) : String(today.getMonth()+1));\r\n    const day = (today.getDate()) < 10  ? \"0\" + String(today.getDate()) : String(today.getDate());\r\n    const currentDate =   String(today.getFullYear())+ \"-\" + month+ \"-\" + day;\r\n\r\n    // functions to add new properties\r\n    function addResource(e){\r\n        e.preventDefault();\r\n        axios.post(url+'textileResources',{\r\n        color: currentColor,\r\n        estimatedArrival: currentEstimatedArrival,\r\n        id: 0,\r\n        material: currentMaterial,\r\n        price: currentPrice,\r\n        purpose: currentPurpose,\r\n        registryDate: currentDate,\r\n        status: currentStatus,\r\n        supplier: currentSupplier,\r\n        weight: currentWeight\r\n    })\r\n        .then(()=> fetchResources());\r\n        handleSupplierFeedbackModal();\r\n    }\r\n\r\n    function addSupplierFeedback(e){\r\n        e.preventDefault();\r\n        axios.post(url+'supplierFeedback', {\r\n            id:0,\r\n            resourceID: resources.length,\r\n            supplier: currentSupplier,\r\n            purchaseReasoning: currentReasoning,\r\n            qualityReasoning: \"\"\r\n        })\r\n        setModalSupplierFeedback(false);\r\n    }\r\n\r\n    // functions to otherwise alter/delete existing properties\r\n\r\n    function deleteArchived(id){\r\n        axios.delete(url+'textileResources/'+ id)\r\n        fetchResources();\r\n    }\r\n\r\n    function patchDate(e){\r\n        e.preventDefault();\r\n        axios.patch(url+'textileResources/'+ currentId,{\r\n            estimatedArrival: currentEstimatedArrival\r\n        })\r\n        fetchResources();\r\n        setModalDateUpdate(false);\r\n    }\r\n\r\n    function putReplaceResource(e){\r\n        e.preventDefault();\r\n        axios.put(url+'textileResources/'+ currentId,{\r\n            estimatedArrival: currentEstimatedArrival,\r\n            registryDate: currentDate,\r\n            material: currentMaterial,\r\n            price: currentPrice,\r\n            status: statuses[0].status,\r\n            supplier: currentSupplier,\r\n            purpose: currentPurpose,\r\n            weight: currentWeight,\r\n            color: currentColor\r\n        });\r\n        setModalReplaceResource(false);\r\n        fetchResources();\r\n    }\r\n\r\n    return(\r\n        \r\n        <div class=\"main\">\r\n\r\n            <div class=\"selection\">\r\n            <button class=\"selectionButton\" onClick={() => handleResourceModal()}>{plus}</button>\r\n            <button class=\"selectionButton\" onClick= {() => handleResourcePanel()}>See resources</button>\r\n            <button class=\"selectionButton\" onClick= {() => handleSupplierFeedbackPanel()}>Supplier feedback</button>\r\n            <button class=\"selectionButton\" onClick={() => setModalArchived(true)}> See archived</button>\r\n            </div>\r\n\r\n            <div class = \"display\">\r\n\r\n            {resourcePanel&&(\r\n\r\n                <div class = \"filler\">\r\n                <div class=\"panel\">\r\n                <h2>\r\n                    To be evaluated\r\n                </h2>\r\n                <div class=\"inner\">\r\n                    {resources.map(resource => (resource.status == \"To Evaluate\" ? \r\n                    <ul>{resource.weight} kg of {resource.material} for {resource.purpose} due on {resource.estimatedArrival}\r\n                    \r\n                    {resource.estimatedArrival<currentDate?\r\n                    <button onClick={()=> handlePatchDate(resource.id)}>Update arrival date</button>\r\n                    :\r\n                    null\r\n                    }\r\n                    </ul>\r\n                    : null)\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"panel\">\r\n                <h2>\r\n                    Returned\r\n                </h2>\r\n                <div class=\"inner\">\r\n                {resources.map(resource => (resource.status == \"Returned\" ? \r\n                    <ul>{resource.weight} kg of {resource.material} for {resource.purpose}\r\n                    <button onClick= {() => handlePutReplaceResource(resource.id, resource.weight,\r\n                         resource.material, resource.color, resource.purpose)}>\r\n                        Replace</button>\r\n                    </ul>\r\n                    : null)\r\n                    )}\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"panel\" id=\"end\">\r\n                <h2>\r\n                    Accepted\r\n                </h2>\r\n                <div class=\"inner\">\r\n                {resources.map(resource => (resource.status== \"Accepted\" ? \r\n                    <ul>{resource.material} for {resource.purpose}\r\n                    </ul>\r\n                    : null)\r\n                    )}\r\n                </div>\r\n            </div>\r\n            </div>\r\n            )}\r\n\r\n            {supplierFeedbackPanel&&(\r\n                \r\n                <div>\r\n                    <h2>Search by supplier</h2>\r\n                    <select onChange={(e) => setSpecifiedSupplier(e.target.value)}>\r\n                        {suppliers.map( option => \r\n                        <option key={option.id} value={option.title}>\r\n                            {option.title}\r\n                        </option>)}\r\n                    </select>\r\n\r\n                    {supplierFeedbacks.map(feedback =>\r\n                        (feedback.supplier == specifiedSupplier ?\r\n                            <p>Supplier: {feedback.supplier} \r\n                            for resource {feedback.resourceID}\r\n                            Quality: {feedback.qualityReasoning} \r\n                            Communication: {feedback.purchaseReasoning}</p>\r\n                            :\r\n                            null\r\n                        )\r\n                    )}\r\n                    \r\n                </div>\r\n            )}\r\n\r\n            {/* Modal for supplier feedback*/}\r\n\r\n            <div>\r\n                <Modal\r\n                isOpen={modalSupplierFeedback}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>Add feedback to describe supplier's communication</h2>\r\n                    <input type=\"text\" onChange={(e)=> setCurrentReasoning(e.target.value)}></input>\r\n                    <button onClick = {(e) => addSupplierFeedback(e)}>Complete</button>\r\n                </Modal>\r\n            </div>\r\n\r\n            {/* Modal for archived resources and deletion*/}\r\n            <div>\r\n                <Modal\r\n                isOpen={modalArchived}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>Archived resources</h2>\r\n                    <button onClick={() => setModalArchived(false)}> Close </button>\r\n                    <div class=\"inner\">\r\n                    {resources.map(resource => (resource.status == \"Archived\" ? \r\n                    <ul>{resource.weight} kg of {resource.material} for {resource.purpose}\r\n                    <button onClick={() => deleteArchived(resource.id)}>{trash}</button>\r\n                    </ul>\r\n                    : null)\r\n                    )}\r\n                </div>\r\n\r\n                </Modal>\r\n            </div>\r\n\r\n            {/* Modal for changing the date of a resource*/}\r\n\r\n            <div>\r\n                <Modal\r\n                isOpen={modalDateUpdate}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>Set a new date</h2>\r\n                    <label>\r\n                            Estimated Arrival date\r\n                            <input type = \"date\" onChange={(e) => setCurrentEstimatedArrival(e.target.value)}></input>    \r\n                    </label>\r\n                    <button onClick = {(e) => patchDate(e)}>Set</button>\r\n                \r\n                </Modal>\r\n            </div>\r\n\r\n            {/* Modal for replacing returned resources*/}\r\n\r\n            <div>\r\n                <Modal\r\n                isOpen={modalReplaceResource}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>Replace a returned resource</h2>\r\n                    <div class=\"inner\">\r\n                    <label>\r\n                            Suppliers\r\n                            <select onChange={(e) => setCurrentSupplier(e.target.value)}>\r\n                            {suppliers.map( option => \r\n                            <option key={option.id} value={option.title}>{option.title}</option>)}\r\n                            </select>\r\n                    </label>\r\n                    <label>\r\n                            Estimated Arrival date\r\n                            <input type = \"date\" onChange={(e) => setCurrentEstimatedArrival(e.target.value)}></input>    \r\n                    </label>\r\n                    <label>\r\n                        Price\r\n                        <input type = \"number\" min=\"0\" step={10} precision={0.1} onChange={(e) => setCurrentPrice(e.target.value)}></input>   \r\n                    </label>\r\n                    <button onClick={(e) => putReplaceResource(e)}>Replace</button>\r\n\r\n                </div>\r\n\r\n                </Modal>\r\n            </div>\r\n\r\n\r\n            {/* Modal for adding resources*/}\r\n            <div> {/* Resources modal*/}\r\n                <Modal\r\n                isOpen={modalResources}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>New Resource</h2>\r\n                    <button onClick={() => setModalResources(false)}> Close </button>\r\n\r\n                        <label>\r\n                            Weight\r\n                            <input type = \"number\" min=\"0\" step={10} precision={0.1} onChange={(e) => setCurrentWeight(e.target.value)}></input>\r\n                        </label>\r\n                        \r\n                        <label>\r\n                            Price\r\n                            <input type = \"number\" min=\"0\" step={10} precision={0.1} onChange={(e) => setCurrentPrice(e.target.value)}></input>   \r\n                        </label>\r\n                        \r\n                        <label>\r\n                            Color\r\n                            <input type = \"color\" onChange={(e) => setCurrentColor(e.target.value)}></input>\r\n                        </label>\r\n\r\n                        <label>\r\n                            Estimated Arrival date\r\n                            <input type = \"date\" onChange={(e) => setCurrentEstimatedArrival(e.target.value)}></input>    \r\n                        </label>\r\n\r\n                        <label>\r\n                            Material\r\n                            <select onChange={(e) => setCurrentMaterial(e.target.value)}>\r\n                            {materials.map( option => \r\n                            <option key={option.id} value={option.title}>{option.title}</option>)}\r\n                            </select>\r\n                        </label>\r\n                        \r\n                        <label>\r\n                            Purposes\r\n                            <select onChange={(e) => setCurrentPurpose(e.target.value)}>\r\n                            {purposes.map( option => \r\n                            <option key={option.id} value={option.title}>{option.title}</option>)}\r\n                            </select>\r\n                        </label>\r\n                        \r\n                        <label>\r\n                            Suppliers\r\n                            <select onChange={(e) => setCurrentSupplier(e.target.value)}>\r\n                            {suppliers.map( option => \r\n                            <option key={option.id} value={option.title}>{option.title}</option>)}\r\n                            </select>\r\n                        </label>\r\n\r\n                        <button onClick = {e => addResource(e)}>Proceed</button>\r\n                </Modal>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Overview;","import {useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal, { setAppElement } from 'react-modal';\r\nimport \"C:/Users/umada/my-application/src/Styling/Main.scss\";\r\n\r\n// eliminate deletion\r\n\r\n// purchase interface \r\n\r\nfunction ManageOptions () {\r\nconst url = \"https://management-backend-app.herokuapp.com/\";\r\n// panels\r\nconst [showSuppliers, setShowSuppliers] = useState(false);\r\nconst [showPurpose, setShowPurpose] = useState(false);\r\nconst [showMaterial, setShowMaterial] = useState(false);\r\nconst [showWarning, setShowWarning] = useState(false); \r\n\r\n// mapped lists\r\nconst [purposes, setPurposes] = useState([]);\r\nconst [materials, setMaterials] = useState([]);\r\nconst [suppliers, setSuppliers] = useState([]);\r\n\r\n// modal dependencies\r\n\r\nconst [modalPurpose, setModalPurpose] = useState(false);\r\nconst [modalMaterial, setModalMaterial] = useState(false);\r\nconst [modalSupplier, setModalSupplier] = useState(false);\r\n\r\n// variables\r\n\r\nconst [newTitle, setNewTitle] = useState(\"\");\r\n\r\n// icons\r\nconst plus = <FontAwesomeIcon icon={faPlus} />\r\nconst trash = <FontAwesomeIcon icon={faTrash} />\r\n\r\n// internal functions\r\n\r\nuseEffect(() => {\r\n    fetchPurpose();\r\n    fetchSupplier();\r\n    fetchMaterial();\r\n  }, []);\r\n\r\n\r\n// fetching data functions\r\n\r\n\r\n\r\nfunction fetchPurpose(){\r\n    axios.get(url+'api/resourcePurpose')\r\n    .then(result => { \r\n      setPurposes(result.data);\r\n    })\r\n}\r\n\r\n\r\nfunction fetchMaterial(){\r\n    axios.get(url+'api/resourceMaterial')\r\n    .then(result => { \r\n      setMaterials(result.data);\r\n    })\r\n}\r\n\r\nfunction fetchSupplier(){\r\n    axios.get(url+'api/resourceSupplier')\r\n    .then(result => { \r\n      setSuppliers(result.data);\r\n    })\r\n}\r\n\r\n// adding new data functions \r\n\r\nfunction addPurpose(e){\r\n    e.preventDefault();\r\n    axios.post(url+'api/resourcePurpose',{\r\n        id: 0,\r\n        title: newTitle\r\n    }).then(()=> fetchPurpose());\r\n}\r\n\r\nfunction addMaterial(e){\r\n    e.preventDefault();\r\n    axios.post(url+'api/resourceMaterial',{\r\n        id: 0,\r\n        title: newTitle\r\n    }).then(()=> fetchMaterial());\r\n}\r\n\r\nfunction addSupplier(e){\r\n    e.preventDefault();\r\n    axios.post(url+'api/resourceSupplier',{\r\n        id: 0,\r\n        title: newTitle\r\n    }).then(()=> fetchSupplier());\r\n}\r\n\r\n// deleting data functions\r\n\r\n// if error 500, pop open a warning modal!!!\r\nfunction deletePurpose(id){\r\n    axios.delete(url+'api/resourcePurpose/' + id)\r\n    .then(()=> fetchPurpose());\r\n}\r\nfunction deleteMaterial(id){\r\n    axios.delete(url+'api/resourceMaterial/' + id)\r\n    .then(()=> fetchMaterial());\r\n}\r\nfunction deleteSupplier(id){\r\n    axios.delete(url+'api/resourceSupplier/' + id)\r\n    .then(()=> fetchSupplier());\r\n}\r\n\r\n// button handling functions\r\nfunction handlePurpose(){\r\n    setShowMaterial(false);\r\n    setShowSuppliers(false);\r\n    setShowPurpose(true);\r\n}\r\n\r\nfunction handleMaterial(){\r\n    setShowPurpose(false);\r\n    setShowSuppliers(false);\r\n    setShowMaterial(true);\r\n}\r\n\r\nfunction handleSupplier(){\r\n    setShowMaterial(false);\r\n    setShowPurpose(false);\r\n    setShowSuppliers(true);\r\n}\r\n\r\n\r\n    return(\r\n\r\n        <div class=\"main\">\r\n            <div class=\"selection\">\r\n\r\n                <button class=\"selectionButton\" onClick={() => handlePurpose()}>Purpose</button>\r\n                <button class=\"selectionButton\" onClick={() => handleMaterial()}>Material</button>\r\n                <button class=\"selectionButton\" onClick={() => handleSupplier()}>Supplier</button>\r\n\r\n            </div>\r\n            <div class=\"display\">\r\n\r\n            {/*purpose pannel*/}\r\n            {showPurpose ?\r\n            <div id = \"inner\">\r\n                <button class=\"additionButton\" onClick={() => setModalPurpose(true)}>{plus}</button>\r\n                {purposes.map(purpose => <ul key={purpose.id}>{purpose.title} \r\n                <button onClick = {() => deletePurpose(purpose.id)}>{trash}</button></ul>)}\r\n                {/*map all, add new, delete*/}\r\n            </div>\r\n            :\r\n            <></>}\r\n\r\n            <div> {/*purpose modal*/}\r\n                <Modal\r\n                isOpen={modalPurpose}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>New supplier</h2>\r\n                    <button onClick={() => setModalPurpose(false)}> Close </button>\r\n                    <form>\r\n                        <input required type=\"text\" placeholder=\"New purpose\" onChange = {e => setNewTitle(e.target.value)}></input>\r\n                        <button onClick = {e => addPurpose(e)}>Add a new purpose</button>\r\n                    </form>\r\n                </Modal>\r\n            </div>\r\n\r\n            {/*material pannel*/}\r\n            {showMaterial ?\r\n            <div id = \"inner\">\r\n                <button class=\"additionButton\" onClick={() => setModalMaterial(true)}>{plus}</button>\r\n                {materials.map(material => <ul key={material.id}>{material.title} \r\n                <button onClick = {() => deleteMaterial(material.id)}>{trash}</button></ul>)}\r\n                {/*map all, add new, delete*/}\r\n            </div>\r\n            :\r\n            <></>}\r\n            \r\n            <div> {/*Material modal*/}\r\n                <Modal\r\n                isOpen={modalMaterial}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>New material</h2>\r\n                    <button onClick={() => setModalMaterial(false)}> Close </button>\r\n                    <form>\r\n                        <input required type=\"text\" placeholder=\"New material\" onChange = {e => setNewTitle(e.target.value)}></input>\r\n                        <button onClick = {e => addMaterial(e)}>Add a new material</button>\r\n                    </form>\r\n                </Modal>\r\n            </div>\r\n\r\n            {/*supplier pannel*/}\r\n            {showSuppliers ?\r\n            <div id = \"inner\">\r\n                <button class=\"additionButton\" onClick={() => setModalSupplier(true)}>{plus}</button>\r\n                {suppliers.map(supplier => <ul key={supplier.id}>{supplier.title}\r\n                <button onClick = {() => deleteSupplier(supplier.id)} >{trash}</button></ul>)}\r\n                {/*map all, add new, delete*/}\r\n            </div>\r\n            :\r\n            <></>}\r\n            \r\n            <div> {/*Material modal*/}\r\n                <Modal\r\n                isOpen={modalSupplier}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>New Supplier</h2>\r\n                    <button onClick={() => setModalSupplier(false)}> Close </button>\r\n                    <input type=\"text\" placeholder=\"New Supplier\" onChange = {e => setNewTitle(e.target.value)}></input>\r\n                    <button onClick = {e => addSupplier(e)}>Add a new supplier</button>\r\n                    \r\n                    {/*make warning work - otherwise form is to be used*/}\r\n                    {showWarning ?\r\n                    <p> Please fill in the field! </p>\r\n                    :\r\n                    <></>}\r\n\r\n                </Modal>\r\n            </div>\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ManageOptions;","\r\n\r\nimport {useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal, { setAppElement } from 'react-modal';\r\nimport \"C:/Users/umada/my-application/src/Styling/Main.scss\";\r\n\r\nfunction Overview(){\r\n\r\n    const url = \"https://management-backend-app.herokuapp.com/\";\r\n    // icons\r\n    const plus = <FontAwesomeIcon icon={faPlus} />\r\n    const trash = <FontAwesomeIcon icon={faTrash} />\r\n\r\n    // current date expression \r\n    const today = new Date();\r\n    const month = ((today.getMonth() +1) <10 ? \"0\" + String(today.getMonth() + 1) : String(today.getMonth()+1));\r\n    const day = (today.getDate()) < 10  ? \"0\" + String(today.getDate()) : String(today.getDate());\r\n    const currentDate =   String(today.getFullYear())+ \"-\" + month+ \"-\" + day;\r\n\r\n    // panels\r\n\r\n    const [showResourceEvaluation, setShowResourceEvaluation] = useState(true);\r\n    const [showProductPlans, setShowProductPlans] = useState(false);\r\n\r\n    // modal dependencies\r\n\r\n    const [modalResourceEvaluation, setModalEvaluation] = useState(false);\r\n    const [modalProductPlan, setModalProductPlan] = useState(false);\r\n    const [modalSupplierFeedback, setModalSupplierFeedback] = useState(false);\r\n    const [modalReceive,setModalReceive] = useState(false);\r\n\r\n    // fetched lists\r\n\r\n    const [suppliers, setSuppliers] = useState([]);\r\n    const [resourceEvaluations, setResourceEvaluations] = useState([]);\r\n    const [productPlans, setProductPlans] = useState([]);\r\n    const [productTypes, setProductTypes] = useState([]);\r\n    const [resources, setResources] = useState([]);\r\n    const [statuses, setStatuses] = useState([]);\r\n\r\n\r\n    // hooks used for establishing and using states of data.\r\n    \r\n    const [currentId, setCurrentId] = useState(null);\r\n    const [currentWeight, setCurrentWeight] = useState(1.0);\r\n    const [currentPrice, setCurrentPrice] = useState(1.0);\r\n    const [currentColor, setCurrentColor] = useState(\"#000000\");\r\n    const [currentEstimatedArrival, setCurrentEstimatedArrival] = useState(\"2021-12-12\");\r\n    const [currentRegistryDate, setCurrentRegistryDate] = useState(\"2021-12-12\");\r\n    const [currentStatus,setCurrentStatus] = useState(\"\");\r\n    const [currentMaterial, setCurrentMaterial] = useState(\"\");\r\n    const [currentPurpose,setCurrentPurpose] = useState(\"\");\r\n    const [currentSupplier, setCurrentSupplier] = useState(\"\");\r\n    const [currentEvaluationReasoning, setCurrentEvaluationReasoning] = useState(\"\");\r\n    const [currentReasoning, setCurrentReasoning] = useState(\"\");\r\n    const [currentSupplierID, setCurrentSupplierID] = useState(1);\r\n    const [currentSupplierFeedbackID, setCurrentSupplierFeedbackID] = useState(1);\r\n    const [currentResourceID, setCurrentResourceID] = useState(1);\r\n    const [currentAcceptability, setCurrentAcceptability] = useState(true);\r\n    const [currentProductType, setCurrentProductType] = useState();\r\n    const [currentEstimatedQuantity, setCurrentEstimatedQuantity] = useState(1);\r\n    const [currentUsedWeight, setCurrentUsedWeight] = useState(1.0);\r\n    const [currentQualityReasoning, setCurrentQualityReasoning] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetchSuppliers();\r\n        fetchStatuses();\r\n        fetchResources();\r\n        fetchProductTypes();\r\n        fetchProductPlans();\r\n        fetchResourceEvaluations();\r\n    }, []);\r\n\r\n    async function fetchSuppliers(){\r\n        await axios.get(url+'api/resourceSupplier')\r\n        .then(result => { \r\n            setSuppliers(result.data);\r\n    })}\r\n\r\n    async function fetchStatuses(){\r\n        await axios.get(url+'api/resourceStatus')\r\n        .then(result => { \r\n            setStatuses(result.data);\r\n    })}\r\n\r\n    // fetch product types\r\n    async function fetchProductTypes(){\r\n        await axios.get(url+'api/productType')\r\n        .then(result => { \r\n            setProductTypes(result.data);\r\n        })\r\n    }\r\n\r\n    async function fetchResources(){\r\n        await axios.get(url+'api/textileResources')\r\n        .then(result => { \r\n            setResources(result.data);\r\n    })}\r\n\r\n    // fetch evaluations\r\n    async function fetchResourceEvaluations(){\r\n        await axios.get(url+'api/evaluated')\r\n        .then(result => { \r\n            setResourceEvaluations(result.data);\r\n        })\r\n    }\r\n\r\n    // add evaluation \r\n    \r\n    function addResourceEvaluation(e){\r\n        e.preventDefault();\r\n        axios.post(url+'api/evaluated',{\r\n            id: 0,\r\n\t\t    resourceID : currentId,\r\n\t\t    evaluationReasoning : currentEvaluationReasoning,\r\n\t\t    receivedAt: currentDate,\r\n            assignedToPlan:false\r\n        }).then(()=> fetchResourceEvaluations())\r\n        .then(() => fetchResources());\r\n        setModalEvaluation(false);\r\n    }\r\n\r\n    function manageProductPlanCompletion(id){\r\n        axios.patch(url+'api/productPlan/'+id +'/'+ true, { // change last argument\r\n            done: true\r\n        }).catch((error) => console.log('Error: ', error))\r\n    }\r\n\r\n    // fetch product profiles\r\n    async function fetchProductPlans(){\r\n        await axios.get(url+'api/productPlan')\r\n        .then(result => { \r\n            setProductPlans(result.data);\r\n        });\r\n    }\r\n\r\n    // add product profile\r\n\r\n    function addProductPlan(e){\r\n        e.preventDefault();\r\n        axios.post(url+'api/productPlan',{\r\n            id: 0,\r\n            done: false,\r\n            productType: currentProductType,\r\n            estimatedQuantity: currentEstimatedQuantity,\r\n            estimatedArrival: currentEstimatedArrival,\r\n            usedWeight: currentUsedWeight,\r\n            resourceID: currentResourceID\r\n        }).then(()=> fetchProductPlans());\r\n\r\n        setModalProductPlan(false);\r\n    }\r\n\r\n    function handleEvaluations(){\r\n        setShowProductPlans(false);\r\n        setShowResourceEvaluation(true);\r\n    }\r\n\r\n    function handleProjectPlans(){\r\n        setShowResourceEvaluation(false);\r\n        setShowProductPlans(true);\r\n    }\r\n\r\n    function handleModalReceive(id,estimatedArrival, weight, material, color, purpose, price,\r\n        registryDate, supplier){\r\n        \r\n        setCurrentResourceID(id);\r\n        setCurrentId(id);\r\n        setCurrentWeight(weight);\r\n        setCurrentMaterial(material);\r\n        setCurrentColor(color);\r\n        setCurrentPurpose(purpose);\r\n        setCurrentSupplier(supplier);\r\n        setCurrentPrice(price);\r\n        setCurrentEstimatedArrival(estimatedArrival);\r\n        setCurrentRegistryDate(registryDate);\r\n\r\n        setModalReceive(true);\r\n    }\r\n\r\n    function handleModalProductPlan(evaluationId){\r\n        patchEvaluationAssignedToPlan(evaluationId);\r\n        setModalProductPlan(true);\r\n    }\r\n\r\n    function handleReturned(){\r\n        setModalReceive(false);\r\n        putStatus(statuses[2].status);\r\n        fetchResources();\r\n        setModalSupplierFeedback(true);\r\n        // use put to change the specified resource to \"Returned\" in status\r\n        // pop open the supplier feedback modal and use a patch call to add resource evaluation\r\n    }\r\n\r\n    function handleAccepted(){\r\n        setModalReceive(false);\r\n        putStatus(statuses[1].status);\r\n        setModalEvaluation(true);\r\n        // use put to change the specified resource to \"Accepted\" in status\r\n        // open Evaluation modal and add new evaluation.\r\n    }\r\n\r\n\r\n    function putStatus(selectedStatus){\r\n        axios.put(url + 'api/textileResources/'+ currentId,{\r\n            estimatedArrival: currentEstimatedArrival,\r\n            registryDate: currentRegistryDate,\r\n            material: currentMaterial,\r\n            price: currentPrice,\r\n            status: selectedStatus,\r\n            supplier: currentSupplier,\r\n            purpose: currentPurpose,\r\n            weight: currentWeight,\r\n            color: currentColor\r\n        });\r\n        fetchResources();\r\n    }\r\n\r\n    function GetOneCategory(props){\r\n        axios.get(url + 'api/productCategory/'+props.cat, {\r\n        }).then(result => {return(JSON.stringify(result.data.title))});\r\n    }\r\n\r\n    function patchQualityReasoning(e){\r\n        e.preventDefault();\r\n        axios.patch(url+ \"api/supplierFeedback/\"+ currentResourceID,{\r\n            qualityReasoning: currentQualityReasoning\r\n        });\r\n        modalSupplierFeedback(false);\r\n    }\r\n\r\n    function patchEvaluationAssignedToPlan(evaluationId){\r\n        axios.patch(url+ \"api/evaluated/\"+ evaluationId,{\r\n            assignedToPlan: true\r\n        });\r\n        fetchResourceEvaluations();\r\n        fetchProductPlans();\r\n    }\r\n\r\n\r\n    return(\r\n        <div class=\"main\">\r\n            {/**/}\r\n            <div class = \"selection\">\r\n            <button class=\"selectionButton\" onClick={() => handleEvaluations()}>Manage Evaluations</button>\r\n            <button class=\"selectionButton\" onClick={() => handleProjectPlans()}>Manage Product planning</button>\r\n            </div>\r\n\r\n            <div class= \"display\">\r\n            {/*show resourceEvaluations (show resources with 'to evaluate' status)*/}\r\n            {showResourceEvaluation ? \r\n            <div class = \"fullPanel\">\r\n                <div class = \"halfPanel\">\r\n                <h2>The following resources are waiting for evaluation: </h2>\r\n                {resources.map(resource => (resource.status == \"To Evaluate\" ? \r\n                    <ul key={resource.id} onMouseOver={()=> setCurrentResourceID(resource.id)}>\r\n                    <button class=\"changesButton\" onClick={() => \r\n                    handleModalReceive(resource.id,resource.estimatedArrival,resource.weight,resource.material,\r\n                        resource.color, resource.purpose, resource.price, resource.registryDate, \r\n                        resource.supplier)}>Evaluate</button>\r\n                    {resource.weight} kg of {resource.material}\r\n                    </ul>\r\n                    : null)\r\n                )}\r\n                </div>\r\n\r\n                <div class = \"halfPanel\" id=\"end\">\r\n                <h2>Current evaluations</h2>\r\n                {resourceEvaluations.map(evaluation =>\r\n                    <ul key={evaluation.id}> {evaluation.receivedAt} \r\n                    </ul>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            \r\n            :\r\n            null}\r\n\r\n            {/*show product plans*/}\r\n\r\n            {showProductPlans ? \r\n                <div class = \"fullPanel\">\r\n                <div class = \"halfPanel\">\r\n                <h2>Assign resources to product plans</h2>\r\n                {resourceEvaluations.map(evaluation => (evaluation.assignedToPlan ? \r\n                    <ul key={evaluation.id} onMouseOver={()=> setCurrentResourceID(evaluation.resourceID)}>\r\n                        Evaluation {evaluation.resourceID} ({evaluation.evaluationReasoning})\r\n                    <button onClick={() => handleModalProductPlan(evaluation.id)}>Assign</button>\r\n                    </ul>\r\n                    : null)\r\n                    )}\r\n                </div>\r\n                <div class = \"halfPanel\" id=\"end\">\r\n                <h2>Current product plans</h2>    \r\n                {productPlans.map(plan =>\r\n                    <ul key={plan.id} onMouseOver={()=> setCurrentResourceID(plan.id)}>\r\n                        {plan.estimatedQuantity} of {plan.productType}\r\n                        {plan.done ?\r\n                        <button onClick={() => manageProductPlanCompletion()}> Complete </button>\r\n                        :\r\n                        <b>completed</b>}\r\n                    </ul>\r\n                    )}\r\n                </div>\r\n                </div>\r\n            \r\n            :\r\n            null}\r\n            \r\n            <div>\r\n                <Modal\r\n                isOpen={modalSupplierFeedback}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>Why did you return the resource?</h2>\r\n                    <button onClick={() => setModalSupplierFeedback(false)}> Close </button>\r\n                    <label>\r\n                        Describe the quality\r\n                        <input type=\"text\" onChange={(e) => setCurrentQualityReasoning(e.target.value)}></input>\r\n                    </label>\r\n                    <button onClick = {e => patchQualityReasoning(e)}>Proceed to evaluate</button>\r\n                </Modal>\r\n            </div>\r\n\r\n            {/*Modal to add new resource Evaluation*/}\r\n\r\n            <div>\r\n                <Modal\r\n                isOpen={modalResourceEvaluation}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>New Evaluation</h2>\r\n                    <p>Motivate your evaluation</p>\r\n                    <input type=\"text\" onChange = {(e)=> setCurrentEvaluationReasoning(e.target.value)}></input>\r\n                    <button onClick = {e => addResourceEvaluation(e)}>Submit a new Evaluation</button>\r\n                </Modal>\r\n            </div>\r\n\r\n            {/*Modal to add new product plan (show resources with 'accepted' status)*/}\r\n            \r\n            <div>\r\n                <Modal\r\n                isOpen={modalProductPlan}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>New Product Plan</h2>\r\n                    \r\n                    <label>\r\n                            Product type\r\n                            <select onChange={(e) => setCurrentProductType(e.target.value)}>\r\n                            {productTypes.map( option => \r\n                            <option key={option.id} value={option.title}> {option.title} \r\n                            <GetOneCategory cat={option.productCategoryID} /> </option>)}\r\n                            </select>\r\n                    </label>\r\n                    <label>\r\n                            Estimated Arrival date\r\n                            <input type = \"date\" onChange={(e) => setCurrentEstimatedArrival(e.target.value)}></input>    \r\n                    </label>\r\n\r\n                    <label>\r\n                        EstimatedQuantity\r\n                        <input type = \"number\" min=\"0\" step={10} onChange={(e) => setCurrentEstimatedQuantity(e.target.value)}></input>   \r\n                    </label>\r\n\r\n                    <label>\r\n                        Used Weight\r\n                        <input type = \"number\" min=\"0\" step={5} onChange={(e) => setCurrentUsedWeight(e.target.value)}></input>   \r\n                    </label>\r\n\r\n                    <button onClick = {e => addProductPlan(e)}>Add a new Product plan</button>\r\n                </Modal>\r\n            </div>\r\n\r\n            <div>\r\n                <Modal\r\n                isOpen={modalReceive}\r\n                appElement={document.getElementById('root')}>\r\n                    <button onClick = {() => setModalReceive(false)}>Close</button>\r\n                    <h2>Accept or decline the product</h2>\r\n                    <button onClick = {() => handleAccepted()}>Accept</button>\r\n                    <button onClick = {() => handleReturned()} >Return</button>\r\n                </Modal>\r\n            </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Overview;","\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal, { setAppElement } from 'react-modal';\r\nimport \"C:/Users/umada/my-application/src/Styling/Main.scss\";\r\n\r\nfunction ManageOptions() {\r\n\r\n  const url = \"https://management-backend-app.herokuapp.com/\";\r\n\r\n  // icons\r\n  const plus = <FontAwesomeIcon icon={faPlus} />\r\n  const trash = <FontAwesomeIcon icon={faTrash} />\r\n\r\n  // loaded lists\r\n  const [productCategories, setProductCategories] = useState([]);\r\n  const [productTypes, setProductTypes] = useState([]);\r\n\r\n  // panels\r\n  const [showProductTypes, setShowProductTypes] = useState(false);\r\n  const [showProductCategories, setShowProductCategories] = useState(false);\r\n\r\n  // modal dependencies\r\n  const [modalProductType, setModalProductType] = useState(false);\r\n  const [modalProductCategory, setModalProductCategory] = useState(false);\r\n\r\n  // variables\r\n  const [currentProductCategoryID, setCurrentProductCategoryID] = useState(1);\r\n  const [currentType, setCurrentType] = useState(\"\");\r\n  const [currentTitle, setCurrentTitle] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    fetchProductTypes();\r\n    fetchProductCategories();\r\n  }, []);\r\n\r\n  async function fetchProductTypes() {\r\n    await axios.get(url+'api/productType')\r\n      .then(result => {\r\n        setProductTypes(result.data);\r\n      })\r\n  }\r\n\r\n  async function fetchProductCategories() {\r\n    await axios.get(url+'api/productCategory')\r\n      .then(result => {\r\n        setProductCategories(result.data);\r\n      })\r\n  }\r\n\r\n\r\n  function addProductType(e) {\r\n    e.preventDefault();\r\n    axios.post(url+'api/productType', {\r\n      id: 0,\r\n      productCategoryID: currentProductCategoryID,\r\n      title: currentTitle,\r\n      type: currentType,\r\n    }).then(() => fetchProductTypes());\r\n    setModalProductType(false);\r\n  }\r\n\r\n  async function addProductCategory(e) {\r\n    e.preventDefault();\r\n    axios.post(url+'api/productCategory', {\r\n      id: 0,\r\n      title: currentTitle,\r\n    }).then(() => fetchProductCategories());\r\n    setModalProductCategory(false);\r\n  }\r\n\r\n  async function deleteProductType(id) {\r\n    axios.delete(url+'api/productType/' + id)\r\n      .then(() => fetchProductTypes());\r\n  }\r\n\r\n  async function deleteProductCategory(id) {\r\n    axios.delete(url+'api/productCategory/' + id)\r\n      .then(() => fetchProductCategories());\r\n  }\r\n\r\n  function handleTypes() {\r\n    setShowProductCategories(false);\r\n    setShowProductTypes(true);\r\n  }\r\n  function handleCategories() {\r\n    setShowProductTypes(false);\r\n    setShowProductCategories(true);\r\n  }\r\n\r\n  return (\r\n    <div class=\"main\">\r\n\r\n      <div class=\"selection\">\r\n        <button class=\"selectionButton\" onClick={() => handleTypes()}>Product Types</button>\r\n        <button class=\"selectionButton\" onClick={() => handleCategories()}>Product Categories</button>\r\n      </div>\r\n\r\n      <div class=\"display\">\r\n\r\n        {/*type pannel*/}\r\n        \r\n        {showProductTypes ?\r\n          <div id=\"inner\">\r\n            <button onClick={() => setModalProductType(true)}>{plus}</button>\r\n            {productTypes.map(type => <ul key={type.id}>{type.title}\r\n              <button onClick={() => deleteProductType(type.id)}>{trash}</button></ul>)}\r\n            {/*map all, add new, delete*/}\r\n          </div>\r\n          :\r\n          <></>}\r\n        {showProductCategories ?\r\n          <div id=\"inner\">\r\n            <button onClick={() => setModalProductCategory(true)}>{plus}</button>\r\n            {productCategories.map(category => <ul key={category.id}>{category.title}\r\n              <button onClick={() => deleteProductCategory(category.id)}>{trash}</button></ul>)}\r\n            {/*map all, add new, delete*/}\r\n          </div>\r\n          :\r\n          <></>}\r\n      \r\n\r\n      {/*Modals*/}\r\n      <div> {/*Type modal*/}\r\n        <Modal\r\n          isOpen={modalProductType}\r\n          appElement={document.getElementById('root')}>\r\n          <h2>New Product type</h2>\r\n          <button onClick={() => setModalProductType(false)}> Close </button>\r\n\r\n          <input type=\"text\" placeholder=\"New Type\" onChange={e => setCurrentType(e.target.value)}></input>\r\n          <input type=\"text\" placeholder=\"New Title\" onChange={e => setCurrentTitle(e.target.value)}></input>\r\n\r\n          <label>\r\n            Categories\r\n            <select onChange={(e) => setCurrentProductCategoryID(e.target.value)}>\r\n              {productCategories.map(option =>\r\n                <option key={option.id} value={option.id}>{option.title}</option>)}\r\n            </select>\r\n          </label>\r\n\r\n          <button onClick={e => addProductType(e)}>Add a new type</button>\r\n        </Modal>\r\n      </div>\r\n\r\n      <div> {/*Category modal*/}\r\n        <Modal\r\n          isOpen={modalProductCategory}\r\n          appElement={document.getElementById('root')}>\r\n          <h2>New Product Category</h2>\r\n          <button onClick={() => setModalProductCategory(false)}> Close </button>\r\n\r\n          <input type=\"text\" placeholder=\"New Title\" onChange={e => setCurrentTitle(e.target.value)}></input>\r\n\r\n          <button onClick={e => addProductCategory(e)}>Add a new category</button>\r\n        </Modal>\r\n      </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ManageOptions;","import {useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal, { setAppElement } from 'react-modal';\r\nimport \"C:/Users/umada/my-application/src/Styling/Main.scss\";\r\n// patch 'undone' plan to 'done'\r\n// final products (see final products, delete them)\r\n\r\nfunction Overview(){\r\n\r\n    const url = \"https://management-backend-app.herokuapp.com/api/\";\r\n\r\n    // loaded values\r\n    const [finalProducts, setFinalProducts] = useState([]);\r\n    const [productPlans, setProductPlans] = useState([]);\r\n\r\n    // variables\r\n\r\n    const [currentPlanId, setCurrentPlanId] = useState(0);\r\n    const [currentQualityAmount, setCurrentQualityAmount] = useState(0);\r\n    const [currentTotalAmount, setCurrentTotalAmount] = useState(0);\r\n    const [currentUnitPrice, setCurrentUnitPrice] = useState(0);\r\n\r\n    // panels\r\n\r\n    const [productOverviewPanel, setProductOverviewPanel] = useState(true);\r\n    const [profitPanel, setProfitPanel] = useState(false);\r\n\r\n    // modals\r\n    const [modalFinalProduct, setModalFinalProduct] = useState(false);\r\n\r\n    async function fetchProductPlans(){\r\n        await axios.get(url+'productPlan')\r\n        .then(result => {\r\n            setProductPlans(result.data)\r\n        })\r\n    }\r\n\r\n    async function fetchFinalProducts(){\r\n        await axios.get(url+'finalProducts')\r\n        .then(result => { \r\n            setFinalProducts(result.data);\r\n        })\r\n    }\r\n  \r\n    async function addFinalProduct(){\r\n        axios.post(url+'finalProducts', {\r\n            id: 0,\r\n            productPlanID: currentPlanId,\r\n            qualityAmount: currentQualityAmount,\r\n            totalAmount: currentTotalAmount,\r\n            unitPrice: currentUnitPrice\r\n        }).then(()=> fetchFinalProducts());\r\n    }\r\n\r\n    // delete deletes product plan, final product, evaluation and resource.\r\n\r\n    function handleProductsPanel(){\r\n        setProductOverviewPanel(true);\r\n        setProfitPanel(false);\r\n    }\r\n\r\n    function handleProfitPanel(){\r\n        setProfitPanel(true);\r\n        setProductOverviewPanel(false);\r\n    }\r\n\r\n    function handlePatchDonePlan(planId){\r\n        axios.patch(url+\"productPlan/\"+ planId,{\r\n            done:false\r\n        });\r\n        fetchProductPlans();\r\n        setModalFinalProduct(true);\r\n    }\r\n\r\n    function handleAddFinalProduct(){\r\n        addFinalProduct();\r\n        \r\n    }\r\n\r\n\r\n    return(\r\n\r\n        <div class=\"main\" >\r\n            <div class=\"selection\">\r\n\r\n                <button class=\"selectionButton\" onClick = {()=> handleProductsPanel()}>Product overview</button>\r\n                <button class=\"selectionButton\" onClick = {()=> handleProfitPanel()}>Profits overview</button>\r\n               \r\n            </div>\r\n\r\n            <div class=\"display\">\r\n\r\n                {productOverviewPanel&&(\r\n                    <div class=\"fullPanel\">\r\n                        <div class=\"halfPanel\">\r\n                            <h2>Finalize plans</h2>\r\n                            {productPlans.map(plan => \r\n                            <ul key={plan.id} onMouseOver={()=> setCurrentPlanId(plan.id)}>\r\n                                {plan.productType} {plan.estimatedQuantity}\r\n                                <button onClick = {() => handlePatchDonePlan(plan.id)}>Done</button>\r\n                            </ul>\r\n                            )};\r\n\r\n                        </div>\r\n                        <div class=\"halfPanel\">\r\n                            <h2>Available products</h2>\r\n                            {finalProducts.map(product => <ul key={product.id}>\r\n                              Plan {product.productPlanID}\r\n                            </ul>)}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {profitPanel&&(\r\n                <div class=\"fullPanel\">\r\n                    {/*Product - In Stock - Sold - Revenue (proportional )*/}\r\n                    \r\n                </div>\r\n                )}\r\n                \r\n                <div>\r\n                <Modal\r\n                isOpen={modalFinalProduct}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>Fill the fields to establish a final product</h2>\r\n                    <label>\r\n                        Total Amount\r\n                        <input type = \"number\" min=\"0\" step={1} onChange={(e) => setCurrentTotalAmount(e.target.value)}></input>   \r\n                    </label>\r\n                    <label>\r\n                        Quality Amount\r\n                        <input type = \"number\" min=\"0\" step={1} onChange={(e) => setCurrentQualityAmount(e.target.value)}></input>   \r\n                    </label>\r\n                    <label>\r\n                        Unit price\r\n                        <input type = \"number\" min=\"0\" step={1} onChange={(e) => setCurrentUnitPrice(e.target.value)}></input>   \r\n                    </label>\r\n                    <button onClick = {() => handleAddFinalProduct()}>Proceed</button>\r\n                </Modal>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Overview;","\r\nimport {useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal, { setAppElement } from 'react-modal';\r\nimport \"C:/Users/umada/my-application/src/Styling/Main.scss\";\r\n\r\n// add \r\n/*\r\n\r\n*/\r\n\r\nfunction ManageOptions(){\r\n\r\n  const url = \"https://management-backend-app.herokuapp.com/\";\r\n\r\n  \r\n\r\n    return(\r\n      <div class=\"main\" >\r\n          <div class=\"selection\">\r\n          \r\n          </div>\r\n\r\n          <div class=\"display\">\r\n\r\n          </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ManageOptions;","\r\nimport './Styling/App.scss'\r\nimport { BrowserRouter as Router,Routes, Route } from 'react-router-dom';\r\nimport Navigation from './Navigation';\r\nimport Home from'./Components/Home.js';\r\nimport Users from'./Components/Users.js';\r\nimport PurchaseOverview from'./Components/Purchase/Overview.js';\r\nimport ManagePurchaseOptions from'./Components/Purchase/ManageOptions.js';\r\nimport ProductionOverview from'./Components/Production/Overview.js';\r\nimport ManageProductionOptions from'./Components/Production/ManageOptions.js';\r\nimport SalesOverview from'./Components/Sales/Overview.js';\r\nimport ManageSalesOptions from'./Components/Sales/ManageOptions.js';\r\nimport \"./Styling/Navbar.scss\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div class=\"full\">\r\n      <Router>\r\n        <Route path='/:page' component={Navigation} />\r\n        <Route exact path='/' component={Navigation} />\r\n        <Route exact path='/' component={Home} />\r\n        <Route exact path='/home' component={Home} />\r\n        <Route exact path='/users' component={Users} />\r\n        <Route exact path='/purchaseOverview' component={PurchaseOverview} />\r\n        <Route exact path='/managePurchaseOptions' component={ManagePurchaseOptions} />\r\n        <Route exact path='/productionOverview' component={ProductionOverview} />\r\n        <Route exact path='/manageProductionOptions' component={ManageProductionOptions} />\r\n        <Route exact path='/salesOverview' component={SalesOverview} />\r\n        <Route exact path='/manageSalesOptions' component={ManageSalesOptions} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Styling/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}