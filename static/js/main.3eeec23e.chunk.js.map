{"version":3,"sources":["Navigation.js","Components/Home.js","Components/Users.js","Components/Overview.js","Components/ManageOptions.js","App.js","reportWebVitals.js","index.js"],"names":["NavLink","page","title","charAt","toUpperCase","slice","to","Navigation","Home","Users","Overview","plus","icon","faPlus","trash","faTrash","useState","purposes","setPurposes","materials","setMaterials","suppliers","setSuppliers","resources","setResources","statuses","setStatuses","modalResources","setModalResources","modalArchived","setModalArchived","weight","setWeight","price","setPrice","color","setColor","estimatedArrival","setEstimatedArrival","currentStatus","setCurrentStatus","currentMaterial","setCurrentMaterial","currentPurpose","setCurrentPurpose","currentSupplier","setCurrentSupplier","target","a","axios","get","then","result","data","fetchResources","useEffect","fetchPurpose","fetchSupplier","fetchMaterial","fetchStatuses","today","Date","month","getMonth","String","day","getDay","currentDate","getFullYear","id","onClick","map","resource","status","material","purpose","estimated_arrival","patch","isOpen","appElement","document","getElementById","delete","type","step","precision","onChange","e","value","handleMaterial","option","handlePurpose","handleSupplier","preventDefault","console","log","post","Math","round","toFixed","supplier","registry_date","addResource","ManageOptions","showSuppliers","setShowSuppliers","showPurpose","setShowPurpose","showMaterial","setShowMaterial","showWarning","modalPurpose","setModalPurpose","modalMaterial","setModalMaterial","modalSupplier","setModalSupplier","newTitle","setNewTitle","required","placeholder","addPurpose","addMaterial","addSupplier","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3eeec23e.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\n\r\nconst NavLink = ({ page }) => {\r\n  const title = page.charAt(0).toUpperCase() + page.slice(1);\r\n\r\n  return <Link to={`/${page}`}>{title}</Link>;\r\n};\r\n\r\n//Navigation bar where all choices are presented in the purchase interface\r\nconst Navigation = () => {\r\n    return (\r\n      <div>\r\n        <NavLink page='home' />\r\n        <NavLink page='users' />\r\n        <NavLink page='overview' />\r\n        <NavLink page='manageOptions' />\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Navigation;","\r\n\r\nfunction Home () {\r\n    return(\r\n\r\n        <div> hello home</div>\r\n    )\r\n}\r\n\r\nexport default Home;","function Users () {\r\n    return(\r\n\r\n        <div> hello Users</div>\r\n    )\r\n}\r\n\r\nexport default Users;","import {useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal, { setAppElement } from 'react-modal';\r\n\r\nfunction Overview () {\r\n\r\n    // icons\r\n    const plus = <FontAwesomeIcon icon={faPlus} />\r\n    const trash = <FontAwesomeIcon icon={faTrash} />\r\n\r\n    // hooks to store resource descriptor api value collections\r\n    const [purposes, setPurposes] = useState([]);\r\n    const [materials, setMaterials] = useState([]);\r\n    const [suppliers, setSuppliers] = useState([]);\r\n    const [resources, setResources] = useState([]);\r\n    const [statuses, setStatuses] = useState([]);\r\n\r\n    // modal dependencies\r\n    const [modalResources, setModalResources] = useState(false);\r\n    const [modalArchived,setModalArchived] = useState(false);\r\n\r\n    // hooks for adding a new resource\r\n    const [weight, setWeight] = useState(1.0);\r\n    const [price, setPrice] = useState(1.0);\r\n    const [color, setColor] = useState(\"#000000\");\r\n    const [estimatedArrival, setEstimatedArrival] = useState(\"2021-12-12\");\r\n    const [currentStatus,setCurrentStatus] = useState();\r\n    const [currentMaterial, setCurrentMaterial] = useState();\r\n    const [currentPurpose,setCurrentPurpose] = useState();\r\n    const [currentSupplier, setCurrentSupplier] = useState();\r\n\r\n    // functions to handle select events\r\n    async function handleMaterial(target){\r\n        await axios.get('http://localhost:8080/api/resourceMaterial/'+ target)\r\n        .then(result => { \r\n            setCurrentMaterial(result.data);\r\n        })\r\n    }\r\n    async function handlePurpose(target){\r\n        await axios.get('http://localhost:8080/api/resourcePurpose/'+ target)\r\n        .then(result => { \r\n            setCurrentPurpose(result.data);\r\n        })\r\n    }\r\n\r\n    async function handleSupplier(target){\r\n        await axios.get('http://localhost:8080/api/resourceSupplier/'+ target)\r\n        .then(result => { \r\n            setCurrentSupplier(result.data);\r\n        })\r\n    }\r\n\r\n    function handleResourceModal(){\r\n        setModalResources(true);\r\n        setCurrentMaterial(materials[0]);\r\n        setCurrentPurpose(purposes[0]);\r\n        setCurrentSupplier(suppliers[0]);\r\n        setCurrentStatus(statuses[0]);\r\n    }\r\n\r\n// internal functions \r\n    useEffect(() => {\r\n        fetchPurpose();\r\n        fetchSupplier();\r\n        fetchMaterial();\r\n        fetchStatuses();\r\n        fetchResources();\r\n    }, []);\r\n\r\n\r\n// fetching data functions\r\n    async function fetchPurpose(){\r\n        await axios.get('http://localhost:8080/api/resourcePurpose')\r\n        .then(result => { \r\n            setPurposes(result.data);\r\n    })}\r\n\r\n\r\n    async function fetchMaterial(){\r\n        await axios.get('http://localhost:8080/api/resourceMaterial')\r\n        .then(result => { \r\n            setMaterials(result.data);\r\n    })}\r\n    \r\n    async function fetchSupplier(){\r\n        await axios.get('http://localhost:8080/api/resourceSupplier')\r\n        .then(result => { \r\n            setSuppliers(result.data);\r\n    })}\r\n\r\n    async function fetchResources(){\r\n        await axios.get('http://localhost:8080/api/resources')\r\n        .then(result => { \r\n            setResources(result.data);\r\n    })}\r\n\r\n    async function fetchStatuses(){\r\n        await axios.get('http://localhost:8080/api/resourceStatus')\r\n        .then(result => { \r\n            setStatuses(result.data);\r\n    })}\r\n\r\n    // current date expression \r\n    const today = new Date();\r\n    const month = ((today.getMonth() +1) <10 ? \"0\" + String(today.getMonth() + 1) : String(today.getMonth()+1));\r\n    const day = (today.getDay()) < 10  ? \"0\" + String(today.getDay()) : String(today.getDay());\r\n    const currentDate =   String(today.getFullYear())+ \"-\" + month+ \"-\" + day;\r\n\r\n    // functions to add new properties\r\n    function addResource(e){\r\n        e.preventDefault();\r\n\r\n        console.log(currentStatus.status);\r\n        \r\n        axios.post('http://localhost:8080/api/resources',{\r\n        id: 0,\r\n        weight: Math.round(weight).toFixed(2) ,\r\n        price: Math.round(price).toFixed(2),\r\n        color: color,\r\n        purpose: currentPurpose,\r\n        material: currentMaterial,\r\n        status: currentStatus, // maybe not needed explicitly at all, just use statuses[0]\r\n        supplier: currentSupplier,\r\n        registry_date: currentDate,\r\n        estimated_arrival: estimatedArrival\r\n    })\r\n        .then(()=> fetchResources()); \r\n    }\r\n\r\n    // functions to otherwise alter/delete existing properties\r\n\r\n    function makeArchived(id){\r\n        axios.patch('http://localhost:8080/api/resources/'+ id,{\r\n            status: statuses[3],\r\n        })\r\n        fetchResources();\r\n    }\r\n\r\n    function deleteArchived(id){\r\n        axios.delete('http://localhost:8080/api/resources/'+ id)\r\n        fetchResources();\r\n    }\r\n\r\n\r\n    // displayed panel\r\n\r\n    return(\r\n        \r\n        <div id=\"main\">\r\n            \r\n            <button onClick={() => handleResourceModal()}>{plus}</button>\r\n            <button onClick={() => setModalArchived(true)}> See archived</button>\r\n\r\n            {/* Existing resources displayed over 3 panels, based on status*/}\r\n            <div id=\"panel\">\r\n                <h2>\r\n                    To be evaluated\r\n                </h2>\r\n                <div id=\"inner\">\r\n                    {resources.map(resource => (resource.status.status == \"To Evaluate\" ? \r\n                    resource.weight + \" kg of \" + resource.material.title + \" for \" + resource.purpose.title + \" due on \" + resource.estimated_arrival\r\n                    : null)\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"panel\">\r\n                <h2>\r\n                    Returned\r\n                </h2>\r\n                <div id=\"inner\">\r\n                {resources.map(resource => (resource.status.status == \"Returned\" ? \r\n                    resource.weight + \" kg of \" + resource.material.title + \" for \" + resource.purpose.title\r\n                    : null)\r\n                    )}\r\n                </div>\r\n            </div>\r\n            \r\n            <div id=\"panel\">\r\n                <h2>\r\n                    Accepted\r\n                </h2>\r\n                <div id=\"inner\">\r\n                {resources.map(resource => (resource.status.status == \"Accepted\" ? \r\n                    <p>{resource.weight} + \" kg of \" + {resource.material.title} + \" for \" + {resource.purpose.title} \r\n                    <button onClick={()=>makeArchived(resource.id)}>{trash}</button>\r\n                    </p>\r\n                    : null)\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Modal for archived resources and deletion*/}\r\n            <div>\r\n                <Modal\r\n                isOpen={modalArchived}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>Archived resources</h2>\r\n                    <button onClick={() => setModalArchived(false)}> Close </button>\r\n                    <div id=\"inner\">\r\n                    {resources.map(resource => (resource.status.status == \"Archived\" ? \r\n                    <p>{resource.weight} + \" kg of \" + {resource.material.title}\r\n                    <button onClick={() => deleteArchived(resource.id)}>{trash}</button>\r\n                    </p>\r\n                    : null)\r\n                    )}\r\n                </div>\r\n\r\n                </Modal>\r\n            </div>\r\n\r\n            {/* Modal for adding resources*/}\r\n            <div> {/* Resources modal*/}\r\n                <Modal\r\n                isOpen={modalResources}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>New Resource</h2>\r\n                    <button onClick={() => setModalResources(false)}> Close </button>\r\n\r\n                        <label>\r\n                            Weight\r\n                            <input type = \"number\" step={0.1} precision={1} onChange={(e) => setWeight(e.target.value)}></input>\r\n                        </label>\r\n                        \r\n                        <label>\r\n                            Price\r\n                            <input type = \"number\" step={0.1} precision={1} onChange={(e) => setPrice(e.target.value)}></input>   \r\n                        </label>\r\n                        \r\n                        <label>\r\n                            Color\r\n                            <input type = \"color\" onChange={(e) => setColor(e.target.value)}></input>\r\n                        </label>\r\n\r\n                        <label>\r\n                            Estimated Arrival date\r\n                            <input type = \"date\" onChange={(e) => setEstimatedArrival(e.target.value)}></input>    \r\n                        </label>\r\n\r\n                        <label>\r\n                            Material\r\n                            <select onChange={(e) => handleMaterial(e.target.value)}>\r\n                            {materials.map( option => \r\n                            <option key={option.id} value={option.id}>{option.title}</option>)}\r\n                            </select>\r\n                        </label>\r\n                        \r\n                        <label>\r\n                            Purposes\r\n                            <select onChange={(e) => handlePurpose(e.target.value)}>\r\n                            {purposes.map( option => \r\n                            <option key={option.id} value={option.id}>{option.title}</option>)}\r\n                            </select>\r\n                        </label>\r\n                        \r\n                        <label>\r\n                            Suppliers\r\n                            <select onChange={(e) => handleSupplier(e.target.value)}>\r\n                            {suppliers.map( option => \r\n                            <option key={option.id} value={option.id}>{option.title}</option>)}\r\n                            </select>\r\n                        </label>\r\n\r\n                        <button onClick = {e => addResource(e)}>Add a new Resource</button>\r\n                </Modal>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Overview;","import {useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal, { setAppElement } from 'react-modal';\r\n\r\nfunction ManageOptions () {\r\n\r\n// panels\r\nconst [showSuppliers, setShowSuppliers] = useState(false);\r\nconst [showPurpose, setShowPurpose] = useState(false);\r\nconst [showMaterial, setShowMaterial] = useState(false);\r\nconst [showWarning, setShowWarning] = useState(false); \r\n\r\n// mapped lists\r\nconst [purposes, setPurposes] = useState([]);\r\nconst [materials, setMaterials] = useState([]);\r\nconst [suppliers, setSuppliers] = useState([]);\r\n\r\n// modal dependencies\r\n\r\nconst [modalPurpose, setModalPurpose] = useState(false);\r\nconst [modalMaterial, setModalMaterial] = useState(false);\r\nconst [modalSupplier, setModalSupplier] = useState(false);\r\n\r\n// variables\r\n\r\nconst [newTitle, setNewTitle] = useState(\"\");\r\n\r\n// icons\r\nconst plus = <FontAwesomeIcon icon={faPlus} />\r\nconst trash = <FontAwesomeIcon icon={faTrash} />\r\n\r\n// internal functions\r\n\r\nuseEffect(() => {\r\n    fetchPurpose();\r\n    fetchSupplier();\r\n    fetchMaterial();\r\n    \r\n  }, []);\r\n\r\n\r\n// fetching data functions\r\n\r\nfunction fetchPurpose(){\r\n    axios.get('http://localhost:8080/api/resourcePurpose')\r\n    .then(result => { \r\n      setPurposes(result.data);\r\n    })\r\n}\r\n\r\n\r\nfunction fetchMaterial(){\r\n    axios.get('http://localhost:8080/api/resourceMaterial')\r\n    .then(result => { \r\n      setMaterials(result.data);\r\n    })\r\n}\r\n\r\nfunction fetchSupplier(){\r\n    axios.get('http://localhost:8080/api/resourceSupplier')\r\n    .then(result => { \r\n      setSuppliers(result.data);\r\n    })\r\n}\r\n\r\n// adding new data functions \r\n\r\nfunction addPurpose(e){\r\n    e.preventDefault();\r\n    axios.post('http://localhost:8080/api/resourcePurpose',{\r\n        id: 0,\r\n        title: newTitle\r\n    }).then(()=> fetchPurpose());\r\n}\r\n\r\nfunction addMaterial(e){\r\n    e.preventDefault();\r\n    axios.post('http://localhost:8080/api/resourceMaterial',{\r\n        id: 0,\r\n        title: newTitle\r\n    }).then(()=> fetchMaterial());\r\n}\r\n\r\nfunction addSupplier(e){\r\n    e.preventDefault();\r\n    axios.post('http://localhost:8080/api/resourceSupplier',{\r\n        id: 0,\r\n        title: newTitle\r\n    }).then(()=> fetchSupplier());\r\n}\r\n\r\n// deleting data functions\r\n\r\nfunction deletePurpose(id){\r\n    axios.delete('http://localhost:8080/api/resourcePurpose/' + id)\r\n    .then(()=> fetchPurpose());\r\n}\r\nfunction deleteMaterial(id){\r\n    axios.delete('http://localhost:8080/api/resourceMaterial/' + id)\r\n    .then(()=> fetchMaterial());\r\n}\r\nfunction deleteSupplier(id){\r\n    axios.delete('http://localhost:8080/api/resourceSupplier/' + id)\r\n    .then(()=> fetchSupplier());\r\n}\r\n\r\n// button handling functions\r\nfunction handlePurpose(){\r\n    setShowMaterial(false);\r\n    setShowSuppliers(false);\r\n    setShowPurpose(true);\r\n}\r\n\r\nfunction handleMaterial(){\r\n    setShowPurpose(false);\r\n    setShowSuppliers(false);\r\n    setShowMaterial(true);\r\n}\r\n\r\nfunction handleSupplier(){\r\n    setShowMaterial(false);\r\n    setShowPurpose(false);\r\n    setShowSuppliers(true);\r\n}\r\n\r\n\r\n    return(\r\n\r\n        <div id=\"main\">\r\n            <div id=\"selection\">\r\n\r\n                <button onClick={() => handlePurpose()}>Purpose</button>\r\n                <button onClick={() => handleMaterial()}>Material</button>\r\n                <button onClick={() => handleSupplier()}>Supplier</button>\r\n\r\n            </div>\r\n            <div id=\"display\">\r\n\r\n            {/*purpose pannel*/}\r\n            {showPurpose ?\r\n            <div id = \"inner\">\r\n                <button onClick={() => setModalPurpose(true)}>{plus}</button>\r\n                {purposes.map(purpose => <p key={purpose.id}>{purpose.title} \r\n                <button onClick = {() => deletePurpose(purpose.id)}>{trash}</button></p>)}\r\n                {/*map all, add new, delete*/}\r\n            </div>\r\n            :\r\n            <></>}\r\n\r\n            <div> {/*purpose modal*/}\r\n                <Modal\r\n                isOpen={modalPurpose}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>New supplier</h2>\r\n                    <button onClick={() => setModalPurpose(false)}> Close </button>\r\n                    <form>\r\n                        <input required type=\"text\" placeholder=\"New purpose\" onChange = {e => setNewTitle(e.target.value)}></input>\r\n                        <button onClick = {e => addPurpose(e)}>Add a new purpose</button>\r\n                    </form>\r\n                </Modal>\r\n            </div>\r\n\r\n            {/*material pannel*/}\r\n            {showMaterial ?\r\n            <div id = \"inner\">\r\n                <button onClick={() => setModalMaterial(true)}>{plus}</button>\r\n                {materials.map(material => <p key={material.id}>{material.title} \r\n                <button onClick = {() => deleteMaterial(material.id)}>{trash}</button></p>)}\r\n                {/*map all, add new, delete*/}\r\n            </div>\r\n            :\r\n            <></>}\r\n            \r\n            <div> {/*Material modal*/}\r\n                <Modal\r\n                isOpen={modalMaterial}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>New material</h2>\r\n                    <button onClick={() => setModalMaterial(false)}> Close </button>\r\n                    <form>\r\n                        <input required type=\"text\" placeholder=\"New material\" onChange = {e => setNewTitle(e.target.value)}></input>\r\n                        <button onClick = {e => addMaterial(e)}>Add a new material</button>\r\n                    </form>\r\n                </Modal>\r\n            </div>\r\n\r\n            {/*supplier pannel*/}\r\n            {showSuppliers ?\r\n            <div id = \"inner\">\r\n                <button onClick={() => setModalSupplier(true)}>{plus}</button>\r\n                {suppliers.map(supplier => <p key={supplier.id}>{supplier.title}\r\n                <button onClick = {() => deleteSupplier(supplier.id)} >{trash}</button></p>)}\r\n                {/*map all, add new, delete*/}\r\n            </div>\r\n            :\r\n            <></>}\r\n            </div>\r\n\r\n            <div> {/*Material modal*/}\r\n                <Modal\r\n                isOpen={modalSupplier}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>New Supplier</h2>\r\n                    <button onClick={() => setModalSupplier(false)}> Close </button>\r\n                    <input type=\"text\" placeholder=\"New Supplier\" onChange = {e => setNewTitle(e.target.value)}></input>\r\n                    <button onClick = {e => addSupplier(e)}>Add a new supplier</button>\r\n                    \r\n                    {/*make warning work - otherwise form is to be used*/}\r\n                    {showWarning ?\r\n                    <p> Please fill in the field! </p>\r\n                    :\r\n                    <></>}\r\n\r\n                </Modal>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ManageOptions;","\nimport './Styling/App.scss'\nimport { BrowserRouter as Router,Routes, Route } from 'react-router-dom';\nimport Navigation from './Navigation';\nimport Home from'./Components/Home.js';\nimport Users from'./Components/Users.js';\nimport Overview from'./Components/Overview.js';\nimport ManageOptions from'./Components/ManageOptions.js';\n\nfunction App() {\n  return (\n    <div id=\"main\">\n      <Router>\n         {/*added Routes here, though worked just fine before*/}\n        <Route path='/:page' component={Navigation} />\n        <Route exact path='/' component={Navigation} />\n        <Route exact path='/' component={Home} />\n        <Route exact path='/home' component={Home} />\n        <Route exact path='/users' component={Users} />\n        <Route exact path='/overview' component={Overview} />\n        <Route exact path='/manageOptions' component={ManageOptions} />\n        \n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Styling/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}