{"version":3,"sources":["../node_modules/express/lib sync","Navigation.js","Components/Home.js","Components/Users.js","Components/Purchase/Overview.js","Components/Purchase/ManageOptions.js","Components/Production/Overview.js","Components/Production/ManageOptions.js","Components/Sales/Overview.js","Components/Sales/ManageOptions.js","App.js","reportWebVitals.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Navigation","home","icon","faHome","users","faUsers","message","faComment","email","faEnvelope","inbox","faInbox","download","faDownload","currentDate","Date","year","String","getFullYear","displayDate","getDay","getDate","padStart","getMonth","class","to","Home","Users","Overview","url","plus","faPlus","trash","faTrash","useState","supplierFeedbackPanel","showSupplierFeedbackPanel","resourcePanel","showReasourcePanel","purposes","setPurposes","materials","setMaterials","suppliers","setSuppliers","resources","setResources","statuses","setStatuses","supplierFeedbacks","setSupplierFeedbacks","modalResources","setModalResources","modalArchived","setModalArchived","modalSupplierFeedback","setModalSupplierFeedback","modalDateUpdate","setModalDateUpdate","modalReplaceResource","setModalReplaceResource","currentId","setCurrentId","currentWeight","setCurrentWeight","currentPrice","setCurrentPrice","currentColor","setCurrentColor","currentEstimatedArrival","setCurrentEstimatedArrival","currentStatus","setCurrentStatus","currentMaterial","setCurrentMaterial","currentPurpose","setCurrentPurpose","currentSupplier","setCurrentSupplier","specifiedSupplier","setSpecifiedSupplier","currentReasoning","setCurrentReasoning","a","axios","get","then","result","data","fetchResources","useEffect","fetchPurpose","fetchSupplier","fetchMaterial","fetchStatuses","fetchSupplierFeedbacks","today","month","day","addResource","preventDefault","post","color","estimatedArrival","material","price","purpose","registryDate","status","supplier","weight","onClick","title","map","resource","onChange","target","value","option","feedback","resourceID","qualityReasoning","purchaseReasoning","isOpen","appElement","document","getElementById","type","length","addSupplierFeedback","delete","patch","patchDate","min","step","precision","put","ManageOptions","showSuppliers","setShowSuppliers","showPurpose","setShowPurpose","showMaterial","setShowMaterial","showWarning","modalPurpose","setModalPurpose","modalMaterial","setModalMaterial","modalSupplier","setModalSupplier","newTitle","setNewTitle","required","placeholder","addPurpose","addMaterial","addSupplier","showResourceEvaluation","setShowResourceEvaluation","showProductPlans","setShowProductPlans","modalResourceEvaluation","setModalEvaluation","modalProductPlan","setModalProductPlan","modalReceive","setModalReceive","resourceEvaluations","setResourceEvaluations","productPlans","setProductPlans","productTypes","setProductTypes","currentRegistryDate","setCurrentRegistryDate","currentEvaluationReasoning","setCurrentEvaluationReasoning","currentResourceID","setCurrentResourceID","currentProductType","setCurrentProductType","currentEstimatedQuantity","setCurrentEstimatedQuantity","currentUsedWeight","setCurrentUsedWeight","currentQualityReasoning","setCurrentQualityReasoning","fetchResourceEvaluations","fetchProductPlans","putStatus","selectedStatus","GetOneCategory","props","cat","fetchSuppliers","fetchProductTypes","onMouseOver","evaluation","receivedAt","acceptable","resourceId","plan","estimatedQuantity","productType","done","catch","error","console","log","patchQualityReasoning","evaluationReasoning","addResourceEvaluation","productCategoryID","usedWeight","addProductPlan","productCategories","setProductCategories","showProductTypes","setShowProductTypes","showProductCategories","setShowProductCategories","modalProductType","setModalProductType","modalProductCategory","setModalProductCategory","currentProductCategoryID","setCurrentProductCategoryID","currentType","setCurrentType","currentTitle","setCurrentTitle","fetchProductCategories","deleteProductType","category","deleteProductCategory","addProductType","addProductCategory","productOverviewPanel","setProductOverviewPanel","profitPanel","setProfitPanel","App","path","component","exact","PurchaseOverview","ManagePurchaseOptions","ProductionOverview","ManageProductionOptions","SalesOverview","ManageSalesOptions","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.182dcca9.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 321;","import { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome, faUsers, faEnvelope, faComment, faInbox, faFileDownload, faDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport \"./Styling/Navbar.scss\";\r\n//Navigation bar where all choices are presented in the purchase interface\r\n\r\n// good optionals\r\n\r\n// send emails for externals\r\n// send chats for internals\r\n// look in inbox for internal chats\r\n// download a report (choose from API)\r\n\r\n\r\n\r\nconst Navigation = () => {\r\n  // icons\r\n  const home = <FontAwesomeIcon icon={faHome} />\r\n  const users = <FontAwesomeIcon icon={faUsers} />\r\n  const message = <FontAwesomeIcon icon={faComment} />\r\n  const email = <FontAwesomeIcon icon={faEnvelope} />\r\n  const inbox = <FontAwesomeIcon icon={faInbox} />\r\n  const download = <FontAwesomeIcon icon={faDownload} />\r\n\r\n  const weekdays= [\"Monday\",\"Tuesday\", \"Wednesday\", \"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"]\r\n  // variables\r\n  const currentDate = new Date();\r\n  var year = String(currentDate.getFullYear());\r\n  var weekday = String(weekdays[currentDate.getDay()-1]);\r\n  var day = String(currentDate.getDate()).padStart(2, '0');\r\n  var month = String(currentDate.getMonth()+1).padStart(2, '0');\r\n  var displayDate = weekday + \" \" + day + \"/\" +month + \"/\" +year;\r\n\r\n\r\n    return (\r\n      <div class=\"navigation\">\r\n        <div class=\"upper\">\r\n        <Link to=\"/home\"><button class=\"navButton\" id=\"small\">{home}</button></Link>\r\n        <Link to=\"/users\"><button class=\"navButton\" id=\"small\">{users}</button></Link>\r\n        <Link to=\"/purchaseOverview\"><button class=\"navButton\">Purchase Overview</button></Link>\r\n        <Link to=\"/managePurchaseOptions\"><button class=\"navButton\">Purchase Options</button></Link>\r\n        <Link to=\"/productionOverview\"><button class=\"navButton\">Production Overview</button></Link>\r\n        <Link to=\"/manageProductionOptions\"><button class=\"navButton\">Production Options</button></Link>\r\n        <Link to=\"/salesOverview\"><button class=\"navButton\">Sales Overview</button></Link>\r\n        <Link to=\"/manageSalesOverview\"><button class=\"navButton\">Sales Options</button></Link>\r\n        </div>\r\n        <div class=\"lower\">\r\n          <span class=\"details\">{displayDate}</span>\r\n          \r\n          <button class=\"navButton\" id=\"Wsmall\">{download}</button>\r\n          <button class=\"navButton\" id=\"Wsmall\">{email}</button>\r\n          <button class=\"navButton\" id=\"Wsmall\">{message}</button>\r\n          <button class=\"navButton\" id=\"Wsmall\">{inbox}</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Navigation;\r\n\r\n\r\n\r\n  \r\n","import {useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal, { setAppElement } from 'react-modal';\r\nimport \"C:/Users/umada/my-application/src/Styling/Main.scss\";\r\n\r\n// to do list (cleans in a day)\r\n// \r\n\r\n\r\nfunction Home () {\r\n    return(\r\n\r\n        <div class=\"main\" >\r\n            <div class=\"selection\">\r\n                \r\n            </div>\r\n\r\n            <div class=\"display\">\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import {useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal, { setAppElement } from 'react-modal';\r\nimport \"C:/Users/umada/my-application/src/Styling/Main.scss\";\r\nfunction Users () {\r\n    return(\r\n\r\n        <div class=\"main\">\r\n            <div class=\"selection\">\r\n\r\n            </div>\r\n            <div class=\"display\">\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import {useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal, { setAppElement } from 'react-modal';\r\nimport \"C:/Users/umada/my-application/src/Styling/Main.scss\";\r\nimport e from \"express\";\r\n\r\nfunction Overview () {\r\n    const url = \"https://management-backend-app.herokuapp.com/api/\";\r\n    // icons\r\n    const plus = <FontAwesomeIcon icon={faPlus} />\r\n    const trash = <FontAwesomeIcon icon={faTrash} />\r\n\r\n    // Supplier feedback pannel \r\n\r\n    const [supplierFeedbackPanel, showSupplierFeedbackPanel] = useState(false);\r\n    const [resourcePanel, showReasourcePanel] = useState(true);\r\n\r\n    // hooks to store resource descriptor api value collections\r\n    const [purposes, setPurposes] = useState([]);\r\n    const [materials, setMaterials] = useState([]);\r\n    const [suppliers, setSuppliers] = useState([]);\r\n    const [resources, setResources] = useState([]);\r\n    const [statuses, setStatuses] = useState([]);\r\n    const [supplierFeedbacks,setSupplierFeedbacks] = useState([]);\r\n\r\n    // hooks to collect suppliers' feedback\r\n\r\n    // modal dependencies\r\n    const [modalResources, setModalResources] = useState(false);\r\n    const [modalArchived,setModalArchived] = useState(false);\r\n    const [modalSupplierFeedback, setModalSupplierFeedback] = useState(false);\r\n    const [modalDateUpdate, setModalDateUpdate] = useState(false);\r\n    const [modalReplaceResource, setModalReplaceResource] = useState(false);\r\n\r\n    // hooks for adding a new resource\r\n    const [currentId, setCurrentId] = useState(null);\r\n    const [currentWeight, setCurrentWeight] = useState(1.0);\r\n    const [currentPrice, setCurrentPrice] = useState(1.0);\r\n    const [currentColor, setCurrentColor] = useState(\"#000000\");\r\n    const [currentEstimatedArrival, setCurrentEstimatedArrival] = useState(\"2021-12-12\");\r\n    const [currentStatus,setCurrentStatus] = useState(\"\");\r\n    const [currentMaterial, setCurrentMaterial] = useState(\"\");\r\n    const [currentPurpose,setCurrentPurpose] = useState(\"\");\r\n    const [currentSupplier, setCurrentSupplier] = useState(\"\");\r\n\r\n    const [specifiedSupplier,setSpecifiedSupplier] = useState([]);\r\n\r\n    // hooks for adding a new supplier feedback\r\n    const [currentReasoning,setCurrentReasoning] = useState(\"\");\r\n\r\n    // functions to handle modal interactions\r\n\r\n    function handleResourceModal(){\r\n        // clearing old modal values\r\n        setModalResources(true);\r\n        setCurrentMaterial(materials[0].title);\r\n        setCurrentPurpose(purposes[0].title);\r\n        setCurrentSupplier(suppliers[0].title);\r\n        setCurrentStatus(statuses[0].status);\r\n    }\r\n\r\n    function handleSupplierFeedbackModal(){\r\n        setModalResources(false);\r\n        setModalSupplierFeedback(true);\r\n        // old resource ID based on the length of list, \r\n        // as well as supplier is clear from previous selection\r\n        setCurrentReasoning(\"\"); // cleaning up the previous value\r\n    }\r\n\r\n    function handlePatchDate(id){\r\n        setCurrentId(id);\r\n        setModalDateUpdate(true);\r\n    }\r\n\r\n    function handlePutReplaceResource(id, weight, material, color, purpose){\r\n        setCurrentId(id);\r\n        setCurrentWeight(weight);\r\n        setCurrentMaterial(material);\r\n        setCurrentColor(color);\r\n        setCurrentPurpose(purpose);\r\n        setModalReplaceResource(true);\r\n    }\r\n\r\n    // functions that manage appearance when buttons are clicked.\r\n\r\n    function handleSupplierFeedbackPanel(){\r\n        showReasourcePanel(false)\r\n        showSupplierFeedbackPanel(true)\r\n    }\r\n\r\n    function handleResourcePanel(){\r\n        showSupplierFeedbackPanel(false);\r\n        showReasourcePanel(true)\r\n    }\r\n\r\n// internal functions \r\n    useEffect(() => {\r\n        fetchPurpose();\r\n        fetchSupplier();\r\n        fetchMaterial();\r\n        fetchStatuses();\r\n        fetchResources();\r\n        fetchSupplierFeedbacks();\r\n    }, []);\r\n\r\n\r\n// fetching data functions\r\n\r\n    async function fetchPurpose(){\r\n        await axios.get(url+'resourcePurpose')\r\n        .then(result => { \r\n            setPurposes(result.data);\r\n    })}\r\n\r\n    async function fetchMaterial(){\r\n        await axios.get(url+'resourceMaterial')\r\n        .then(result => { \r\n            setMaterials(result.data);\r\n    })}\r\n    \r\n    async function fetchSupplier(){\r\n        await axios.get(url+'resourceSupplier')\r\n        .then(result => { \r\n            setSuppliers(result.data);\r\n    })}\r\n\r\n    async function fetchResources(){\r\n        await axios.get(url+'textileResources')\r\n        .then(result => { \r\n            setResources(result.data);\r\n    })}\r\n\r\n    async function fetchStatuses(){\r\n        await axios.get(url+'resourceStatus')\r\n        .then(result => { \r\n            setStatuses(result.data);\r\n    })}\r\n\r\n    async function fetchSupplierFeedbacks(){\r\n        await axios.get()\r\n        .then(result =>\r\n            setSupplierFeedbacks(result.data));\r\n    }\r\n\r\n    // current date expression \r\n    const today = new Date();\r\n    const month = ((today.getMonth() +1) <10 ? \"0\" + String(today.getMonth() + 1) : String(today.getMonth()+1));\r\n    const day = (today.getDate()) < 10  ? \"0\" + String(today.getDate()) : String(today.getDate());\r\n    const currentDate =   String(today.getFullYear())+ \"-\" + month+ \"-\" + day;\r\n\r\n    // functions to add new properties\r\n    function addResource(e){\r\n        e.preventDefault();\r\n        axios.post(url+'textileResources',{\r\n        color: currentColor,\r\n        estimatedArrival: currentEstimatedArrival,\r\n        id: 0,\r\n        material: currentMaterial,\r\n        price: currentPrice,\r\n        purpose: currentPurpose,\r\n        registryDate: currentDate,\r\n        status: currentStatus,\r\n        supplier: currentSupplier,\r\n        weight: currentWeight\r\n    })\r\n        .then(()=> fetchResources()); \r\n        handleSupplierFeedbackModal();\r\n    }\r\n\r\n    function addSupplierFeedback(e){\r\n        e.preventDefault();\r\n        axios.post(url+'textileResources', {\r\n            resourceID: resources.length,\r\n            supplier: currentSupplier,\r\n            purchaseReasoning: currentReasoning,\r\n            qualityReasoning: \"\"\r\n        })\r\n        setModalSupplierFeedback(false);\r\n    }\r\n\r\n    // functions to otherwise alter/delete existing properties\r\n\r\n    function deleteArchived(id){\r\n        axios.delete('textileResources/'+ id)\r\n        fetchResources();\r\n    }\r\n\r\n    function patchDate(e){\r\n        e.preventDefault();\r\n        axios.patch('textileResources/'+ currentId,{\r\n            estimatedArrival: currentEstimatedArrival\r\n        })\r\n        fetchResources();\r\n        setModalDateUpdate(false);\r\n    }\r\n\r\n    function putReplaceResource(e){\r\n        e.preventDefault();\r\n        axios.put('textileResources/'+ currentId,{\r\n            estimatedArrival: currentEstimatedArrival,\r\n            registryDate: currentDate,\r\n            material: currentMaterial,\r\n            price: currentPrice,\r\n            status: statuses[0].status,\r\n            supplier: currentSupplier,\r\n            purpose: currentPurpose,\r\n            weight: currentWeight,\r\n            color: currentColor\r\n        });\r\n        fetchResources();\r\n        setModalReplaceResource(false);\r\n    }\r\n\r\n    return(\r\n        \r\n        <div class=\"main\">\r\n\r\n            <div class=\"selection\">\r\n            <button class=\"selectionButton\" onClick={() => handleResourceModal()}>{plus}</button>\r\n            <button class=\"selectionButton\" onClick= {() => handleResourcePanel()}>See resources</button>\r\n            <button class=\"selectionButton\" onClick= {() => handleSupplierFeedbackPanel()}>Supplier feedback</button>\r\n            <button class=\"selectionButton\" onClick={() => setModalArchived(true)}> See archived</button>\r\n            </div>\r\n\r\n            <div class = \"display\">\r\n\r\n            {resourcePanel&&(\r\n\r\n                <div class = \"filler\">\r\n                <div class=\"panel\">\r\n                <h2>\r\n                    To be evaluated\r\n                </h2>\r\n                <div class=\"inner\">\r\n                    {resources.map(resource => (resource.status == \"To Evaluate\" ? \r\n                    <ul>{resource.weight} kg of {resource.material} for {resource.purpose} due on {resource.estimatedArrival}\r\n                    \r\n                    {resource.estimatedArrival<currentDate?\r\n                    <button onClick={()=> handlePatchDate(resource.id)}>Update arrival date</button>\r\n                    :\r\n                    null\r\n                    }\r\n                    </ul>\r\n                    : null)\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"panel\">\r\n                <h2>\r\n                    Returned\r\n                </h2>\r\n                <div class=\"inner\">\r\n                {resources.map(resource => (resource.status == \"Returned\" ? \r\n                    <ul>{resource.weight} kg of {resource.material} for {resource.purpose}\r\n                    <button onClick= {() => handlePutReplaceResource(resource.id, resource.weight,\r\n                         resource.material, resource.color, resource.purpose)}>\r\n                        Replace</button>\r\n                    </ul>\r\n                    : null)\r\n                    )}\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"panel\" id=\"end\">\r\n                <h2>\r\n                    Accepted\r\n                </h2>\r\n                <div class=\"inner\">\r\n                {resources.map(resource => (resource.status== \"Accepted\" ? \r\n                    <ul>{resource.material} for {resource.purpose}\r\n                    </ul>\r\n                    : null)\r\n                    )}\r\n                </div>\r\n            </div>\r\n            </div>\r\n            )}\r\n\r\n            {supplierFeedbackPanel&&(\r\n                <div>\r\n                    <h2>Search by supplier</h2>\r\n                    <select onChange={(e) => setSpecifiedSupplier(e.target.value)}>\r\n                        {suppliers.map( option => \r\n                        <option key={option.id} value={option.title}>\r\n                            {option.title}\r\n                        </option>)}\r\n                    </select>\r\n\r\n                    {supplierFeedbacks.map(feedback =>\r\n                        (feedback.supplier == specifiedSupplier ?\r\n                            <p>Supplier: {feedback.supplier} \r\n                            for resource {feedback.resourceID}\r\n                            Quality: {feedback.qualityReasoning} \r\n                            Communication: {feedback.purchaseReasoning}</p>\r\n                            :\r\n                            null\r\n                        )\r\n                    )}\r\n                    \r\n                </div>\r\n            )}\r\n\r\n            {/* Modal for supplier feedback*/}\r\n\r\n            <div>\r\n                <Modal\r\n                isOpen={modalSupplierFeedback}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>Add feedback to describe supplier's communication</h2>\r\n                    <input type=\"text\" onChange={(e)=> setCurrentReasoning(e.target.value)}></input>\r\n                    <button onClick = {(e) => addSupplierFeedback(e)}>Complete</button>\r\n                </Modal>\r\n            </div>\r\n\r\n            {/* Modal for archived resources and deletion*/}\r\n            <div>\r\n                <Modal\r\n                isOpen={modalArchived}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>Archived resources</h2>\r\n                    <button onClick={() => setModalArchived(false)}> Close </button>\r\n                    <div class=\"inner\">\r\n                    {resources.map(resource => (resource.status == \"Archived\" ? \r\n                    <ul>{resource.weight} kg of {resource.material} for {resource.purpose}\r\n                    <button onClick={() => deleteArchived(resource.id)}>{trash}</button>\r\n                    </ul>\r\n                    : null)\r\n                    )}\r\n                </div>\r\n\r\n                </Modal>\r\n            </div>\r\n\r\n            {/* Modal for changing the date of a resource*/}\r\n\r\n            <div>\r\n                <Modal\r\n                isOpen={modalDateUpdate}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>Set a new date</h2>\r\n                    <label>\r\n                            Estimated Arrival date\r\n                            <input type = \"date\" onChange={(e) => setCurrentEstimatedArrival(e.target.value)}></input>    \r\n                    </label>\r\n                    <button onClick = {(e) => patchDate(e)}>Set</button>\r\n                \r\n                </Modal>\r\n            </div>\r\n\r\n            {/* Modal for replacing returned resources*/}\r\n\r\n            <div>\r\n                <Modal\r\n                isOpen={modalReplaceResource}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>Replace a returned resource</h2>\r\n                    <button onClick={() => setModalArchived(false)}> Close </button>\r\n                    <div class=\"inner\">\r\n                    <label>\r\n                            Suppliers\r\n                            <select onChange={(e) => setCurrentSupplier(e.target.value)}>\r\n                            {suppliers.map( option => \r\n                            <option key={option.id} value={option.title}>{option.title}</option>)}\r\n                            </select>\r\n                    </label>\r\n                    <label>\r\n                            Estimated Arrival date\r\n                            <input type = \"date\" onChange={(e) => setCurrentEstimatedArrival(e.target.value)}></input>    \r\n                    </label>\r\n                    <label>\r\n                        Price\r\n                        <input type = \"number\" min=\"0\" step={10} precision={0.1} onChange={(e) => setCurrentPrice(e.target.value)}></input>   \r\n                    </label>\r\n                    <button onClick={() => putReplaceResource(e)}>Replace</button>\r\n\r\n                </div>\r\n\r\n                </Modal>\r\n            </div>\r\n\r\n\r\n            {/* Modal for adding resources*/}\r\n            <div> {/* Resources modal*/}\r\n                <Modal\r\n                isOpen={modalResources}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>New Resource</h2>\r\n                    <button onClick={() => setModalResources(false)}> Close </button>\r\n\r\n                        <label>\r\n                            Weight\r\n                            <input type = \"number\" min=\"0\" step={10} precision={0.1} onChange={(e) => setCurrentWeight(e.target.value)}></input>\r\n                        </label>\r\n                        \r\n                        <label>\r\n                            Price\r\n                            <input type = \"number\" min=\"0\" step={10} precision={0.1} onChange={(e) => setCurrentPrice(e.target.value)}></input>   \r\n                        </label>\r\n                        \r\n                        <label>\r\n                            Color\r\n                            <input type = \"color\" onChange={(e) => setCurrentColor(e.target.value)}></input>\r\n                        </label>\r\n\r\n                        <label>\r\n                            Estimated Arrival date\r\n                            <input type = \"date\" onChange={(e) => setCurrentEstimatedArrival(e.target.value)}></input>    \r\n                        </label>\r\n\r\n                        <label>\r\n                            Material\r\n                            <select onChange={(e) => setCurrentMaterial(e.target.value)}>\r\n                            {materials.map( option => \r\n                            <option key={option.id} value={option.title}>{option.title}</option>)}\r\n                            </select>\r\n                        </label>\r\n                        \r\n                        <label>\r\n                            Purposes\r\n                            <select onChange={(e) => setCurrentPurpose(e.target.value)}>\r\n                            {purposes.map( option => \r\n                            <option key={option.id} value={option.title}>{option.title}</option>)}\r\n                            </select>\r\n                        </label>\r\n                        \r\n                        <label>\r\n                            Suppliers\r\n                            <select onChange={(e) => setCurrentSupplier(e.target.value)}>\r\n                            {suppliers.map( option => \r\n                            <option key={option.id} value={option.title}>{option.title}</option>)}\r\n                            </select>\r\n                        </label>\r\n\r\n                        <button onClick = {e => addResource(e)}>Proceed</button>\r\n                </Modal>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Overview;","import {useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal, { setAppElement } from 'react-modal';\r\nimport \"C:/Users/umada/my-application/src/Styling/Main.scss\";\r\n\r\n// eliminate deletion\r\n\r\n// purchase interface \r\n\r\nfunction ManageOptions () {\r\nconst url = \"https://management-backend-app.herokuapp.com/\";\r\n// panels\r\nconst [showSuppliers, setShowSuppliers] = useState(false);\r\nconst [showPurpose, setShowPurpose] = useState(false);\r\nconst [showMaterial, setShowMaterial] = useState(false);\r\nconst [showWarning, setShowWarning] = useState(false); \r\n\r\n// mapped lists\r\nconst [purposes, setPurposes] = useState([]);\r\nconst [materials, setMaterials] = useState([]);\r\nconst [suppliers, setSuppliers] = useState([]);\r\n\r\n// modal dependencies\r\n\r\nconst [modalPurpose, setModalPurpose] = useState(false);\r\nconst [modalMaterial, setModalMaterial] = useState(false);\r\nconst [modalSupplier, setModalSupplier] = useState(false);\r\n\r\n// variables\r\n\r\nconst [newTitle, setNewTitle] = useState(\"\");\r\n\r\n// icons\r\nconst plus = <FontAwesomeIcon icon={faPlus} />\r\nconst trash = <FontAwesomeIcon icon={faTrash} />\r\n\r\n// internal functions\r\n\r\nuseEffect(() => {\r\n    fetchPurpose();\r\n    fetchSupplier();\r\n    fetchMaterial();\r\n    \r\n  }, []);\r\n\r\n\r\n// fetching data functions\r\n\r\n\r\n\r\nfunction fetchPurpose(){\r\n    axios.get(url+'api/resourcePurpose')\r\n    .then(result => { \r\n      setPurposes(result.data);\r\n    })\r\n}\r\n\r\n\r\nfunction fetchMaterial(){\r\n    axios.get(url+'api/resourceMaterial')\r\n    .then(result => { \r\n      setMaterials(result.data);\r\n    })\r\n}\r\n\r\nfunction fetchSupplier(){\r\n    axios.get(url+'api/resourceSupplier')\r\n    .then(result => { \r\n      setSuppliers(result.data);\r\n    })\r\n}\r\n\r\n// adding new data functions \r\n\r\nfunction addPurpose(e){\r\n    e.preventDefault();\r\n    axios.post(url+'api/resourcePurpose',{\r\n        id: 0,\r\n        title: newTitle\r\n    }).then(()=> fetchPurpose());\r\n}\r\n\r\nfunction addMaterial(e){\r\n    e.preventDefault();\r\n    axios.post(url+'api/resourceMaterial',{\r\n        id: 0,\r\n        title: newTitle\r\n    }).then(()=> fetchMaterial());\r\n}\r\n\r\nfunction addSupplier(e){\r\n    e.preventDefault();\r\n    axios.post(url+'api/resourceSupplier',{\r\n        id: 0,\r\n        title: newTitle\r\n    }).then(()=> fetchSupplier());\r\n}\r\n\r\n// deleting data functions\r\n\r\n// if error 500, pop open a warning modal!!!\r\nfunction deletePurpose(id){\r\n    axios.delete(url+'api/resourcePurpose/' + id)\r\n    .then(()=> fetchPurpose());\r\n}\r\nfunction deleteMaterial(id){\r\n    axios.delete(url+'api/resourceMaterial/' + id)\r\n    .then(()=> fetchMaterial());\r\n}\r\nfunction deleteSupplier(id){\r\n    axios.delete(url+'api/resourceSupplier/' + id)\r\n    .then(()=> fetchSupplier());\r\n}\r\n\r\n// button handling functions\r\nfunction handlePurpose(){\r\n    setShowMaterial(false);\r\n    setShowSuppliers(false);\r\n    setShowPurpose(true);\r\n}\r\n\r\nfunction handleMaterial(){\r\n    setShowPurpose(false);\r\n    setShowSuppliers(false);\r\n    setShowMaterial(true);\r\n}\r\n\r\nfunction handleSupplier(){\r\n    setShowMaterial(false);\r\n    setShowPurpose(false);\r\n    setShowSuppliers(true);\r\n}\r\n\r\n\r\n    return(\r\n\r\n        <div class=\"main\">\r\n            <div class=\"selection\">\r\n\r\n                <button class=\"selectionButton\" onClick={() => handlePurpose()}>Purpose</button>\r\n                <button class=\"selectionButton\" onClick={() => handleMaterial()}>Material</button>\r\n                <button class=\"selectionButton\" onClick={() => handleSupplier()}>Supplier</button>\r\n\r\n            </div>\r\n            <div class=\"display\">\r\n\r\n            {/*purpose pannel*/}\r\n            {showPurpose ?\r\n            <div id = \"inner\">\r\n                <button class=\"additionButton\" onClick={() => setModalPurpose(true)}>{plus}</button>\r\n                {purposes.map(purpose => <ul key={purpose.id}>{purpose.title} \r\n                <button onClick = {() => deletePurpose(purpose.id)}>{trash}</button></ul>)}\r\n                {/*map all, add new, delete*/}\r\n            </div>\r\n            :\r\n            <></>}\r\n\r\n            <div> {/*purpose modal*/}\r\n                <Modal\r\n                isOpen={modalPurpose}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>New supplier</h2>\r\n                    <button onClick={() => setModalPurpose(false)}> Close </button>\r\n                    <form>\r\n                        <input required type=\"text\" placeholder=\"New purpose\" onChange = {e => setNewTitle(e.target.value)}></input>\r\n                        <button onClick = {e => addPurpose(e)}>Add a new purpose</button>\r\n                    </form>\r\n                </Modal>\r\n            </div>\r\n\r\n            {/*material pannel*/}\r\n            {showMaterial ?\r\n            <div id = \"inner\">\r\n                <button class=\"additionButton\" onClick={() => setModalMaterial(true)}>{plus}</button>\r\n                {materials.map(material => <ul key={material.id}>{material.title} \r\n                <button onClick = {() => deleteMaterial(material.id)}>{trash}</button></ul>)}\r\n                {/*map all, add new, delete*/}\r\n            </div>\r\n            :\r\n            <></>}\r\n            \r\n            <div> {/*Material modal*/}\r\n                <Modal\r\n                isOpen={modalMaterial}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>New material</h2>\r\n                    <button onClick={() => setModalMaterial(false)}> Close </button>\r\n                    <form>\r\n                        <input required type=\"text\" placeholder=\"New material\" onChange = {e => setNewTitle(e.target.value)}></input>\r\n                        <button onClick = {e => addMaterial(e)}>Add a new material</button>\r\n                    </form>\r\n                </Modal>\r\n            </div>\r\n\r\n            {/*supplier pannel*/}\r\n            {showSuppliers ?\r\n            <div id = \"inner\">\r\n                <button class=\"additionButton\" onClick={() => setModalSupplier(true)}>{plus}</button>\r\n                {suppliers.map(supplier => <ul key={supplier.id}>{supplier.title}\r\n                <button onClick = {() => deleteSupplier(supplier.id)} >{trash}</button></ul>)}\r\n                {/*map all, add new, delete*/}\r\n            </div>\r\n            :\r\n            <></>}\r\n            \r\n            <div> {/*Material modal*/}\r\n                <Modal\r\n                isOpen={modalSupplier}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>New Supplier</h2>\r\n                    <button onClick={() => setModalSupplier(false)}> Close </button>\r\n                    <input type=\"text\" placeholder=\"New Supplier\" onChange = {e => setNewTitle(e.target.value)}></input>\r\n                    <button onClick = {e => addSupplier(e)}>Add a new supplier</button>\r\n                    \r\n                    {/*make warning work - otherwise form is to be used*/}\r\n                    {showWarning ?\r\n                    <p> Please fill in the field! </p>\r\n                    :\r\n                    <></>}\r\n\r\n                </Modal>\r\n            </div>\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ManageOptions;","\r\n\r\nimport {useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal, { setAppElement } from 'react-modal';\r\nimport \"C:/Users/umada/my-application/src/Styling/Main.scss\";\r\n\r\nfunction Overview(){\r\n\r\n    const url = \"https://management-backend-app.herokuapp.com/\";\r\n    // icons\r\n    const plus = <FontAwesomeIcon icon={faPlus} />\r\n    const trash = <FontAwesomeIcon icon={faTrash} />\r\n\r\n    // current date expression \r\n    const today = new Date();\r\n    const month = ((today.getMonth() +1) <10 ? \"0\" + String(today.getMonth() + 1) : String(today.getMonth()+1));\r\n    const day = (today.getDate()) < 10  ? \"0\" + String(today.getDate()) : String(today.getDate());\r\n    const currentDate =   String(today.getFullYear())+ \"-\" + month+ \"-\" + day;\r\n\r\n    // panels\r\n\r\n    const [showResourceEvaluation, setShowResourceEvaluation] = useState(true);\r\n    const [showProductPlans, setShowProductPlans] = useState(false);\r\n\r\n    // modal dependencies\r\n\r\n    const [modalResourceEvaluation, setModalEvaluation] = useState(false);\r\n    const [modalProductPlan, setModalProductPlan] = useState(false);\r\n    const [modalSupplierFeedback, setModalSupplierFeedback] = useState(false);\r\n    const [modalReceive,setModalReceive] = useState(false);\r\n\r\n    // fetched lists\r\n\r\n    const [suppliers, setSuppliers] = useState([]);\r\n    const [resourceEvaluations, setResourceEvaluations] = useState([]);\r\n    const [productPlans, setProductPlans] = useState([]);\r\n    const [productTypes, setProductTypes] = useState([]);\r\n    const [resources, setResources] = useState([]);\r\n    const [statuses, setStatuses] = useState([]);\r\n    // \r\n    \r\n    const [currentId, setCurrentId] = useState(null);\r\n    const [currentWeight, setCurrentWeight] = useState(1.0);\r\n    const [currentPrice, setCurrentPrice] = useState(1.0);\r\n    const [currentColor, setCurrentColor] = useState(\"#000000\");\r\n    const [currentEstimatedArrival, setCurrentEstimatedArrival] = useState(\"2021-12-12\");\r\n    const [currentRegistryDate, setCurrentRegistryDate] = useState(\"2021-12-12\");\r\n    const [currentStatus,setCurrentStatus] = useState(\"\");\r\n    const [currentMaterial, setCurrentMaterial] = useState(\"\");\r\n    const [currentPurpose,setCurrentPurpose] = useState(\"\");\r\n    const [currentSupplier, setCurrentSupplier] = useState(\"\");\r\n    const [currentEvaluationReasoning, setCurrentEvaluationReasoning] = useState(\"\");\r\n\r\n\r\n    const [currentReasoning, setCurrentReasoning] = useState(\"\");\r\n    const [currentSupplierID, setCurrentSupplierID] = useState(1);\r\n    const [currentSupplierFeedbackID, setCurrentSupplierFeedbackID] = useState(1);\r\n    const [currentResourceID, setCurrentResourceID] = useState(1);\r\n    const [currentAcceptability, setCurrentAcceptability] = useState(true);\r\n    const [currentProductType, setCurrentProductType] = useState();\r\n    const [currentEstimatedQuantity, setCurrentEstimatedQuantity] = useState(1);\r\n    const [currentUsedWeight, setCurrentUsedWeight] = useState(1.0);\r\n    const [currentQualityReasoning, setCurrentQualityReasoning] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetchSuppliers();\r\n        fetchStatuses();\r\n        fetchResources();\r\n        fetchProductTypes();\r\n        fetchProductPlans();\r\n        fetchResourceEvaluations();\r\n    }, []);\r\n\r\n    async function fetchSuppliers(){\r\n        await axios.get(url+'api/resourceSupplier')\r\n        .then(result => { \r\n            setSuppliers(result.data);\r\n    })}\r\n\r\n    async function fetchStatuses(){\r\n        await axios.get(url+'api/resourceStatus')\r\n        .then(result => { \r\n            setStatuses(result.data);\r\n    })}\r\n\r\n    // fetch product types\r\n    async function fetchProductTypes(){\r\n        await axios.get(url+'api/productType')\r\n        .then(result => { \r\n            setProductTypes(result.data);\r\n        })\r\n    }\r\n\r\n    async function fetchResources(){\r\n        await axios.get(url+'api/textileResources')\r\n        .then(result => { \r\n            setResources(result.data);\r\n    })}\r\n\r\n    // delete supplier feedback\r\n\r\n    // fetch evaluations\r\n    async function fetchResourceEvaluations(){\r\n        await axios.get(url+'api/evaluatedResources')\r\n        .then(result => { \r\n            setResourceEvaluations(result.data);\r\n        })\r\n    }\r\n\r\n    // add evaluation \r\n    \r\n    function addResourceEvaluation(e){\r\n        e.preventDefault();\r\n        axios.post(url+'api/supplierFeedback',{\r\n            id: 0,\r\n\t\t    resourceID : currentId,\r\n\t\t    evaluationReasoning : currentEvaluationReasoning,\r\n\t\t    receivedAt: currentDate\r\n        }).then(()=> fetchResourceEvaluations());\r\n    }\r\n\r\n    function manageProductPlanCompletion(id){\r\n        axios.patch(url+'api/productPlan/'+id +'/'+ true, { // change last argument\r\n            done: true\r\n        }).catch((error) => console.log('Error: ', error))\r\n    }\r\n\r\n    // fetch product profiles\r\n    async function fetchProductPlans(){\r\n        await axios.get(url+'api/productPlan')\r\n        .then(result => { \r\n            setProductPlans(result.data);\r\n        });\r\n    }\r\n\r\n    // add product profile\r\n\r\n    function addProductPlan(e){\r\n        e.preventDefault();\r\n        axios.post(url+'api/productPlan',{\r\n            id: 0,\r\n            done: false,\r\n            productType: currentProductType,\r\n            estimatedQuantity: currentEstimatedQuantity,\r\n            estimatedArrival: currentEstimatedArrival,\r\n            usedWeight: currentUsedWeight,\r\n            resourceID: currentResourceID\r\n        }).then(()=> fetchProductPlans());\r\n\r\n        setModalProductPlan(false);\r\n    }\r\n\r\n    function handleEvaluations(){\r\n        setShowProductPlans(false);\r\n        setShowResourceEvaluation(true);\r\n    }\r\n\r\n    function handleProjectPlans(){\r\n        setShowResourceEvaluation(false);\r\n        setShowProductPlans(true);\r\n    }\r\n\r\n    function handleModalReceive(id,estimatedArrival, weight, material, color, purpose, price,\r\n        registryDate, supplier){\r\n        \r\n        setCurrentResourceID(id);\r\n        setCurrentId(id);\r\n        setCurrentWeight(weight);\r\n        setCurrentMaterial(material);\r\n        setCurrentColor(color);\r\n        setCurrentPurpose(purpose);\r\n        setCurrentSupplier(supplier);\r\n        setCurrentPrice(price);\r\n        setCurrentEstimatedArrival(estimatedArrival);\r\n        setCurrentRegistryDate(registryDate);\r\n\r\n        setModalReceive(true);\r\n    }\r\n\r\n    function handleModalProductPlan(resourceId){\r\n        setCurrentResourceID(resourceId);\r\n        setModalProductPlan(true);\r\n    }\r\n\r\n    function handleReturned(){\r\n        setModalReceive(false);\r\n        putStatus(statuses[2].status);\r\n        setModalSupplierFeedback(true);\r\n        // use put to change the specified resource to \"Returned\" in status\r\n        // pop open the supplier feedback modal and use a patch call to add resource evaluation\r\n    }\r\n\r\n    function handleAccepted(){\r\n        setModalReceive(false);\r\n        putStatus(statuses[1].status);\r\n        setModalEvaluation(true);\r\n        // use put to change the specified resource to \"Accepted\" in status\r\n        // open Evaluation modal and add new evaluation.\r\n    }\r\n\r\n\r\n    function putStatus(selectedStatus){\r\n        axios.put(url + 'api/textileResources/'+ currentId,{\r\n            estimatedArrival: currentEstimatedArrival,\r\n            registryDate: currentRegistryDate,\r\n            material: currentMaterial,\r\n            price: currentPrice,\r\n            status: selectedStatus,\r\n            supplier: currentSupplier,\r\n            purpose: currentPurpose,\r\n            weight: currentWeight,\r\n            color: currentColor\r\n        });\r\n        fetchResources();\r\n    }\r\n\r\n    function GetOneCategory(props){\r\n        axios.get(url + 'api/productCategory/'+props.cat, {\r\n        }).then(result => {return(result.data.title)});\r\n    }\r\n\r\n    function patchQualityReasoning(e){\r\n        e.preventDefault();\r\n\r\n        axios.patch(url+ \"api/supplierFeedback/\"+ currentResourceID,{\r\n            qualityReasoning: currentQualityReasoning\r\n        });\r\n        modalSupplierFeedback(false);\r\n    }\r\n\r\n\r\n    return(\r\n        <div class=\"main\">\r\n            {/**/}\r\n            <div class = \"selection\">\r\n            <button class=\"selectionButton\" onClick={() => handleEvaluations()}>Manage Evaluations</button>\r\n            <button class=\"selectionButton\" onClick={() => handleProjectPlans()}>Manage Product planning</button>\r\n            </div>\r\n\r\n            <div class= \"display\">\r\n            {/*show resourceEvaluations (show resources with 'to evaluate' status)*/}\r\n            {showResourceEvaluation ? \r\n            <div class = \"fullPanel\">\r\n                <div class = \"halfPanel\">\r\n                <h2>The following resources are waiting for evaluation: </h2>\r\n                {resources.map(resource => (resource.status == \"To Evaluate\" ? \r\n                    <ul key={resource.id} onMouseOver={()=> setCurrentResourceID(resource.id)}>\r\n                    <button class=\"changesButton\" onClick={() => \r\n                    handleModalReceive(resource.id,resource.estimatedArrival,resource.weight,resource.material,\r\n                        resource.color, resource.purpose, resource.price, resource.registryDate, \r\n                        resource.supplier)}>Evaluate</button>    \r\n                    {resource.weight} kg of {resource.material}\r\n                    </ul>\r\n                    : null)\r\n                )}\r\n                </div>\r\n\r\n                <div class = \"halfPanel\" id=\"end\">\r\n                <h2>Current evaluations</h2>\r\n                {resourceEvaluations.map(evaluation =>\r\n                    <ul key={evaluation.id}> {evaluation.receivedAt} \r\n                    ({evaluation.acceptable ? \r\n                    <b> Resource {evaluation.resourceID} was accepted at {evaluation.receivedAt}</b> \r\n                    :\r\n                    <b> Resource {evaluation.resourceID} was returned at {evaluation.receivedAt}</b>})\r\n                    </ul>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            \r\n            :\r\n            null}\r\n\r\n            {/*show product plans*/}\r\n\r\n            {showProductPlans ? \r\n                <div class = \"fullPanel\">\r\n                <div class = \"halfPanel\">\r\n                <h2>Assign resources to product plans</h2>\r\n                {resources.map(resource => (resource.status == \"Accepted\" ? \r\n                    <ul key={resource.id} onMouseOver={()=> setCurrentResourceID(resource.id)}>\r\n                        {resource.weight} kg of {resource.material}\r\n                    <button onClick={() => handleModalProductPlan(resource.id)}>Assign</button>\r\n                    </ul>\r\n                    : null)\r\n                    )}\r\n                </div>\r\n                <div class = \"halfPanel\" id=\"end\">\r\n                <h2>Current product plans</h2>    \r\n                {productPlans.map(plan =>\r\n                    <ul key={plan.id} onMouseOver={()=> setCurrentResourceID(plan.id)}>\r\n                        {plan.estimatedQuantity} of {plan.productType}\r\n                        ({plan.done} ?\r\n                        <button onClick={() => manageProductPlanCompletion()}> Complete </button>\r\n                        :\r\n                        <b>completed</b>)\r\n                    </ul>\r\n                    )}\r\n                </div>\r\n                </div>\r\n            \r\n            :\r\n            null}\r\n            \r\n            <div>\r\n                <Modal\r\n                isOpen={modalSupplierFeedback}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>Why did you return the resource?</h2>\r\n                    <button onClick={() => setModalSupplierFeedback(false)}> Close </button>\r\n\r\n                    <label>\r\n                        <button onClick={() => setModalSupplierFeedback(false)}> Close </button>\r\n                            Describe the quality\r\n                            <input type=\"text\" onChange={(e) => setCurrentQualityReasoning(e.target.value)}></input>\r\n                    </label>\r\n                    <button onClick = {e => patchQualityReasoning(e.target.value)}>Proceed to evaluate</button>\r\n                </Modal>\r\n            </div>\r\n\r\n            {/*Modal to add new resource Evaluation*/}\r\n\r\n            <div>\r\n                <Modal\r\n                isOpen={modalResourceEvaluation}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>New Evaluation</h2>\r\n                    <p>Motivate your evaluation</p>\r\n                    <input type=\"text\" onChange = {(e)=> setCurrentEvaluationReasoning(e.target.value)}></input>\r\n                    <button onClick = {e => addResourceEvaluation(e)}>Submit a new Evaluation</button>\r\n                </Modal>\r\n            </div>\r\n\r\n            {/*Modal to add new product plan (show resources with 'accepted' status)*/}\r\n            \r\n            <div>\r\n                <Modal\r\n                isOpen={modalProductPlan}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>New Product Plan</h2>\r\n                    \r\n                    <label>\r\n                            Product type\r\n                            <select onChange={(e) => setCurrentProductType(e.target.value)}>\r\n                            {productTypes.map( option => \r\n                            <option key={option.id} value={option.id}> {option.title} \r\n                            <GetOneCategory cat={option.productCategoryID} /> </option>)}\r\n                            </select>\r\n                    </label>\r\n                    <label>\r\n                            Estimated Arrival date\r\n                            <input type = \"date\" onChange={(e) => setCurrentEstimatedArrival(e.target.value)}></input>    \r\n                    </label>\r\n\r\n                    <label>\r\n                        EstimatedQuantity\r\n                        <input type = \"number\" min=\"0\" step={10} onChange={(e) => setCurrentEstimatedQuantity(e.target.value)}></input>   \r\n                    </label>\r\n\r\n                    <label>\r\n                        Used Weight\r\n                        <input type = \"number\" min=\"0\" step={5} onChange={(e) => setCurrentUsedWeight(e.target.value)}></input>   \r\n                    </label>\r\n\r\n                    <button onClick = {e => addProductPlan(e)}>Add a new Product plan</button>\r\n                </Modal>\r\n            </div>\r\n\r\n            <div>\r\n                <Modal\r\n                isOpen={modalReceive}\r\n                appElement={document.getElementById('root')}>\r\n                    <button onClick = {() => setModalReceive(false)}>Close</button>\r\n                    <h2>Accept or decline the product</h2>\r\n                    <button onClick = {() => handleAccepted()}>Accept</button>\r\n                    <button onClick = {() => handleReturned()} >Return</button>\r\n                </Modal>\r\n            </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Overview;","\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal, { setAppElement } from 'react-modal';\r\nimport \"C:/Users/umada/my-application/src/Styling/Main.scss\";\r\n\r\nfunction ManageOptions() {\r\n\r\n  const url = \"https://management-backend-app.herokuapp.com/\";\r\n\r\n  // icons\r\n  const plus = <FontAwesomeIcon icon={faPlus} />\r\n  const trash = <FontAwesomeIcon icon={faTrash} />\r\n\r\n  // loaded lists\r\n  const [productCategories, setProductCategories] = useState([]);\r\n  const [productTypes, setProductTypes] = useState([]);\r\n\r\n  // panels\r\n  const [showProductTypes, setShowProductTypes] = useState(false);\r\n  const [showProductCategories, setShowProductCategories] = useState(false);\r\n\r\n  // modal dependencies\r\n  const [modalProductType, setModalProductType] = useState(false);\r\n  const [modalProductCategory, setModalProductCategory] = useState(false);\r\n\r\n  // variables\r\n  const [currentProductCategoryID, setCurrentProductCategoryID] = useState(1);\r\n  const [currentType, setCurrentType] = useState(\"\");\r\n  const [currentTitle, setCurrentTitle] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    fetchProductTypes();\r\n    fetchProductCategories();\r\n  }, []);\r\n\r\n  async function fetchProductTypes() {\r\n    await axios.get(url+'api/productType')\r\n      .then(result => {\r\n        setProductTypes(result.data);\r\n      })\r\n  }\r\n\r\n  async function fetchProductCategories() {\r\n    await axios.get(url+'api/productCategory')\r\n      .then(result => {\r\n        setProductCategories(result.data);\r\n      })\r\n  }\r\n\r\n\r\n  function addProductType(e) {\r\n    e.preventDefault();\r\n    axios.post(url+'api/productType', {\r\n      id: 0,\r\n      productCategoryID: currentProductCategoryID,\r\n      title: currentTitle,\r\n      type: currentType,\r\n    }).then(() => fetchProductTypes());\r\n    setModalProductType(false);\r\n  }\r\n\r\n  async function addProductCategory(e) {\r\n    e.preventDefault();\r\n    axios.post(url+'api/productCategory', {\r\n      id: 0,\r\n      title: currentTitle,\r\n    }).then(() => fetchProductCategories());\r\n    setModalProductCategory(false);\r\n  }\r\n\r\n  async function deleteProductType(id) {\r\n    axios.delete(url+'api/productType/' + id)\r\n      .then(() => fetchProductTypes());\r\n  }\r\n\r\n  async function deleteProductCategory(id) {\r\n    axios.delete(url+'api/productCategory/' + id)\r\n      .then(() => fetchProductCategories());\r\n  }\r\n\r\n  function handleTypes() {\r\n    setShowProductCategories(false);\r\n    setShowProductTypes(true);\r\n  }\r\n  function handleCategories() {\r\n    setShowProductTypes(false);\r\n    setShowProductCategories(true);\r\n  }\r\n\r\n  return (\r\n    <div class=\"main\">\r\n\r\n      <div class=\"selection\">\r\n        <button class=\"selectionButton\" onClick={() => handleTypes()}>Product Types</button>\r\n        <button class=\"selectionButton\" onClick={() => handleCategories()}>Product Categories</button>\r\n      </div>\r\n\r\n      <div class=\"display\">\r\n\r\n        {/*type pannel*/}\r\n        \r\n        {showProductTypes ?\r\n          <div id=\"inner\">\r\n            <button onClick={() => setModalProductType(true)}>{plus}</button>\r\n            {productTypes.map(type => <ul key={type.id}>{type.title}\r\n              <button onClick={() => deleteProductType(type.id)}>{trash}</button></ul>)}\r\n            {/*map all, add new, delete*/}\r\n          </div>\r\n          :\r\n          <></>}\r\n        {showProductCategories ?\r\n          <div id=\"inner\">\r\n            <button onClick={() => setModalProductCategory(true)}>{plus}</button>\r\n            {productCategories.map(category => <ul key={category.id}>{category.title}\r\n              <button onClick={() => deleteProductCategory(category.id)}>{trash}</button></ul>)}\r\n            {/*map all, add new, delete*/}\r\n          </div>\r\n          :\r\n          <></>}\r\n      \r\n\r\n      {/*Modals*/}\r\n      <div> {/*Type modal*/}\r\n        <Modal\r\n          isOpen={modalProductType}\r\n          appElement={document.getElementById('root')}>\r\n          <h2>New Product type</h2>\r\n          <button onClick={() => setModalProductType(false)}> Close </button>\r\n\r\n          <input type=\"text\" placeholder=\"New Type\" onChange={e => setCurrentType(e.target.value)}></input>\r\n          <input type=\"text\" placeholder=\"New Title\" onChange={e => setCurrentTitle(e.target.value)}></input>\r\n\r\n          <label>\r\n            Categories\r\n            <select onChange={(e) => setCurrentProductCategoryID(e.target.value)}>\r\n              {productCategories.map(option =>\r\n                <option key={option.id} value={option.id}>{option.title}</option>)}\r\n            </select>\r\n          </label>\r\n\r\n          <button onClick={e => addProductType(e)}>Add a new type</button>\r\n        </Modal>\r\n      </div>\r\n\r\n      <div> {/*Category modal*/}\r\n        <Modal\r\n          isOpen={modalProductCategory}\r\n          appElement={document.getElementById('root')}>\r\n          <h2>New Product Category</h2>\r\n          <button onClick={() => setModalProductCategory(false)}> Close </button>\r\n\r\n          <input type=\"text\" placeholder=\"New Title\" onChange={e => setCurrentTitle(e.target.value)}></input>\r\n\r\n          <button onClick={e => addProductCategory(e)}>Add a new category</button>\r\n        </Modal>\r\n      </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ManageOptions;","import {useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal, { setAppElement } from 'react-modal';\r\nimport \"C:/Users/umada/my-application/src/Styling/Main.scss\";\r\n\r\n\r\nfunction Overview(){\r\n\r\n    const url = \"https://management-backend-app.herokuapp.com/\";\r\n\r\n    // loaded values\r\n    const [finalProducts, setFinalProducts] = useState([]);\r\n    const [productPlans, setProductPlans] = useState([]);\r\n    // panels\r\n\r\n    const [productOverviewPanel, setProductOverviewPanel] = useState(true);\r\n    const [profitPanel, setProfitPanel] = useState(false);\r\n\r\n    async function fetchProductPlans(){\r\n\r\n    }\r\n\r\n    async function fetchFinalProducts(){\r\n        await axios.get(url+'api/finalProducts')\r\n        .then(result => { \r\n            setFinalProducts(result.data);\r\n        })\r\n    }\r\n  \r\n    async function addFinalProducts(){\r\n        axios.post(url+'api/finalProducts',{\r\n            availableAmount: 0,\r\n            id: 0,\r\n            productPlanID: 0,\r\n            qualityAmount: 0,\r\n            soldAmount: 0,\r\n            totalAmount: 0,\r\n            unitPrice: 0\r\n        }).then(()=> fetchFinalProducts());\r\n    }\r\n\r\n    function archiveResource(){// patch request\r\n\r\n        // when resource remaining quantity becomes 0, archive it\r\n        // \r\n    }\r\n\r\n    function handleProductsPanel(){\r\n        setProductOverviewPanel(true);\r\n        setProfitPanel(false);\r\n    }\r\n\r\n    function handleProfitPanel(){\r\n        setProfitPanel(true);\r\n        setProductOverviewPanel(false);\r\n    }\r\n\r\n    return(\r\n\r\n        <div class=\"main\" >\r\n            <div class=\"selection\">\r\n                <button class=\"selectionButton\" onClick = {()=> handleProductsPanel()}>Product overview</button>\r\n                <button class=\"selectionButton\" onClick = {()=> handleProfitPanel()}>Profits overview</button>\r\n                {/*add and look at products - overview*/}\r\n                {/* look at the current status on sales and profit for the resource (only active resources)*/}\r\n                {/* Once a product is sold out, archive the resource  - a function */}\r\n                \r\n            </div>\r\n\r\n            <div class=\"display\">\r\n\r\n                {productOverviewPanel&&(\r\n                    <div class=\"fullPanel\">\r\n                        <div class=\"halfPanel\">\r\n                            <h2>Finalize plans</h2>\r\n                            {}\r\n\r\n                        </div>\r\n                        <div class=\"halfPanel\">\r\n                            <h2>Available products</h2>\r\n\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {profitPanel&&(\r\n                <div class=\"fullPanel\">\r\n                    {/*Product - In Stock - Sold - Revenue (proportional )*/}\r\n                    \r\n                </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Overview;","\r\nimport {useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal, { setAppElement } from 'react-modal';\r\nimport \"C:/Users/umada/my-application/src/Styling/Main.scss\";\r\n\r\n// add \r\n/*\r\n[\r\n  {\r\n    \"availableAmount\": 0,\r\n    \"id\": 0,\r\n    \"productPlanID\": 0,\r\n    \"qualityAmount\": 0,\r\n    \"soldAmount\": 0,\r\n    \"totalAmount\": 0,\r\n    \"unitPrice\": 0\r\n  }\r\n]\r\n*/\r\n\r\nfunction ManageOptions(){\r\n\r\n  const url = \"https://management-backend-app.herokuapp.com/\";\r\n\r\n  \r\n\r\n    return(\r\n      <div class=\"main\" >\r\n          <div class=\"selection\">\r\n          \r\n          </div>\r\n\r\n          <div class=\"display\">\r\n\r\n          </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ManageOptions;","\r\nimport './Styling/App.scss'\r\nimport { BrowserRouter as Router,Routes, Route } from 'react-router-dom';\r\nimport Navigation from './Navigation';\r\nimport Home from'./Components/Home.js';\r\nimport Users from'./Components/Users.js';\r\nimport PurchaseOverview from'./Components/Purchase/Overview.js';\r\nimport ManagePurchaseOptions from'./Components/Purchase/ManageOptions.js';\r\nimport ProductionOverview from'./Components/Production/Overview.js';\r\nimport ManageProductionOptions from'./Components/Production/ManageOptions.js';\r\nimport SalesOverview from'./Components/Sales/Overview.js';\r\nimport ManageSalesOptions from'./Components/Sales/ManageOptions.js';\r\nimport \"./Styling/Navbar.scss\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div class=\"full\">\r\n      <Router>\r\n        <Route path='/:page' component={Navigation} />\r\n        <Route exact path='/' component={Navigation} />\r\n        <Route exact path='/' component={Home} />\r\n        <Route exact path='/home' component={Home} />\r\n        <Route exact path='/users' component={Users} />\r\n        <Route exact path='/purchaseOverview' component={PurchaseOverview} />\r\n        <Route exact path='/managePurchaseOptions' component={ManagePurchaseOptions} />\r\n        <Route exact path='/productionOverview' component={ProductionOverview} />\r\n        <Route exact path='/manageProductionOptions' component={ManageProductionOptions} />\r\n        <Route exact path='/salesOverview' component={SalesOverview} />\r\n        <Route exact path='/manageSalesOptions' component={ManageSalesOptions} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Styling/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}