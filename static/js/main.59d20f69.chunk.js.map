{"version":3,"sources":["Navigation.js","Components/Home.js","Components/Users.js","Components/Purchase/Overview.js","Components/Purchase/ManageOptions.js","Components/Production/Overview.js","Components/Production/ManageOptions.js","Components/Sales/Overview.js","Components/Sales/ManageOptions.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","home","icon","faHome","users","faUsers","message","faComment","email","faEnvelope","inbox","faInbox","download","faDownload","currentDate","Date","year","String","getFullYear","displayDate","getDay","getDate","padStart","getMonth","class","to","id","Home","Users","Overview","url","plus","faPlus","trash","faTrash","useState","supplierFeedbackPanel","showSupplierFeedbackPanel","resourcePanel","showReasourcePanel","purposes","setPurposes","materials","setMaterials","suppliers","setSuppliers","resources","setResources","statuses","setStatuses","supplierFeedbacks","setSupplierFeedbacks","modalResources","setModalResources","modalArchived","setModalArchived","modalSupplierFeedback","setModalSupplierFeedback","modalDateUpdate","modalReplacement","currentWeight","setCurrentWeight","currentPrice","setCurrentPrice","currentColor","setCurrentColor","currentEstimatedArrival","setCurrentEstimatedArrival","currentStatus","setCurrentStatus","currentMaterial","setCurrentMaterial","currentPurpose","setCurrentPurpose","currentSupplier","setCurrentSupplier","specifiedSupplier","setSpecifiedSupplier","currentReasoning","setCurrentReasoning","a","axios","get","then","result","data","fetchResources","useEffect","fetchPurpose","fetchSupplier","fetchMaterial","fetchStatuses","fetchSupplierFeedbacks","today","month","day","addResource","e","preventDefault","post","color","estimatedArrival","material","price","purpose","registryDate","status","supplier","weight","deleteArchived","delete","onClick","title","style","width","map","resource","onChange","target","value","option","feedback","resourceID","qualityReasoning","isOpen","appElement","document","getElementById","type","length","purchaseReasoning","addSupplierFeedback","min","step","precision","ManageOptions","showSuppliers","setShowSuppliers","showPurpose","setShowPurpose","showMaterial","setShowMaterial","showWarning","modalPurpose","setModalPurpose","modalMaterial","setModalMaterial","modalSupplier","setModalSupplier","newTitle","setNewTitle","required","placeholder","addPurpose","addMaterial","addSupplier","showResourceEvaluation","setShowResourceEvaluation","showProductPlans","setShowProductPlans","modalResourceEvaluation","setModalEvaluation","modalProductPlan","setModalProductPlan","setSupplierFeedback","resourceEvaluations","setResourceEvaluations","productPlans","setProductPlans","setProductTypes","currentSupplierID","setCurrentSupplierID","currentSupplierFeedbackID","currentResourceID","setCurrentResourceID","currentAcceptability","setCurrentAcceptability","fetchSupplierFeedback","fetchResourceEvaluations","addResourceEvaluation","acceptable","received_at","supplier_feedbackID","evaluation_reasoning","fetchProductPlans","handleProceed","reasoning","supplierID","patch","catch","error","console","log","fetchSuppliers","fetchProductTypes","onMouseOver","original_weight","evaluation","remaining_weight","plan","estimated_quantity","product_type","productCategoryID","done","productCategories","setProductCategories","productTypes","showProductTypes","setShowProductTypes","showProductCategories","setShowProductCategories","modalProductType","setModalProductType","modalProductCategory","setModalProductCategory","currentProductCategoryID","setCurrentProductCategoryID","currentType","setCurrentType","currentTitle","setCurrentTitle","fetchProductCategories","deleteProductType","category","deleteProductCategory","addProductType","addProductCategory","productOverviewPanel","setProductOverviewPanel","profitPanel","setProfitPanel","App","path","component","exact","PurchaseOverview","ManagePurchaseOptions","ProductionOverview","ManageProductionOptions","SalesOverview","ManageSalesOptions","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.59d20f69.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome, faUsers, faEnvelope, faComment, faInbox, faFileDownload, faDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport \"./Styling/Navbar.scss\";\r\n//Navigation bar where all choices are presented in the purchase interface\r\n\r\n// good optionals\r\n\r\n// send emails for externals\r\n// send chats for internals\r\n// look in inbox for internal chats\r\n// download a report (choose from API)\r\n\r\n\r\n\r\nconst Navigation = () => {\r\n  // icons\r\n  const home = <FontAwesomeIcon icon={faHome} />\r\n  const users = <FontAwesomeIcon icon={faUsers} />\r\n  const message = <FontAwesomeIcon icon={faComment} />\r\n  const email = <FontAwesomeIcon icon={faEnvelope} />\r\n  const inbox = <FontAwesomeIcon icon={faInbox} />\r\n  const download = <FontAwesomeIcon icon={faDownload} />\r\n\r\n  const weekdays= [\"Monday\",\"Tuesday\", \"Wednesday\", \"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"]\r\n  // variables\r\n  const currentDate = new Date();\r\n  var year = String(currentDate.getFullYear());\r\n  var weekday = String(weekdays[currentDate.getDay()-1]);\r\n  var day = String(currentDate.getDate()).padStart(2, '0');\r\n  var month = String(currentDate.getMonth()+1).padStart(2, '0');\r\n  var displayDate = weekday + \" \" + day + \"/\" +month + \"/\" +year;\r\n\r\n\r\n    return (\r\n      <div class=\"navigation\">\r\n        <div class=\"upper\">\r\n        <Link to=\"/home\"><button class=\"navButton\" id=\"small\">{home}</button></Link>\r\n        <Link to=\"/users\"><button class=\"navButton\" id=\"small\">{users}</button></Link>\r\n        <Link to=\"/purchaseOverview\"><button class=\"navButton\">Purchase Overview</button></Link>\r\n        <Link to=\"/managePurchaseOptions\"><button class=\"navButton\">Purchase Options</button></Link>\r\n        <Link to=\"/productionOverview\"><button class=\"navButton\">Production Overview</button></Link>\r\n        <Link to=\"/manageProductionOptions\"><button class=\"navButton\">Production Options</button></Link>\r\n        <Link to=\"/salesOverview\"><button class=\"navButton\">Sales Overview</button></Link>\r\n        <Link to=\"/manageSalesOverview\"><button class=\"navButton\">Sales Options</button></Link>\r\n        </div>\r\n        <div class=\"lower\">\r\n          <span class=\"details\">{displayDate}</span>\r\n          \r\n          <button class=\"navButton\" id=\"Wsmall\">{download}</button>\r\n          <button class=\"navButton\" id=\"Wsmall\">{email}</button>\r\n          <button class=\"navButton\" id=\"Wsmall\">{message}</button>\r\n          <button class=\"navButton\" id=\"Wsmall\">{inbox}</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Navigation;\r\n\r\n\r\n\r\n  \r\n","import {useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal, { setAppElement } from 'react-modal';\r\nimport \"C:/Users/umada/my-application/src/Styling/Main.scss\";\r\n\r\n// to do list (cleans in a day)\r\n// \r\n\r\n\r\nfunction Home () {\r\n    return(\r\n\r\n        <div class=\"main\" >\r\n            <div class=\"selection\">\r\n                \r\n            </div>\r\n\r\n            <div class=\"display\">\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import {useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal, { setAppElement } from 'react-modal';\r\nimport \"C:/Users/umada/my-application/src/Styling/Main.scss\";\r\nfunction Users () {\r\n    return(\r\n\r\n        <div class=\"main\">\r\n            <div class=\"selection\">\r\n\r\n            </div>\r\n            <div class=\"display\">\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import {useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal, { setAppElement } from 'react-modal';\r\nimport \"C:/Users/umada/my-application/src/Styling/Main.scss\";\r\n\r\nfunction Overview () {\r\n    const url = \"https://management-backend-app.herokuapp.com/api/\";\r\n    // icons\r\n    const plus = <FontAwesomeIcon icon={faPlus} />\r\n    const trash = <FontAwesomeIcon icon={faTrash} />\r\n\r\n    // Supplier feedback pannel \r\n\r\n    const [supplierFeedbackPanel, showSupplierFeedbackPanel] = useState(false);\r\n    const [resourcePanel, showReasourcePanel] = useState(true);\r\n\r\n    // hooks to store resource descriptor api value collections\r\n    const [purposes, setPurposes] = useState([]);\r\n    const [materials, setMaterials] = useState([]);\r\n    const [suppliers, setSuppliers] = useState([]);\r\n    const [resources, setResources] = useState([]);\r\n    const [statuses, setStatuses] = useState([]);\r\n    const [supplierFeedbacks,setSupplierFeedbacks] = useState([]);\r\n\r\n    // hooks to collect suppliers' feedback\r\n\r\n    // modal dependencies\r\n    const [modalResources, setModalResources] = useState(false);\r\n    const [modalArchived,setModalArchived] = useState(false);\r\n    const [modalSupplierFeedback, setModalSupplierFeedback] = useState(false);\r\n    const [modalDateUpdate, setModalDateUpdate] = useState(false);\r\n    const [modalReplacement, setModalReplacement] = useState(false);\r\n\r\n    // hooks for adding a new resource\r\n    const [currentWeight, setCurrentWeight] = useState(1.0);\r\n    const [currentPrice, setCurrentPrice] = useState(1.0);\r\n    const [currentColor, setCurrentColor] = useState(\"#000000\");\r\n    const [currentEstimatedArrival, setCurrentEstimatedArrival] = useState(\"2021-12-12\");\r\n    const [currentStatus,setCurrentStatus] = useState(\"\");\r\n    const [currentMaterial, setCurrentMaterial] = useState(\"\");\r\n    const [currentPurpose,setCurrentPurpose] = useState(\"\");\r\n    const [currentSupplier, setCurrentSupplier] = useState(\"\");\r\n\r\n    const [specifiedSupplier,setSpecifiedSupplier] = useState([]);\r\n\r\n    // hooks for adding a new supplier feedback\r\n    const [currentReasoning,setCurrentReasoning] = useState(\"\");\r\n\r\n    // functions to handle modal interactions\r\n\r\n    function handleResourceModal(){\r\n        // clearing old modal values\r\n        setModalResources(true);\r\n        setCurrentMaterial(materials[0].title);\r\n        setCurrentPurpose(purposes[0].title);\r\n        setCurrentSupplier(suppliers[0].title);\r\n        setCurrentStatus(statuses[0].status);\r\n    }\r\n\r\n    function handleSupplierFeedbackModal(){\r\n        setModalResources(false);\r\n        setModalSupplierFeedback(true);\r\n        // old resource ID based on the length of list, \r\n        // as well as supplier is clear from previous selection\r\n        setCurrentReasoning(\"\"); // cleaning up the previous value\r\n    }\r\n\r\n    // functions that manage appearance when buttons are clicked.\r\n\r\n    function handleSupplierFeedbackPanel(){\r\n        showReasourcePanel(false)\r\n        showSupplierFeedbackPanel(true)\r\n    }\r\n\r\n    function handleResourcePanel(){\r\n        showSupplierFeedbackPanel(false);\r\n        showReasourcePanel(true)\r\n    }\r\n\r\n// internal functions \r\n    useEffect(() => {\r\n        fetchPurpose();\r\n        fetchSupplier();\r\n        fetchMaterial();\r\n        fetchStatuses();\r\n        fetchResources();\r\n        fetchSupplierFeedbacks();\r\n    }, []);\r\n\r\n\r\n// fetching data functions\r\n\r\n    async function fetchPurpose(){\r\n        await axios.get(url+'resourcePurpose')\r\n        .then(result => { \r\n            setPurposes(result.data);\r\n    })}\r\n\r\n    async function fetchMaterial(){\r\n        await axios.get(url+'resourceMaterial')\r\n        .then(result => { \r\n            setMaterials(result.data);\r\n    })}\r\n    \r\n    async function fetchSupplier(){\r\n        await axios.get(url+'resourceSupplier')\r\n        .then(result => { \r\n            setSuppliers(result.data);\r\n    })}\r\n\r\n    async function fetchResources(){\r\n        await axios.get(url+'textileResources')\r\n        .then(result => { \r\n            setResources(result.data);\r\n    })}\r\n\r\n    async function fetchStatuses(){\r\n        await axios.get(url+'resourceStatus')\r\n        .then(result => { \r\n            setStatuses(result.data);\r\n    })}\r\n\r\n    async function fetchSupplierFeedbacks(){\r\n        await axios.get()\r\n        .then(result =>\r\n            setSupplierFeedbacks(result.data));\r\n    }\r\n\r\n    // current date expression \r\n    const today = new Date();\r\n    const month = ((today.getMonth() +1) <10 ? \"0\" + String(today.getMonth() + 1) : String(today.getMonth()+1));\r\n    const day = (today.getDate()) < 10  ? \"0\" + String(today.getDate()) : String(today.getDate());\r\n    const currentDate =   String(today.getFullYear())+ \"-\" + month+ \"-\" + day;\r\n\r\n    // functions to add new properties\r\n    function addResource(e){\r\n        e.preventDefault();\r\n        axios.post(url+'textileResources',{\r\n        color: currentColor,\r\n        estimatedArrival: currentEstimatedArrival,\r\n        id: 0,\r\n        material: currentMaterial,\r\n        price: currentPrice,\r\n        purpose: currentPurpose,\r\n        registryDate: currentDate,\r\n        status: currentStatus,\r\n        supplier: currentSupplier,\r\n        weight: currentWeight\r\n    })\r\n        .then(()=> fetchResources()); \r\n        handleSupplierFeedbackModal();\r\n    }\r\n\r\n    function addSupplierFeedback(e){\r\n        e.preventDefault();\r\n        axios.post(url+'textileResources', {\r\n            resourceID: resources.length,\r\n            supplier: currentSupplier,\r\n            purchaseReasoning: currentReasoning,\r\n            qualityReasoning: \"\"\r\n        })\r\n        setModalSupplierFeedback(false);\r\n    }\r\n\r\n    // functions to otherwise alter/delete existing properties\r\n\r\n    function deleteArchived(id){\r\n        axios.delete('textileResources/'+ id)\r\n        fetchResources();\r\n    }\r\n\r\n    // displayed panel\r\n\r\n    return(\r\n        \r\n        <div class=\"main\">\r\n\r\n            <div class=\"selection\">\r\n            <button class=\"selectionButton\" onClick={() => handleResourceModal()}>{plus}</button>\r\n            <button class=\"selectionButton\" onClick= {() => handleResourcePanel()}>See resources</button>\r\n            <button class=\"selectionButton\" onClick= {() => handleSupplierFeedbackPanel()}>Supplier feedback</button>\r\n            <button class=\"selectionButton\" onClick={() => setModalArchived(true)}> See archived</button>\r\n            </div>\r\n\r\n            <div class = \"display\">\r\n\r\n            {resourcePanel&&(\r\n                <div style={{width:'100%'}}>\r\n                <div class=\"panel\">\r\n                <h2>\r\n                    To be evaluated\r\n                </h2>\r\n                <div class=\"inner\">\r\n                    {resources.map(resource => (resource.status == \"To Evaluate\" ? \r\n                    <ul>{resource.weight} kg of {resource.material} for {resource.purpose} due on {resource.estimatedArrival}\r\n                    \r\n                    {\r\n                    resource.estimatedArrival<currentDate?\r\n                    <button>Update arrival date</button>\r\n                    :\r\n                    null\r\n                    }\r\n\r\n                    </ul>\r\n                    : null)\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"panel\">\r\n                <h2>\r\n                    Returned\r\n                </h2>\r\n                <div class=\"inner\">\r\n                {resources.map(resource => (resource.status == \"Returned\" ? \r\n                    <ul>{resource.weight} kg of {resource.material} for {resource.purpose}\r\n                    <button>Replace</button>\r\n                    </ul>\r\n                    : null)\r\n                    )}\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"panel\" id=\"end\">\r\n                <h2>\r\n                    Accepted\r\n                </h2>\r\n                <div class=\"inner\">\r\n                {resources.map(resource => (resource.status== \"Accepted\" ? \r\n                    <ul>{resource.material} for {resource.purpose}\r\n                    </ul>\r\n                    : null)\r\n                    )}\r\n                </div>\r\n            </div>\r\n            </div>\r\n            )}\r\n\r\n            {supplierFeedbackPanel&&(\r\n                <div>\r\n                    <h2>Search by supplier</h2>\r\n                    <select onChange={(e) => setSpecifiedSupplier(e.target.value)}>\r\n                        {suppliers.map( option => \r\n                        <option key={option.id} value={option.title}>\r\n                            {option.title}\r\n                        </option>)}\r\n                    </select>\r\n\r\n                    {supplierFeedbacks.map(feedback =>\r\n                        (feedback.supplier == specifiedSupplier ?\r\n                            <p>Supplier: {feedback.supplier} \r\n                            for resource {feedback.resourceID}\r\n                            Quality: {feedback.qualityReasoning} \r\n                            Communication: </p>\r\n                            :\r\n                            null\r\n                        )\r\n                    )}\r\n                    \r\n                </div>\r\n            )}\r\n            {/* Existing resources displayed over 3 panels, based on status*/}\r\n            \r\n\r\n\r\n            {/* Modal for supplier feedback*/}\r\n\r\n            <div>\r\n                <Modal\r\n                isOpen={modalSupplierFeedback}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>Add feedback to describe supplier's communication</h2>\r\n                    <input type=\"text\" onChange={(e)=> setCurrentReasoning(e.target.value)}></input>\r\n                    <button onClick = {(e) => addSupplierFeedback(e)}>Complete</button>\r\n                </Modal>\r\n            </div>\r\n\r\n            {/* Modal for archived resources and deletion*/}\r\n            <div>\r\n                <Modal\r\n                isOpen={modalArchived}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>Archived resources</h2>\r\n                    <button onClick={() => setModalArchived(false)}> Close </button>\r\n                    <div class=\"inner\">\r\n                    {resources.map(resource => (resource.status == \"Archived\" ? \r\n                    <ul>{resource.weight} kg of {resource.material} for {resource.purpose}\r\n                    <button onClick={() => deleteArchived(resource.id)}>{trash}</button>\r\n                    </ul>\r\n                    : null)\r\n                    )}\r\n                </div>\r\n\r\n                </Modal>\r\n            </div>\r\n\r\n            {/* Modal for changing the date of a resource*/}\r\n\r\n            <div>\r\n                <Modal\r\n                isOpen={modalDateUpdate}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>Archived resources</h2>\r\n                    <button onClick={() => setModalArchived(false)}> Close </button>\r\n                    <div class=\"inner\">\r\n                    {resources.map(resource => (resource.status == \"Archived\" ? \r\n                    <ul>{resource.weight} kg of {resource.material} for {resource.purpose}\r\n                    <button onClick={() => deleteArchived(resource.id)}>{trash}</button>\r\n                    </ul>\r\n                    : null)\r\n                    )}\r\n                </div>\r\n\r\n                </Modal>\r\n            </div>\r\n\r\n            {/* Modal for replacing returned resources*/}\r\n\r\n            <div>\r\n                <Modal\r\n                isOpen={modalReplacement}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>Archived resources</h2>\r\n                    <button onClick={() => setModalArchived(false)}> Close </button>\r\n                    <div class=\"inner\">\r\n                    {resources.map(resource => (resource.status == \"Archived\" ? \r\n                    <ul>{resource.weight} kg of {resource.material} for {resource.purpose}\r\n                    <button onClick={() => deleteArchived(resource.id)}>{trash}</button>\r\n                    </ul>\r\n                    : null)\r\n                    )}\r\n                </div>\r\n\r\n                </Modal>\r\n            </div>\r\n\r\n\r\n            {/* Modal for adding resources*/}\r\n            <div> {/* Resources modal*/}\r\n                <Modal\r\n                isOpen={modalResources}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>New Resource</h2>\r\n                    <button onClick={() => setModalResources(false)}> Close </button>\r\n\r\n                        <label>\r\n                            Weight\r\n                            <input type = \"number\" min=\"0\" step={10} precision={0.1} onChange={(e) => setCurrentWeight(e.target.value)}></input>\r\n                        </label>\r\n                        \r\n                        <label>\r\n                            Price\r\n                            <input type = \"number\" min=\"0\" step={10} precision={0.1} onChange={(e) => setCurrentPrice(e.target.value)}></input>   \r\n                        </label>\r\n                        \r\n                        <label>\r\n                            Color\r\n                            <input type = \"color\" onChange={(e) => setCurrentColor(e.target.value)}></input>\r\n                        </label>\r\n\r\n                        <label>\r\n                            Estimated Arrival date\r\n                            <input type = \"date\" onChange={(e) => setCurrentEstimatedArrival(e.target.value)}></input>    \r\n                        </label>\r\n\r\n                        <label>\r\n                            Material\r\n                            <select onChange={(e) => setCurrentMaterial(e.target.value)}>\r\n                            {materials.map( option => \r\n                            <option key={option.id} value={option.title}>{option.title}</option>)}\r\n                            </select>\r\n                        </label>\r\n                        \r\n                        <label>\r\n                            Purposes\r\n                            <select onChange={(e) => setCurrentPurpose(e.target.value)}>\r\n                            {purposes.map( option => \r\n                            <option key={option.id} value={option.title}>{option.title}</option>)}\r\n                            </select>\r\n                        </label>\r\n                        \r\n                        <label>\r\n                            Suppliers\r\n                            <select onChange={(e) => setCurrentSupplier(e.target.value)}>\r\n                            {suppliers.map( option => \r\n                            <option key={option.id} value={option.title}>{option.title}</option>)}\r\n                            </select>\r\n                        </label>\r\n\r\n                        <button onClick = {e => addResource(e)}>Proceed</button>\r\n                </Modal>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Overview;","import {useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal, { setAppElement } from 'react-modal';\r\nimport \"C:/Users/umada/my-application/src/Styling/Main.scss\";\r\n\r\n// eliminate deletion\r\n\r\n// purchase interface \r\n\r\nfunction ManageOptions () {\r\nconst url = \"https://management-backend-app.herokuapp.com/\";\r\n// panels\r\nconst [showSuppliers, setShowSuppliers] = useState(false);\r\nconst [showPurpose, setShowPurpose] = useState(false);\r\nconst [showMaterial, setShowMaterial] = useState(false);\r\nconst [showWarning, setShowWarning] = useState(false); \r\n\r\n// mapped lists\r\nconst [purposes, setPurposes] = useState([]);\r\nconst [materials, setMaterials] = useState([]);\r\nconst [suppliers, setSuppliers] = useState([]);\r\n\r\n// modal dependencies\r\n\r\nconst [modalPurpose, setModalPurpose] = useState(false);\r\nconst [modalMaterial, setModalMaterial] = useState(false);\r\nconst [modalSupplier, setModalSupplier] = useState(false);\r\n\r\n// variables\r\n\r\nconst [newTitle, setNewTitle] = useState(\"\");\r\n\r\n// icons\r\nconst plus = <FontAwesomeIcon icon={faPlus} />\r\nconst trash = <FontAwesomeIcon icon={faTrash} />\r\n\r\n// internal functions\r\n\r\nuseEffect(() => {\r\n    fetchPurpose();\r\n    fetchSupplier();\r\n    fetchMaterial();\r\n    \r\n  }, []);\r\n\r\n\r\n// fetching data functions\r\n\r\n\r\n\r\nfunction fetchPurpose(){\r\n    axios.get(url+'api/resourcePurpose')\r\n    .then(result => { \r\n      setPurposes(result.data);\r\n    })\r\n}\r\n\r\n\r\nfunction fetchMaterial(){\r\n    axios.get(url+'api/resourceMaterial')\r\n    .then(result => { \r\n      setMaterials(result.data);\r\n    })\r\n}\r\n\r\nfunction fetchSupplier(){\r\n    axios.get(url+'api/resourceSupplier')\r\n    .then(result => { \r\n      setSuppliers(result.data);\r\n    })\r\n}\r\n\r\n// adding new data functions \r\n\r\nfunction addPurpose(e){\r\n    e.preventDefault();\r\n    axios.post(url+'api/resourcePurpose',{\r\n        id: 0,\r\n        title: newTitle\r\n    }).then(()=> fetchPurpose());\r\n}\r\n\r\nfunction addMaterial(e){\r\n    e.preventDefault();\r\n    axios.post(url+'api/resourceMaterial',{\r\n        id: 0,\r\n        title: newTitle\r\n    }).then(()=> fetchMaterial());\r\n}\r\n\r\nfunction addSupplier(e){\r\n    e.preventDefault();\r\n    axios.post(url+'api/resourceSupplier',{\r\n        id: 0,\r\n        title: newTitle\r\n    }).then(()=> fetchSupplier());\r\n}\r\n\r\n// deleting data functions\r\n\r\n// if error 500, pop open a warning modal!!!\r\nfunction deletePurpose(id){\r\n    axios.delete(url+'api/resourcePurpose/' + id)\r\n    .then(()=> fetchPurpose());\r\n}\r\nfunction deleteMaterial(id){\r\n    axios.delete(url+'api/resourceMaterial/' + id)\r\n    .then(()=> fetchMaterial());\r\n}\r\nfunction deleteSupplier(id){\r\n    axios.delete(url+'api/resourceSupplier/' + id)\r\n    .then(()=> fetchSupplier());\r\n}\r\n\r\n// button handling functions\r\nfunction handlePurpose(){\r\n    setShowMaterial(false);\r\n    setShowSuppliers(false);\r\n    setShowPurpose(true);\r\n}\r\n\r\nfunction handleMaterial(){\r\n    setShowPurpose(false);\r\n    setShowSuppliers(false);\r\n    setShowMaterial(true);\r\n}\r\n\r\nfunction handleSupplier(){\r\n    setShowMaterial(false);\r\n    setShowPurpose(false);\r\n    setShowSuppliers(true);\r\n}\r\n\r\n\r\n    return(\r\n\r\n        <div class=\"main\">\r\n            <div class=\"selection\">\r\n\r\n                <button class=\"selectionButton\" onClick={() => handlePurpose()}>Purpose</button>\r\n                <button class=\"selectionButton\" onClick={() => handleMaterial()}>Material</button>\r\n                <button class=\"selectionButton\" onClick={() => handleSupplier()}>Supplier</button>\r\n\r\n            </div>\r\n            <div class=\"display\">\r\n\r\n            {/*purpose pannel*/}\r\n            {showPurpose ?\r\n            <div id = \"inner\">\r\n                <button class=\"additionButton\" onClick={() => setModalPurpose(true)}>{plus}</button>\r\n                {purposes.map(purpose => <ul key={purpose.id}>{purpose.title} \r\n                <button onClick = {() => deletePurpose(purpose.id)}>{trash}</button></ul>)}\r\n                {/*map all, add new, delete*/}\r\n            </div>\r\n            :\r\n            <></>}\r\n\r\n            <div> {/*purpose modal*/}\r\n                <Modal\r\n                isOpen={modalPurpose}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>New supplier</h2>\r\n                    <button onClick={() => setModalPurpose(false)}> Close </button>\r\n                    <form>\r\n                        <input required type=\"text\" placeholder=\"New purpose\" onChange = {e => setNewTitle(e.target.value)}></input>\r\n                        <button onClick = {e => addPurpose(e)}>Add a new purpose</button>\r\n                    </form>\r\n                </Modal>\r\n            </div>\r\n\r\n            {/*material pannel*/}\r\n            {showMaterial ?\r\n            <div id = \"inner\">\r\n                <button class=\"additionButton\" onClick={() => setModalMaterial(true)}>{plus}</button>\r\n                {materials.map(material => <ul key={material.id}>{material.title} \r\n                <button onClick = {() => deleteMaterial(material.id)}>{trash}</button></ul>)}\r\n                {/*map all, add new, delete*/}\r\n            </div>\r\n            :\r\n            <></>}\r\n            \r\n            <div> {/*Material modal*/}\r\n                <Modal\r\n                isOpen={modalMaterial}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>New material</h2>\r\n                    <button onClick={() => setModalMaterial(false)}> Close </button>\r\n                    <form>\r\n                        <input required type=\"text\" placeholder=\"New material\" onChange = {e => setNewTitle(e.target.value)}></input>\r\n                        <button onClick = {e => addMaterial(e)}>Add a new material</button>\r\n                    </form>\r\n                </Modal>\r\n            </div>\r\n\r\n            {/*supplier pannel*/}\r\n            {showSuppliers ?\r\n            <div id = \"inner\">\r\n                <button class=\"additionButton\" onClick={() => setModalSupplier(true)}>{plus}</button>\r\n                {suppliers.map(supplier => <ul key={supplier.id}>{supplier.title}\r\n                <button onClick = {() => deleteSupplier(supplier.id)} >{trash}</button></ul>)}\r\n                {/*map all, add new, delete*/}\r\n            </div>\r\n            :\r\n            <></>}\r\n            \r\n            <div> {/*Material modal*/}\r\n                <Modal\r\n                isOpen={modalSupplier}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>New Supplier</h2>\r\n                    <button onClick={() => setModalSupplier(false)}> Close </button>\r\n                    <input type=\"text\" placeholder=\"New Supplier\" onChange = {e => setNewTitle(e.target.value)}></input>\r\n                    <button onClick = {e => addSupplier(e)}>Add a new supplier</button>\r\n                    \r\n                    {/*make warning work - otherwise form is to be used*/}\r\n                    {showWarning ?\r\n                    <p> Please fill in the field! </p>\r\n                    :\r\n                    <></>}\r\n\r\n                </Modal>\r\n            </div>\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ManageOptions;","\r\n\r\nimport {useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal, { setAppElement } from 'react-modal';\r\nimport \"C:/Users/umada/my-application/src/Styling/Main.scss\";\r\n\r\n// finish product plan modal\r\n// fix patch requests \r\n// \r\n// \r\n\r\n\r\nfunction Overview(){\r\n\r\n    const url = \"https://management-backend-app.herokuapp.com/\";\r\n    // icons\r\n    const plus = <FontAwesomeIcon icon={faPlus} />\r\n    const trash = <FontAwesomeIcon icon={faTrash} />\r\n\r\n    // current date expression \r\n    const today = new Date();\r\n    const month = ((today.getMonth() +1) <10 ? \"0\" + String(today.getMonth() + 1) : String(today.getMonth()+1));\r\n    const day = (today.getDate()) < 10  ? \"0\" + String(today.getDate()) : String(today.getDate());\r\n    const currentDate =   String(today.getFullYear())+ \"-\" + month+ \"-\" + day;\r\n\r\n    // panels\r\n\r\n    const [showResourceEvaluation, setShowResourceEvaluation] = useState(true);\r\n    const [showProductPlans, setShowProductPlans] = useState(false);\r\n\r\n    // modal dependencies\r\n\r\n    const [modalResourceEvaluation, setModalEvaluation] = useState(false);\r\n    const [modalProductPlan, setModalProductPlan] = useState(false);\r\n    const [modalSupplierFeedback, setModalSupplierFeedback] = useState(false);\r\n\r\n    // fetched lists\r\n\r\n    const [suppliers, setSuppliers] = useState([]);\r\n    const [supplierFeedback, setSupplierFeedback] = useState([]);\r\n    const [resourceEvaluations, setResourceEvaluations] = useState([]);\r\n    const [productPlans, setProductPlans] = useState([]);\r\n    const [productTypes, setProductTypes] = useState([]);\r\n    const [resources, setResources] = useState([]);\r\n    const [statuses, setStatuses] = useState([]);\r\n    // \r\n\r\n    const [currentReasoning, setCurrentReasoning] = useState(\"\");\r\n    const [currentSupplierID, setCurrentSupplierID] = useState(1);\r\n    const [currentSupplierFeedbackID, setCurrentSupplierFeedbackID] = useState(1);\r\n    const [currentResourceID, setCurrentResourceID] = useState(1);\r\n    const [currentAcceptability, setCurrentAcceptability] = useState(true);\r\n    const [currentProductType, setCurrentProductType] = useState();\r\n    const [currentEstimatedQuantity, setCurrentEstimatedQuantity] = useState(1);\r\n    const [currentUsedWeight, setCurrentUsedWeight] = useState(1.0);\r\n\r\n    useEffect(() => {\r\n        fetchSuppliers();\r\n        fetchStatuses();\r\n        fetchResources();\r\n        fetchProductTypes();\r\n        fetchProductPlans();\r\n        fetchResourceEvaluations();\r\n        fetchSupplierFeedback();\r\n    }, []);\r\n\r\n    async function fetchSuppliers(){\r\n        await axios.get(url+'api/resourceSupplier')\r\n        .then(result => { \r\n            setSuppliers(result.data);\r\n    })}\r\n\r\n    async function fetchStatuses(){\r\n        await axios.get(url+'api/resourceStatus')\r\n        .then(result => { \r\n            setStatuses(result.data);\r\n    })}\r\n\r\n    // fetch product types\r\n    async function fetchProductTypes(){\r\n        await axios.get(url+'api/productType')\r\n        .then(result => { \r\n            setProductTypes(result.data);\r\n        })\r\n    }\r\n\r\n    async function fetchResources(){\r\n        await axios.get(url+'api/resources')\r\n        .then(result => { \r\n            setResources(result.data);\r\n    })}\r\n\r\n    // fetch supplier feedback\r\n    async function fetchSupplierFeedback(){\r\n        await axios.get(url+'api/supplierFeedback')\r\n        .then(result => { \r\n            setSupplierFeedback(result.data);\r\n        })\r\n    }\r\n\r\n    // add supplier feedback\r\n    function addSupplierFeedback(){\r\n        axios.post(url+'api/supplierFeedback',{\r\n            id: 0,\r\n            reasoning: currentReasoning,\r\n            supplierID: currentSupplierID\r\n        }).then(()=> fetchSupplierFeedback());\r\n    }\r\n\r\n    // delete supplier feedback\r\n\r\n    // fetch evaluations\r\n    async function fetchResourceEvaluations(){\r\n        await axios.get(url+'api/evaluatedResources')\r\n        .then(result => { \r\n            setResourceEvaluations(result.data);\r\n        })\r\n    }\r\n\r\n    // add evaluation \r\n    \r\n    function addResourceEvaluation(e){\r\n        e.preventDefault();\r\n        axios.post(url+'api/supplierFeedback',{\r\n            id: 0,\r\n            acceptable: currentAcceptability,\r\n            received_at: currentDate,\r\n            supplier_feedbackID: currentSupplierFeedbackID, // last one from the list \r\n            resourceID: currentResourceID,\r\n            evaluation_reasoning: currentReasoning\r\n        }).then(()=> fetchResourceEvaluations());\r\n    }\r\n\r\n    // change resource status based on evaluation\r\n\r\n    function manageResourceStatus(){\r\n        (currentAcceptability ? \r\n        axios.patch(url+'api/resources/'+currentResourceID +'/'+statuses[1], {\r\n            status: statuses[1]\r\n        }).catch((error) => console.log('Error: ', error))\r\n        :\r\n        axios.patch(url+'api/resources/'+currentResourceID +'/'+statuses[2], {\r\n            status: statuses[2]\r\n        }).catch((error) => console.log('Error: ', error))\r\n        );\r\n        fetchResources();\r\n    }\r\n\r\n    function manageProductPlanCompletion(id){\r\n        axios.patch(url+'api/productPlan/'+id +'/'+ true, { // change last argument\r\n            done: true\r\n        }).catch((error) => console.log('Error: ', error))\r\n    }\r\n\r\n    // fetch product profiles\r\n    async function fetchProductPlans(){\r\n        await axios.get(url+'api/productPlan')\r\n        .then(result => { \r\n            setProductPlans(result.data);\r\n        });\r\n    }\r\n\r\n    // add product profile\r\n\r\n    function addProductPlan(e){\r\n        e.preventDefault();\r\n        axios.post(url+'api/productPlan',{\r\n            id: 0,\r\n            done: false,\r\n            product_type: currentProductType,\r\n            estimated_quantity: currentEstimatedQuantity,\r\n            used_weight: currentUsedWeight,\r\n            resourceID: currentResourceID\r\n        }).then(()=> fetchProductPlans());\r\n        setModalProductPlan(false);\r\n    }\r\n\r\n    function handleEvaluations(){\r\n        setShowProductPlans(false);\r\n        setShowResourceEvaluation(true);\r\n    }\r\n\r\n    function handleProjectPlans(){\r\n        setShowResourceEvaluation(false);\r\n        setShowProductPlans(true);\r\n    }\r\n\r\n    function handleProceed(e){\r\n        e.preventDefault();\r\n        addSupplierFeedback();\r\n        manageResourceStatus();\r\n        setModalSupplierFeedback(false);\r\n        setModalEvaluation(true);\r\n    }\r\n\r\n    return(\r\n        <div class=\"main\">\r\n            {/**/}\r\n            <div class = \"selection\">\r\n            <button class=\"selectionButton\" onClick={() => handleEvaluations()}>Manage Evaluations</button>\r\n            <button class=\"selectionButton\" onClick={() => handleProjectPlans()}>Manage Product planning</button>\r\n            </div>\r\n\r\n            <div class= \"display\">\r\n            {/*show resourceEvaluations (show resources with 'to evaluate' status)*/}\r\n            {showResourceEvaluation ? \r\n            <div class = \"fullPanel\">\r\n                <div class = \"halfPanel\">\r\n                <h2>The following resources are waiting for evaluation: </h2>\r\n                {resources.map(resource => (resource.status.status == \"To Evaluate\" ? \r\n                    <ul key={resource.id} onMouseOver={()=> setCurrentResourceID(resource.id)}>\r\n                    <button class=\"changesButton\" onClick={() => setModalSupplierFeedback(true)}>Evaluate</button>    \r\n                    {resource.original_weight} + \" kg of \" + {resource.material.title}\r\n                    </ul>\r\n                    : null)\r\n                )}\r\n                </div>\r\n\r\n                <div class = \"halfPanel\" id=\"end\">\r\n                <h2>Current evaluations</h2>\r\n                {resourceEvaluations.map(evaluation =>\r\n                    <ul key={evaluation.id}> {evaluation.received_at} \r\n                    ({evaluation.acceptable ? \r\n                    <b> Resource {evaluation.resourceID} was accepted at {evaluation.received_at}</b> \r\n                    :\r\n                    <b> Resource {evaluation.resourceID} was returned at {evaluation.received_at}</b>})\r\n                    </ul>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            \r\n            :\r\n            null}\r\n\r\n            {/*show product plans*/}\r\n\r\n            {showProductPlans ? \r\n                <div class = \"fullPanel\">\r\n                <div class = \"halfPanel\">\r\n                <h2>Assign resources to product plans</h2>\r\n                {resources.map(resource => (resource.status.status == \"Accepted\" ? \r\n                    <ul key={resource.id} onMouseOver={()=> setCurrentResourceID(resource.id)}>\r\n                        {resource.remaining_weight} kg of {resource.material.title}\r\n                    <button onClick={(e) => setModalProductPlan(true)}>Assign</button>\r\n                    </ul>\r\n                    : null)\r\n                    )}\r\n                </div>\r\n                <div class = \"halfPanel\" id=\"end\">\r\n                <h2>Current product plans</h2>    \r\n                {productPlans.map(plan =>\r\n                    <ul key={plan.id} onMouseOver={()=> setCurrentResourceID(plan.id)}>\r\n                        {plan.estimated_quantity} of {plan.product_type.type} {plan.product_type.title} ({plan.product_type.productCategoryID})\r\n                        ({plan.done} ?\r\n                        <button onClick={() => manageProductPlanCompletion()}> Complete </button>\r\n                        :\r\n                        <b>completed</b>)\r\n                    </ul>\r\n                    )}\r\n                </div>\r\n                </div>\r\n            \r\n            :\r\n            null}\r\n            \r\n\r\n            {/*Modal to add new Supplier feedback associated with upcoming evaluation*/}\r\n            <div>\r\n                <Modal\r\n                isOpen={modalSupplierFeedback}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>New Supplier feedback</h2>\r\n                    <button onClick={() => setModalSupplierFeedback(false)}> Close </button>\r\n\r\n                    <input type=\"text\"></input>\r\n                    {/*setCurrentReasoning*/}\r\n                    <label>\r\n                        <button onClick={() => setModalSupplierFeedback(false)}> Close </button>\r\n                            Suppliers\r\n                            <select onChange={(e) => setCurrentSupplierID(e.target.value)}>\r\n                            {suppliers.map( option => \r\n                            <option key={option.id} value={option.id}>{option.title}</option>)}\r\n                            </select>\r\n                        </label>\r\n                    {/*select supplier and setCurrentSupplierID*/}\r\n\r\n                    <button onClick = {e => handleProceed(e)}>Proceed to evaluate</button>\r\n                </Modal>\r\n            </div>\r\n            {/*Modal to add new resource Evaluation*/}\r\n            <div>\r\n                <Modal\r\n                isOpen={modalResourceEvaluation}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>New Evaluation</h2>\r\n                    <input type=\"text\"></input>\r\n                    <select onChange={(e) => setCurrentAcceptability(e.target.value)}>\r\n                        <option value={true}>Accepted</option>\r\n                        <option value={false}>Returned</option>\r\n                    </select>\r\n                    {/*if current acceptability is false, change resource status to returned. Else change to accepted*/}\r\n                    <label>\r\n                    Comment on the supplier\r\n                    <input type=\"text\" onChange={(e)=>setCurrentReasoning(e.target.value)}></input>\r\n                    </label>\r\n                    <button onClick = {e => addResourceEvaluation(e)}>Submit a new Evaluation</button>\r\n                </Modal>\r\n            </div>\r\n\r\n            {/*Modal to add new product plan (show resources with 'accepted' status)*/}\r\n            \r\n            <div>\r\n                <Modal\r\n                isOpen={modalProductPlan}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>New Product Plan</h2>\r\n\r\n                    {/*setCurrentProductType*/}\r\n                    {/*setCurrentEstimatedQuantity*/}\r\n                    {/*setCurrentUsedWeight*/}\r\n                    {/*manipulated remaining weight. If resulting weight is 0, set status to archived*/}\r\n                    <button onClick = {e => addResourceEvaluation(e)}>Add a new Resource</button>\r\n                </Modal>\r\n            </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Overview;","\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal, { setAppElement } from 'react-modal';\r\nimport \"C:/Users/umada/my-application/src/Styling/Main.scss\";\r\n\r\nfunction ManageOptions() {\r\n\r\n  const url = \"https://management-backend-app.herokuapp.com/\";\r\n\r\n  // icons\r\n  const plus = <FontAwesomeIcon icon={faPlus} />\r\n  const trash = <FontAwesomeIcon icon={faTrash} />\r\n\r\n  // loaded lists\r\n  const [productCategories, setProductCategories] = useState([]);\r\n  const [productTypes, setProductTypes] = useState([]);\r\n\r\n  // panels\r\n  const [showProductTypes, setShowProductTypes] = useState(false);\r\n  const [showProductCategories, setShowProductCategories] = useState(false);\r\n\r\n  // modal dependencies\r\n  const [modalProductType, setModalProductType] = useState(false);\r\n  const [modalProductCategory, setModalProductCategory] = useState(false);\r\n\r\n  // variables\r\n  const [currentProductCategoryID, setCurrentProductCategoryID] = useState(1);\r\n  const [currentType, setCurrentType] = useState(\"\");\r\n  const [currentTitle, setCurrentTitle] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    fetchProductTypes();\r\n    fetchProductCategories();\r\n  }, []);\r\n\r\n  async function fetchProductTypes() {\r\n    await axios.get(url+'api/productType')\r\n      .then(result => {\r\n        setProductTypes(result.data);\r\n      })\r\n  }\r\n\r\n  async function fetchProductCategories() {\r\n    await axios.get(url+'api/productCategory')\r\n      .then(result => {\r\n        setProductCategories(result.data);\r\n      })\r\n  }\r\n\r\n\r\n  function addProductType(e) {\r\n    e.preventDefault();\r\n    axios.post(url+'api/productType', {\r\n      id: 0,\r\n      productCategoryID: currentProductCategoryID,\r\n      title: currentTitle,\r\n      type: currentType,\r\n    }).then(() => fetchProductTypes());\r\n    setModalProductType(false);\r\n  }\r\n\r\n  async function addProductCategory(e) {\r\n    e.preventDefault();\r\n    axios.post(url+'api/productCategory', {\r\n      id: 0,\r\n      title: currentTitle,\r\n    }).then(() => fetchProductCategories());\r\n    setModalProductCategory(false);\r\n  }\r\n\r\n  async function deleteProductType(id) {\r\n    axios.delete(url+'api/productType/' + id)\r\n      .then(() => fetchProductTypes());\r\n  }\r\n\r\n  async function deleteProductCategory(id) {\r\n    axios.delete(url+'api/productCategory/' + id)\r\n      .then(() => fetchProductCategories());\r\n  }\r\n\r\n  function handleTypes() {\r\n    setShowProductCategories(false);\r\n    setShowProductTypes(true);\r\n  }\r\n  function handleCategories() {\r\n    setShowProductTypes(false);\r\n    setShowProductCategories(true);\r\n  }\r\n\r\n  return (\r\n    <div class=\"main\">\r\n\r\n      <div class=\"selection\">\r\n        <button class=\"selectionButton\" onClick={() => handleTypes()}>Product Types</button>\r\n        <button class=\"selectionButton\" onClick={() => handleCategories()}>Product Categories</button>\r\n      </div>\r\n\r\n      <div class=\"display\">\r\n\r\n        {/*type pannel*/}\r\n        \r\n        {showProductTypes ?\r\n          <div id=\"inner\">\r\n            <button onClick={() => setModalProductType(true)}>{plus}</button>\r\n            {productTypes.map(type => <ul key={type.id}>{type.title}\r\n              <button onClick={() => deleteProductType(type.id)}>{trash}</button></ul>)}\r\n            {/*map all, add new, delete*/}\r\n          </div>\r\n          :\r\n          <></>}\r\n        {showProductCategories ?\r\n          <div id=\"inner\">\r\n            <button onClick={() => setModalProductCategory(true)}>{plus}</button>\r\n            {productCategories.map(category => <ul key={category.id}>{category.title}\r\n              <button onClick={() => deleteProductCategory(category.id)}>{trash}</button></ul>)}\r\n            {/*map all, add new, delete*/}\r\n          </div>\r\n          :\r\n          <></>}\r\n      \r\n\r\n      {/*Modals*/}\r\n      <div> {/*Type modal*/}\r\n        <Modal\r\n          isOpen={modalProductType}\r\n          appElement={document.getElementById('root')}>\r\n          <h2>New Product type</h2>\r\n          <button onClick={() => setModalProductType(false)}> Close </button>\r\n\r\n          <input type=\"text\" placeholder=\"New Type\" onChange={e => setCurrentType(e.target.value)}></input>\r\n          <input type=\"text\" placeholder=\"New Title\" onChange={e => setCurrentTitle(e.target.value)}></input>\r\n\r\n          <label>\r\n            Categories\r\n            <select onChange={(e) => setCurrentProductCategoryID(e.target.value)}>\r\n              {productCategories.map(option =>\r\n                <option key={option.id} value={option.id}>{option.title}</option>)}\r\n            </select>\r\n          </label>\r\n\r\n          <button onClick={e => addProductType(e)}>Add a new type</button>\r\n        </Modal>\r\n      </div>\r\n\r\n      <div> {/*Category modal*/}\r\n        <Modal\r\n          isOpen={modalProductCategory}\r\n          appElement={document.getElementById('root')}>\r\n          <h2>New Product Category</h2>\r\n          <button onClick={() => setModalProductCategory(false)}> Close </button>\r\n\r\n          <input type=\"text\" placeholder=\"New Title\" onChange={e => setCurrentTitle(e.target.value)}></input>\r\n\r\n          <button onClick={e => addProductCategory(e)}>Add a new category</button>\r\n        </Modal>\r\n      </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ManageOptions;","import {useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal, { setAppElement } from 'react-modal';\r\nimport \"C:/Users/umada/my-application/src/Styling/Main.scss\";\r\n\r\n\r\nfunction Overview(){\r\n\r\n    const url = \"https://management-backend-app.herokuapp.com/\";\r\n\r\n    // loaded values\r\n    const [finalProducts, setFinalProducts] = useState([]);\r\n    const [productPlans, setProductPlans] = useState([]);\r\n    // panels\r\n\r\n    const [productOverviewPanel, setProductOverviewPanel] = useState(true);\r\n    const [profitPanel, setProfitPanel] = useState(false);\r\n\r\n    async function fetchProductPlans(){\r\n\r\n    }\r\n\r\n    async function fetchFinalProducts(){\r\n        await axios.get(url+'api/finalProducts')\r\n        .then(result => { \r\n            setFinalProducts(result.data);\r\n        })\r\n    }\r\n  \r\n    async function addFinalProducts(){\r\n        axios.post(url+'api/finalProducts',{\r\n            availableAmount: 0,\r\n            id: 0,\r\n            productPlanID: 0,\r\n            qualityAmount: 0,\r\n            soldAmount: 0,\r\n            totalAmount: 0,\r\n            unitPrice: 0\r\n        }).then(()=> fetchFinalProducts());\r\n    }\r\n\r\n    function archiveResource(){// patch request\r\n\r\n        // when resource remaining quantity becomes 0, archive it\r\n        // \r\n    }\r\n\r\n    function handleProductsPanel(){\r\n        setProductOverviewPanel(true);\r\n        setProfitPanel(false);\r\n    }\r\n\r\n    function handleProfitPanel(){\r\n        setProfitPanel(true);\r\n        setProductOverviewPanel(false);\r\n    }\r\n\r\n    return(\r\n\r\n        <div class=\"main\" >\r\n            <div class=\"selection\">\r\n                <button class=\"selectionButton\" onClick = {()=> handleProductsPanel()}>Product overview</button>\r\n                <button class=\"selectionButton\" onClick = {()=> handleProfitPanel()}>Profits overview</button>\r\n                {/*add and look at products - overview*/}\r\n                {/* look at the current status on sales and profit for the resource (only active resources)*/}\r\n                {/* Once a product is sold out, archive the resource  - a function */}\r\n                \r\n            </div>\r\n\r\n            <div class=\"display\">\r\n\r\n                {productOverviewPanel&&(\r\n                    <div class=\"fullPanel\">\r\n                        <div class=\"halfPanel\">\r\n                            <h2>Finalize plans</h2>\r\n                            {}\r\n\r\n                        </div>\r\n                        <div class=\"halfPanel\">\r\n                            <h2>Available products</h2>\r\n\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {profitPanel&&(\r\n                <div class=\"fullPanel\">\r\n                    {/*Product - In Stock - Sold - Revenue (proportional )*/}\r\n                    \r\n                </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Overview;","\r\nimport {useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal, { setAppElement } from 'react-modal';\r\nimport \"C:/Users/umada/my-application/src/Styling/Main.scss\";\r\n\r\n// add \r\n/*\r\n[\r\n  {\r\n    \"availableAmount\": 0,\r\n    \"id\": 0,\r\n    \"productPlanID\": 0,\r\n    \"qualityAmount\": 0,\r\n    \"soldAmount\": 0,\r\n    \"totalAmount\": 0,\r\n    \"unitPrice\": 0\r\n  }\r\n]\r\n*/\r\n\r\nfunction ManageOptions(){\r\n\r\n  const url = \"https://management-backend-app.herokuapp.com/\";\r\n\r\n  \r\n\r\n    return(\r\n      <div class=\"main\" >\r\n          <div class=\"selection\">\r\n          \r\n          </div>\r\n\r\n          <div class=\"display\">\r\n\r\n          </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ManageOptions;","\r\nimport './Styling/App.scss'\r\nimport { BrowserRouter as Router,Routes, Route } from 'react-router-dom';\r\nimport Navigation from './Navigation';\r\nimport Home from'./Components/Home.js';\r\nimport Users from'./Components/Users.js';\r\nimport PurchaseOverview from'./Components/Purchase/Overview.js';\r\nimport ManagePurchaseOptions from'./Components/Purchase/ManageOptions.js';\r\nimport ProductionOverview from'./Components/Production/Overview.js';\r\nimport ManageProductionOptions from'./Components/Production/ManageOptions.js';\r\nimport SalesOverview from'./Components/Sales/Overview.js';\r\nimport ManageSalesOptions from'./Components/Sales/ManageOptions.js';\r\nimport \"./Styling/Navbar.scss\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div class=\"full\">\r\n      <Router>\r\n        <Route path='/:page' component={Navigation} />\r\n        <Route exact path='/' component={Navigation} />\r\n        <Route exact path='/' component={Home} />\r\n        <Route exact path='/home' component={Home} />\r\n        <Route exact path='/users' component={Users} />\r\n        <Route exact path='/purchaseOverview' component={PurchaseOverview} />\r\n        <Route exact path='/managePurchaseOptions' component={ManagePurchaseOptions} />\r\n        <Route exact path='/productionOverview' component={ProductionOverview} />\r\n        <Route exact path='/manageProductionOptions' component={ManageProductionOptions} />\r\n        <Route exact path='/salesOverview' component={SalesOverview} />\r\n        <Route exact path='/manageSalesOptions' component={ManageSalesOptions} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Styling/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}