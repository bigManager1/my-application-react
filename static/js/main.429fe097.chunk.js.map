{"version":3,"sources":["../node_modules/express/lib sync","Navigation.js","Components/Purchase/Overview.js","Components/Purchase/ManageOptions.js","Components/Production/Overview.js","Components/Production/ManageOptions.js","Components/Sales/Overview.js","App.js","reportWebVitals.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Navigation","faHome","faUsers","faComment","faEnvelope","faInbox","faDownload","currentDate","Date","year","String","getFullYear","getDay","getDate","padStart","getMonth","class","to","Overview","url","plus","icon","faPlus","useState","supplierFeedbackPanel","showSupplierFeedbackPanel","resourcePanel","showReasourcePanel","purposes","setPurposes","materials","setMaterials","suppliers","setSuppliers","resources","setResources","statuses","setStatuses","supplierFeedbacks","setSupplierFeedbacks","modalResources","setModalResources","modalSupplierFeedback","setModalSupplierFeedback","modalDateUpdate","setModalDateUpdate","modalReplaceResource","setModalReplaceResource","currentId","setCurrentId","currentWeight","setCurrentWeight","currentPrice","setCurrentPrice","currentColor","setCurrentColor","currentEstimatedArrival","setCurrentEstimatedArrival","currentStatus","setCurrentStatus","currentMaterial","setCurrentMaterial","currentPurpose","setCurrentPurpose","currentSupplier","setCurrentSupplier","currentReasoning","setCurrentReasoning","handlePatchDate","a","axios","get","then","result","data","fetchResources","fetchSupplierFeedbacks","useEffect","fetchPurpose","fetchSupplier","fetchMaterial","fetchStatuses","today","month","day","handleAddResource","preventDefault","post","color","estimatedArrival","material","price","purpose","registryDate","status","supplier","weight","handleAddSupplierFeedback","resourceID","length","purchaseReasoning","qualityReasoning","patch","putReplaceResource","put","onClick","title","map","resource","feedback","isOpen","appElement","document","getElementById","type","onChange","target","value","option","min","step","precision","ManageOptions","showSuppliers","setShowSuppliers","showPurpose","setShowPurpose","showMaterial","setShowMaterial","modalPurpose","setModalPurpose","modalMaterial","setModalMaterial","modalSupplier","setModalSupplier","newTitle","setNewTitle","trash","faTrash","delete","required","placeholder","addPurpose","addMaterial","addSupplier","showResourceEvaluation","setShowResourceEvaluation","showProductPlans","setShowProductPlans","modalResourceEvaluation","setModalEvaluation","modalProductPlan","setModalProductPlan","modalReceive","setModalReceive","resourceEvaluations","setResourceEvaluations","productPlans","setProductPlans","productTypes","setProductTypes","currentRegistryDate","setCurrentRegistryDate","currentResourceID","setCurrentResourceID","currentProductType","setCurrentProductType","currentEstimatedQuantity","setCurrentEstimatedQuantity","currentUsedWeight","setCurrentUsedWeight","currentQualityReasoning","setCurrentQualityReasoning","fetchResourceEvaluations","fetchProductPlans","handleModalProductPlan","evaluationId","assignedToPlan","patchEvaluationAssignedToPlan","handleAddResourceEvaluation","receivedAt","patchQualityReasoning","putStatus","selectedStatus","GetOneCategory","props","cat","JSON","stringify","fetchSuppliers","fetchProductTypes","onMouseOver","evaluation","evaluationReasoning","plan","estimatedQuantity","productType","done","catch","error","console","log","handleJustSupplierFeedback","productCategoryID","usedWeight","addProductPlan","patchDate","productCategories","setProductCategories","showProductTypes","setShowProductTypes","showProductCategories","setShowProductCategories","modalProductType","setModalProductType","modalProductCategory","setModalProductCategory","currentProductCategoryID","setCurrentProductCategoryID","currentType","setCurrentType","currentTitle","setCurrentTitle","fetchProductCategories","deleteProductType","category","deleteProductCategory","addProductType","addProductCategory","finalProducts","setFinalProducts","currentPlanId","setCurrentPlanId","currentQualityAmount","setCurrentQualityAmount","currentTotalAmount","setCurrentTotalAmount","currentUnitPrice","setCurrentUnitPrice","productOverviewPanel","setProductOverviewPanel","profitPanel","setProfitPanel","modalFinalProduct","setModalFinalProduct","fetchFinalProducts","productPlanID","qualityAmount","totalAmount","unitPrice","handleAddFinalProduct","addFinalProduct","planId","product","parseFloat","toFixed","App","path","component","exact","PurchaseOverview","ManagePurchaseOptions","ProductionOverview","ManageProductionOptions","SalesOverview","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.429fe097.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 321;","import { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome, faUsers, faEnvelope, faComment, faInbox, faFileDownload, faDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport \"./Styling/Navbar.scss\";\r\n//Navigation bar where all choices are presented in the purchase interface\r\n\r\n// good optionals\r\n\r\n// send emails for externals\r\n// send chats for internals\r\n// look in inbox for internal chats\r\n// download a report (choose from API)\r\n\r\n\r\n\r\nconst Navigation = () => {\r\n  // icons\r\n  const home = <FontAwesomeIcon icon={faHome} />\r\n  const users = <FontAwesomeIcon icon={faUsers} />\r\n  const message = <FontAwesomeIcon icon={faComment} />\r\n  const email = <FontAwesomeIcon icon={faEnvelope} />\r\n  const inbox = <FontAwesomeIcon icon={faInbox} />\r\n  const download = <FontAwesomeIcon icon={faDownload} />\r\n\r\n  const weekdays= [\"Monday\",\"Tuesday\", \"Wednesday\", \"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"]\r\n  // variables\r\n  const currentDate = new Date();\r\n  var year = String(currentDate.getFullYear());\r\n  var weekday = String(weekdays[currentDate.getDay()-1]);\r\n  var day = String(currentDate.getDate()).padStart(2, '0');\r\n  var month = String(currentDate.getMonth()+1).padStart(2, '0');\r\n  var displayDate = weekday + \" \" + day + \"/\" +month + \"/\" +year;\r\n\r\n\r\n    return (\r\n      <div class=\"navigation\">\r\n        <div class=\"upper\">\r\n        <Link to=\"/purchaseOverview\"><button class=\"navButton\">Purchase Overview</button></Link>\r\n        <Link to=\"/managePurchaseOptions\"><button class=\"navButton\">Purchase Options</button></Link>\r\n        <Link to=\"/productionOverview\"><button class=\"navButton\">Production Overview</button></Link>\r\n        <Link to=\"/manageProductionOptions\"><button class=\"navButton\">Production Options</button></Link>\r\n        <Link to=\"/salesOverview\"><button class=\"navButton\">Sales Overview</button></Link>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Navigation;\r\n\r\n\r\n\r\n  \r\n","import {useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal from 'react-modal';\r\nimport \"C:/Users/umada/my-application/src/Styling/Main.scss\";\r\nimport e from \"express\";\r\n\r\nfunction Overview () {\r\n    const url = \"https://management-backend-app.herokuapp.com/api/\";\r\n    // icons\r\n    const plus = <FontAwesomeIcon icon={faPlus} />\r\n\r\n    // Supplier feedback pannel \r\n\r\n    const [supplierFeedbackPanel, showSupplierFeedbackPanel] = useState(false);\r\n    const [resourcePanel, showReasourcePanel] = useState(true);\r\n\r\n    // hooks to store resource descriptor api value collections\r\n    const [purposes, setPurposes] = useState([]);\r\n    const [materials, setMaterials] = useState([]);\r\n    const [suppliers, setSuppliers] = useState([]);\r\n    const [resources, setResources] = useState([]);\r\n    const [statuses, setStatuses] = useState([]);\r\n    const [supplierFeedbacks,setSupplierFeedbacks] = useState([]);\r\n\r\n    // modal dependencies\r\n    const [modalResources, setModalResources] = useState(false);\r\n    const [modalSupplierFeedback, setModalSupplierFeedback] = useState(false);\r\n    const [modalDateUpdate, setModalDateUpdate] = useState(false);\r\n    const [modalReplaceResource, setModalReplaceResource] = useState(false);\r\n\r\n    // hooks for adding a new resource\r\n    const [currentId, setCurrentId] = useState(null);\r\n    const [currentWeight, setCurrentWeight] = useState(1.0);\r\n    const [currentPrice, setCurrentPrice] = useState(1.0);\r\n    const [currentColor, setCurrentColor] = useState(\"#000000\");\r\n    const [currentEstimatedArrival, setCurrentEstimatedArrival] = useState(\"2021-12-12\");\r\n    const [currentStatus,setCurrentStatus] = useState(\"\");\r\n    const [currentMaterial, setCurrentMaterial] = useState(\"\");\r\n    const [currentPurpose,setCurrentPurpose] = useState(\"\");\r\n    const [currentSupplier, setCurrentSupplier] = useState(\"\");\r\n\r\n    // hooks for adding a new supplier feedback\r\n    const [currentReasoning,setCurrentReasoning] = useState(\"\");\r\n\r\n    // functions to handle modal interactions\r\n\r\n    function handleResourceModal(){\r\n        // clearing old modal values\r\n        setModalResources(true);\r\n        setCurrentMaterial(materials[0].title);\r\n        setCurrentPurpose(purposes[0].title);\r\n        setCurrentSupplier(suppliers[0].title);\r\n        setCurrentStatus(statuses[0].status);\r\n    }\r\n\r\n    function handleSupplierFeedbackModal(){\r\n        setModalResources(false);\r\n        setModalSupplierFeedback(true);\r\n        setCurrentReasoning(\"\"); // cleaning up the previous value\r\n    }\r\n\r\n    function handlePatchDate(id){\r\n        setCurrentId(id);\r\n        setModalDateUpdate(true);\r\n    }\r\n\r\n    function handlePutReplaceResource(id, weight, material, color, purpose){\r\n        setCurrentId(id);\r\n        setCurrentWeight(weight);\r\n        setCurrentMaterial(material);\r\n        setCurrentColor(color);\r\n        setCurrentPurpose(purpose);\r\n        setModalReplaceResource(true);\r\n    }\r\n\r\n    // functions that manage appearance when buttons are clicked.\r\n\r\n    function handleSupplierFeedbackPanel(){\r\n        showReasourcePanel(false)\r\n        showSupplierFeedbackPanel(true)\r\n    }\r\n\r\n    function handleResourcePanel(){\r\n        showSupplierFeedbackPanel(false);\r\n        showReasourcePanel(true)\r\n    }\r\n\r\n// internal functions \r\n    useEffect(() => {\r\n        fetchPurpose();\r\n        fetchSupplier();\r\n        fetchMaterial();\r\n        fetchStatuses();\r\n        fetchResources();\r\n        fetchSupplierFeedbacks();\r\n    }, []);\r\n\r\n\r\n// fetching data functions\r\n\r\n    async function fetchPurpose(){\r\n        await axios.get(url+'resourcePurpose')\r\n        .then(result => { \r\n            setPurposes(result.data);\r\n    })}\r\n\r\n    async function fetchMaterial(){\r\n        await axios.get(url+'resourceMaterial')\r\n        .then(result => { \r\n            setMaterials(result.data);\r\n    })}\r\n    \r\n    async function fetchSupplier(){\r\n        await axios.get(url+'resourceSupplier')\r\n        .then(result => { \r\n            setSuppliers(result.data);\r\n    })}\r\n\r\n    async function fetchResources(){\r\n        await axios.get(url+'textileResources')\r\n        .then(result => { \r\n            setResources(result.data);\r\n    })}\r\n\r\n    async function fetchStatuses(){\r\n        await axios.get(url+'resourceStatus')\r\n        .then(result => { \r\n            setStatuses(result.data);\r\n    })}\r\n\r\n    async function fetchSupplierFeedbacks(){\r\n        await axios.get(url+\"supplierFeedback\")\r\n        .then(result =>\r\n            setSupplierFeedbacks(result.data));\r\n    }\r\n\r\n    // current date expression \r\n    const today = new Date();\r\n    const month = ((today.getMonth() +1) <10 ? \"0\" + String(today.getMonth() + 1) : String(today.getMonth()+1));\r\n    const day = (today.getDate()) < 10  ? \"0\" + String(today.getDate()) : String(today.getDate());\r\n    const currentDate =   String(today.getFullYear())+ \"-\" + month+ \"-\" + day;\r\n\r\n    // functions to add new properties\r\n    function addResource(){\r\n        axios.post(url+'textileResources',{\r\n        color: currentColor,\r\n        estimatedArrival: currentEstimatedArrival,\r\n        id: 0,\r\n        material: currentMaterial,\r\n        price: currentPrice,\r\n        purpose: currentPurpose,\r\n        registryDate: currentDate,\r\n        status: currentStatus,\r\n        supplier: currentSupplier,\r\n        weight: currentWeight\r\n    }).then(()=> fetchResources());\r\n    }\r\n\r\n    function handleAddResource(e){\r\n        e.preventDefault();\r\n        addResource();\r\n        handleSupplierFeedbackModal();\r\n    }\r\n\r\n    function addSupplierFeedback(){\r\n        axios.post(url+'supplierFeedback', {\r\n            id:0,\r\n            resourceID: resources.length,\r\n            supplier: currentSupplier,\r\n            purchaseReasoning: currentReasoning,\r\n            qualityReasoning: \"\"\r\n        }).then(()=> fetchSupplierFeedbacks());\r\n    }\r\n\r\n    function handleAddSupplierFeedback(e){\r\n        e.preventDefault();\r\n        addSupplierFeedback();\r\n        setModalSupplierFeedback(false);\r\n    }\r\n\r\n    function patchDate(){\r\n        axios.patch(url+'textileResources/'+ currentId,{\r\n            estimatedArrival: currentEstimatedArrival\r\n        })\r\n        fetchResources();\r\n    }\r\n\r\n    function handlePatchDate(e){\r\n        e.preventDefault();\r\n        patchDate();\r\n        setModalDateUpdate(false);\r\n    }\r\n\r\n    function putReplaceResource(){\r\n        axios.put(url+'textileResources/'+ currentId,{\r\n            estimatedArrival: currentEstimatedArrival,\r\n            registryDate: currentDate,\r\n            material: currentMaterial,\r\n            price: currentPrice,\r\n            status: statuses[0].status,\r\n            supplier: currentSupplier,\r\n            purpose: currentPurpose,\r\n            weight: currentWeight,\r\n            color: currentColor\r\n        }).then(() => fetchResources());\r\n\r\n    }\r\n\r\n    function handlePutReplaceResource(e){\r\n        e.preventDefault();\r\n        putReplaceResource();\r\n        setModalReplaceResource(false);\r\n    }\r\n\r\n    return(\r\n        \r\n        <div class=\"main\">\r\n\r\n            <div class=\"selection\">\r\n            <button class=\"selectionButton\" onClick={() => handleResourceModal()}>{plus}</button>\r\n            <button class=\"selectionButton\" onClick= {() => handleResourcePanel()}>See resources</button>\r\n            <button class=\"selectionButton\" onClick= {() => handleSupplierFeedbackPanel()}>Supplier feedback</button>\r\n            </div>\r\n\r\n            <div class = \"display\">\r\n\r\n            {resourcePanel&&(\r\n\r\n                <div class = \"filler\">\r\n                <div class=\"panel\">\r\n                <h2>\r\n                    To be evaluated\r\n                </h2>\r\n                <div class=\"inner\">\r\n                    {resources.map(resource => (resource.status == \"To Evaluate\" ? \r\n                    <ul>{resource.weight} kg of {resource.material} for {resource.purpose} due on {resource.estimatedArrival}\r\n                    \r\n                    {resource.estimatedArrival<currentDate?\r\n                    <button class=\"changesButton\" onClick={()=> handlePatchDate(resource.id)}>Change date</button>\r\n                    :\r\n                    null\r\n                    }\r\n                    </ul>\r\n                    : null)\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"panel\">\r\n                <h2>\r\n                    Returned\r\n                </h2>\r\n                <div class=\"inner\">\r\n                {resources.map(resource => (resource.status == \"Returned\" ? \r\n                    <ul>{resource.weight} kg of {resource.material} for {resource.purpose}\r\n                    <button class=\"changesButton\" onClick= {() => handlePutReplaceResource(resource.id, resource.weight,\r\n                         resource.material, resource.color, resource.purpose)}>\r\n                        Replace</button>\r\n                    </ul>\r\n                    : null)\r\n                    )}\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"panel\" id=\"end\">\r\n                <h2>\r\n                    Accepted\r\n                </h2>\r\n                <div class=\"inner\">\r\n                {resources.map(resource => (resource.status== \"Accepted\" ? \r\n                    <ul>{resource.material} for {resource.purpose}\r\n                    </ul>\r\n                    : null)\r\n                    )}\r\n                </div>\r\n            </div>\r\n            </div>\r\n            )}\r\n\r\n            {supplierFeedbackPanel&&(\r\n\r\n                <div>\r\n                    <h2>See supplier feedback</h2>\r\n                    {supplierFeedbacks.map(feedback =>\r\n                        <div>\r\n                        <p>Supplier: {feedback.supplier} </p>\r\n                        <p>for resource {feedback.resourceID}</p>\r\n                        <p>Quality: {feedback.qualityReasoning} </p>\r\n                        <p>Communication: {feedback.purchaseReasoning}</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n\r\n            {/* Modal for supplier feedback*/}\r\n\r\n            <div>\r\n                <Modal\r\n                isOpen={modalSupplierFeedback}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>Add feedback to describe supplier's communication</h2>\r\n                    <p>\r\n                    <input type=\"text\" onChange={(e)=> setCurrentReasoning(e.target.value)}></input>\r\n                    </p>\r\n                    <button class=\"changesButton\" onClick = {(e) => handleAddSupplierFeedback(e)}>Complete</button>\r\n                </Modal>\r\n            </div>\r\n\r\n            {/* Modal for changing the date of a resource*/}\r\n\r\n            <div>\r\n                <Modal\r\n                isOpen={modalDateUpdate}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>Set a new date</h2>\r\n                    <label>\r\n                            Estimated Arrival date\r\n                            <input type = \"date\" onChange={(e) => setCurrentEstimatedArrival(e.target.value)}></input>    \r\n                    </label>\r\n                    <button class=\"changesButton\" onClick = {(e) => handlePatchDate(e)}>Set</button>\r\n                \r\n                </Modal>\r\n            </div>\r\n\r\n            {/* Modal for replacing returned resources*/}\r\n\r\n            <div>\r\n                <Modal\r\n                isOpen={modalReplaceResource}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>Replace a returned resource</h2>\r\n                    <div class=\"inner\">\r\n                    <p>\r\n                    <label>\r\n                            Suppliers\r\n                            <select onChange={(e) => setCurrentSupplier(e.target.value)}>\r\n                            {suppliers.map( option => \r\n                            <option key={option.id} value={option.title}>{option.title}</option>)}\r\n                            </select>\r\n                    </label>\r\n                    </p>    \r\n                    <p>\r\n                    <label>\r\n                            Estimated Arrival date\r\n                            <input type = \"date\" onChange={(e) => setCurrentEstimatedArrival(e.target.value)}></input>    \r\n                    </label>\r\n                    </p>\r\n                    <p>\r\n                    <label>\r\n                        Price\r\n                        <input type = \"number\" min=\"0\" step={10} precision={0.1} onChange={(e) => setCurrentPrice(e.target.value)}></input>   \r\n                    </label>\r\n                    </p>\r\n                    <button class=\"changesButton\" onClick={(e) => putReplaceResource(e)}>Replace</button>\r\n\r\n                </div>\r\n\r\n                </Modal>\r\n            </div>\r\n\r\n\r\n            {/* Modal for adding resources*/}\r\n            <div> {/* Resources modal*/}\r\n                <Modal\r\n                isOpen={modalResources}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>New Resource</h2>\r\n                    <button class=\"changesButton\" onClick={() => setModalResources(false)}> Close </button>\r\n\r\n                    <p>\r\n                        <label>\r\n                            Weight\r\n                            <input type = \"number\" min=\"0\" step={10} precision={0.1} onChange={(e) => setCurrentWeight(e.target.value)}></input>\r\n                        </label>\r\n                    </p>    \r\n                    <p>\r\n                        <label>\r\n                            Price\r\n                            <input type = \"number\" min=\"0\" step={10} precision={0.1} onChange={(e) => setCurrentPrice(e.target.value)}></input>   \r\n                        </label>\r\n                    </p>    \r\n                    <p>\r\n                        <label>\r\n                            Color\r\n                            <input type = \"color\" onChange={(e) => setCurrentColor(e.target.value)}></input>\r\n                        </label>\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            Estimated Arrival date\r\n                            <input type = \"date\" onChange={(e) => setCurrentEstimatedArrival(e.target.value)}></input>    \r\n                        </label>\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            Material\r\n                            <select onChange={(e) => setCurrentMaterial(e.target.value)}>\r\n                            {materials.map( option => \r\n                            <option key={option.id} value={option.title}>{option.title}</option>)}\r\n                            </select>\r\n                        </label>\r\n                    </p>    \r\n                    <p>\r\n                        <label>\r\n                            Purposes\r\n                            <select onChange={(e) => setCurrentPurpose(e.target.value)}>\r\n                            {purposes.map( option => \r\n                            <option key={option.id} value={option.title}>{option.title}</option>)}\r\n                            </select>\r\n                        </label>\r\n                    </p>   \r\n                    <p>\r\n                        <label>\r\n                            Suppliers\r\n                            <select onChange={(e) => setCurrentSupplier(e.target.value)}>\r\n                            {suppliers.map( option => \r\n                            <option key={option.id} value={option.title}>{option.title}</option>)}\r\n                            </select>\r\n                        </label>\r\n                    </p>\r\n\r\n                        <button class=\"changesButton\" onClick = {e => handleAddResource(e)}>Proceed</button>\r\n                </Modal>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Overview;","import {useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal from 'react-modal';\r\nimport \"C:/Users/umada/my-application/src/Styling/Main.scss\";\r\n\r\nfunction ManageOptions () {\r\nconst url = \"https://management-backend-app.herokuapp.com/\";\r\n// panels\r\nconst [showSuppliers, setShowSuppliers] = useState(false);\r\nconst [showPurpose, setShowPurpose] = useState(false);\r\nconst [showMaterial, setShowMaterial] = useState(false);\r\n\r\n// mapped lists\r\nconst [purposes, setPurposes] = useState([]);\r\nconst [materials, setMaterials] = useState([]);\r\nconst [suppliers, setSuppliers] = useState([]);\r\n\r\n// modal dependencies\r\n\r\nconst [modalPurpose, setModalPurpose] = useState(false);\r\nconst [modalMaterial, setModalMaterial] = useState(false);\r\nconst [modalSupplier, setModalSupplier] = useState(false);\r\n\r\n// variables\r\n\r\nconst [newTitle, setNewTitle] = useState(\"\");\r\n\r\n// icons\r\nconst plus = <FontAwesomeIcon icon={faPlus} />\r\nconst trash = <FontAwesomeIcon icon={faTrash} />\r\n\r\n// internal functions\r\n\r\nuseEffect(() => {\r\n    fetchPurpose();\r\n    fetchSupplier();\r\n    fetchMaterial();\r\n  }, []);\r\n\r\n\r\nfunction fetchPurpose(){\r\n    axios.get(url+'api/resourcePurpose')\r\n    .then(result => { \r\n      setPurposes(result.data);\r\n    })\r\n}\r\n\r\n\r\nfunction fetchMaterial(){\r\n    axios.get(url+'api/resourceMaterial')\r\n    .then(result => { \r\n      setMaterials(result.data);\r\n    })\r\n}\r\n\r\nfunction fetchSupplier(){\r\n    axios.get(url+'api/resourceSupplier')\r\n    .then(result => { \r\n      setSuppliers(result.data);\r\n    })\r\n}\r\n\r\n// adding new data functions \r\n\r\nfunction addPurpose(e){\r\n    e.preventDefault();\r\n    axios.post(url+'api/resourcePurpose',{\r\n        id: 0,\r\n        title: newTitle\r\n    }).then(()=> fetchPurpose());\r\n}\r\n\r\nfunction addMaterial(e){\r\n    e.preventDefault();\r\n    axios.post(url+'api/resourceMaterial',{\r\n        id: 0,\r\n        title: newTitle\r\n    }).then(()=> fetchMaterial());\r\n}\r\n\r\nfunction addSupplier(e){\r\n    e.preventDefault();\r\n    axios.post(url+'api/resourceSupplier',{\r\n        id: 0,\r\n        title: newTitle\r\n    }).then(()=> fetchSupplier());\r\n}\r\n\r\nfunction deletePurpose(id){\r\n    axios.delete(url+'api/resourcePurpose/' + id)\r\n    .then(()=> fetchPurpose());\r\n}\r\nfunction deleteMaterial(id){\r\n    axios.delete(url+'api/resourceMaterial/' + id)\r\n    .then(()=> fetchMaterial());\r\n}\r\nfunction deleteSupplier(id){\r\n    axios.delete(url+'api/resourceSupplier/' + id)\r\n    .then(()=> fetchSupplier());\r\n}\r\n\r\n// button handling functions\r\nfunction handlePurpose(){\r\n    setShowMaterial(false);\r\n    setShowSuppliers(false);\r\n    setShowPurpose(true);\r\n}\r\n\r\nfunction handleMaterial(){\r\n    setShowPurpose(false);\r\n    setShowSuppliers(false);\r\n    setShowMaterial(true);\r\n}\r\n\r\nfunction handleSupplier(){\r\n    setShowMaterial(false);\r\n    setShowPurpose(false);\r\n    setShowSuppliers(true);\r\n}\r\n\r\n\r\n    return(\r\n\r\n        <div class=\"main\">\r\n            <div class=\"selection\">\r\n\r\n                <button class=\"selectionButton\" onClick={() => handlePurpose()}>Purpose</button>\r\n                <button class=\"selectionButton\" onClick={() => handleMaterial()}>Material</button>\r\n                <button class=\"selectionButton\" onClick={() => handleSupplier()}>Supplier</button>\r\n\r\n            </div>\r\n            <div class=\"display\">\r\n\r\n            {showPurpose ?\r\n            <div id = \"inner\">\r\n                <button class=\"additionButton\" onClick={() => setModalPurpose(true)}>{plus}</button>\r\n                {purposes.map(purpose => <ul key={purpose.id}>{purpose.title} \r\n                <button class=\"additionButton\" onClick = {() => deletePurpose(purpose.id)}>{trash}</button></ul>)}\r\n            </div>\r\n            :\r\n            <></>}\r\n\r\n            <div> {/*purpose modal*/}\r\n                <Modal\r\n                isOpen={modalPurpose}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>New supplier</h2>\r\n                    <button class=\"changesButton\" onClick={() => setModalPurpose(false)}> Close </button>\r\n                    <form>\r\n                        <input required type=\"text\" placeholder=\"New purpose\" onChange = {e => setNewTitle(e.target.value)}></input>\r\n                        <button class=\"changesButton\" onClick = {e => addPurpose(e)}>Add a new purpose</button>\r\n                    </form>\r\n                </Modal>\r\n            </div>\r\n\r\n            {/*material pannel*/}\r\n            {showMaterial ?\r\n            <div id = \"inner\">\r\n                <button class=\"additionButton\" onClick={() => setModalMaterial(true)}>{plus}</button>\r\n                {materials.map(material => <ul key={material.id}>{material.title} \r\n                <button class=\"additionButton\" onClick = {() => deleteMaterial(material.id)}>{trash}</button></ul>)}\r\n                \r\n            </div>\r\n            :\r\n            <></>}\r\n            \r\n            <div> {/*Material modal*/}\r\n                <Modal\r\n                isOpen={modalMaterial}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>New material</h2>\r\n                    <button class=\"changesButton\" onClick={() => setModalMaterial(false)}> Close </button>\r\n                    <form>\r\n                        <input required type=\"text\" placeholder=\"New material\" onChange = {e => setNewTitle(e.target.value)}></input>\r\n                        <button class=\"changesButton\" onClick = {e => addMaterial(e)}>Add a new material</button>\r\n                    </form>\r\n                </Modal>\r\n            </div>\r\n\r\n            {/*supplier pannel*/}\r\n            {showSuppliers ?\r\n            <div id = \"inner\">\r\n                <button class=\"additionButton\" onClick={() => setModalSupplier(true)}>{plus}</button>\r\n                {suppliers.map(supplier => <ul key={supplier.id}>{supplier.title}\r\n                <button class=\"additionButton\" onClick = {() => deleteSupplier(supplier.id)} >{trash}</button></ul>)}\r\n            </div>\r\n            :\r\n            <></>}\r\n            \r\n            <div> {/*Material modal*/}\r\n                <Modal\r\n                isOpen={modalSupplier}\r\n                appElement={document.getElementById('root')}>\r\n\r\n                    <h2>New Supplier</h2>\r\n\r\n                    <button class=\"changesButton\" onClick={() => setModalSupplier(false)}> Close </button>\r\n                    <input type=\"text\" placeholder=\"New Supplier\" onChange = {e => setNewTitle(e.target.value)}></input>\r\n                    <button class=\"changesButton\" onClick = {e => addSupplier(e)}>Add a new supplier</button>\r\n\r\n                </Modal>\r\n            </div>\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ManageOptions;","\r\n\r\nimport {useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal from 'react-modal';\r\nimport \"C:/Users/umada/my-application/src/Styling/Main.scss\";\r\n\r\nfunction Overview(){\r\n\r\n    const url = \"https://management-backend-app.herokuapp.com/\";\r\n\r\n    // current date expression \r\n    const today = new Date();\r\n    const month = ((today.getMonth() +1) <10 ? \"0\" + String(today.getMonth() + 1) : String(today.getMonth()+1));\r\n    const day = (today.getDate()) < 10  ? \"0\" + String(today.getDate()) : String(today.getDate());\r\n    const currentDate =   String(today.getFullYear())+ \"-\" + month+ \"-\" + day;\r\n\r\n    // panels\r\n\r\n    const [showResourceEvaluation, setShowResourceEvaluation] = useState(true);\r\n    const [showProductPlans, setShowProductPlans] = useState(false);\r\n\r\n    // modal dependencies\r\n\r\n    const [modalResourceEvaluation, setModalEvaluation] = useState(false);\r\n    const [modalProductPlan, setModalProductPlan] = useState(false);\r\n    const [modalSupplierFeedback, setModalSupplierFeedback] = useState(false);\r\n    const [modalReceive,setModalReceive] = useState(false);\r\n    const [modalDateUpdate, setModalDateUpdate] = useState(false);\r\n\r\n    // fetched lists\r\n\r\n    const [suppliers, setSuppliers] = useState([]);\r\n    const [resourceEvaluations, setResourceEvaluations] = useState([]);\r\n    const [productPlans, setProductPlans] = useState([]);\r\n    const [productTypes, setProductTypes] = useState([]);\r\n    const [resources, setResources] = useState([]);\r\n    const [statuses, setStatuses] = useState([]);\r\n\r\n\r\n    // hooks used for establishing and using states of data.\r\n    \r\n    const [currentId, setCurrentId] = useState(null);\r\n    const [currentWeight, setCurrentWeight] = useState(1.0);\r\n    const [currentPrice, setCurrentPrice] = useState(1.0);\r\n    const [currentColor, setCurrentColor] = useState(\"#000000\");\r\n    const [currentEstimatedArrival, setCurrentEstimatedArrival] = useState(\"2021-12-12\");\r\n    const [currentRegistryDate, setCurrentRegistryDate] = useState(\"2021-12-12\");\r\n    const [currentMaterial, setCurrentMaterial] = useState(\"\");\r\n    const [currentPurpose,setCurrentPurpose] = useState(\"\");\r\n    const [currentSupplier, setCurrentSupplier] = useState(\"\");\r\n    const [currentResourceID, setCurrentResourceID] = useState(1);\r\n    const [currentProductType, setCurrentProductType] = useState();\r\n    const [currentEstimatedQuantity, setCurrentEstimatedQuantity] = useState(1);\r\n    const [currentUsedWeight, setCurrentUsedWeight] = useState(1.0);\r\n    const [currentQualityReasoning, setCurrentQualityReasoning] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetchSuppliers();\r\n        fetchStatuses();\r\n        fetchResources();\r\n        fetchProductTypes();\r\n        fetchProductPlans();\r\n        fetchResourceEvaluations();\r\n    }, []);\r\n\r\n    async function fetchSuppliers(){\r\n        await axios.get(url+'api/resourceSupplier')\r\n        .then(result => { \r\n            setSuppliers(result.data);\r\n    })}\r\n\r\n    async function fetchStatuses(){\r\n        await axios.get(url+'api/resourceStatus')\r\n        .then(result => { \r\n            setStatuses(result.data);\r\n    })}\r\n\r\n    // fetch product types\r\n    async function fetchProductTypes(){\r\n        await axios.get(url+'api/productType')\r\n        .then(result => { \r\n            setProductTypes(result.data);\r\n        })\r\n    }\r\n\r\n    async function fetchResources(){\r\n        await axios.get(url+'api/textileResources')\r\n        .then(result => { \r\n            setResources(result.data);\r\n    })}\r\n\r\n    // fetch evaluations\r\n    async function fetchResourceEvaluations(){\r\n        await axios.get(url+'api/evaluated')\r\n        .then(result => { \r\n            setResourceEvaluations(result.data);\r\n        })\r\n    }\r\n\r\n    function handlePatchDate(id){\r\n        setCurrentId(id);\r\n        setModalDateUpdate(true);\r\n    }\r\n\r\n    function manageProductPlanCompletion(id){\r\n        axios.patch(url+'api/productPlan/'+id +'/'+ true, { // change last argument\r\n            done: true\r\n        }).catch((error) => console.log('Error: ', error))\r\n    }\r\n\r\n    // fetch product profiles\r\n    async function fetchProductPlans(){\r\n        await axios.get(url+'api/productPlan')\r\n        .then(result => { \r\n            setProductPlans(result.data);\r\n        });\r\n    }\r\n\r\n    function addResourceEvaluation(){\r\n        axios.post(url+'api/evaluated',{\r\n            id: 0,\r\n\t\t    resourceID : currentId,\r\n\t\t    receivedAt: currentDate,\r\n            assignedToPlan:false\r\n        }).then(()=> fetchResourceEvaluations())\r\n        .then(() => fetchResources());\r\n    }\r\n\r\n    // add product profile\r\n\r\n    function addProductPlan(e){\r\n        e.preventDefault();\r\n        axios.post(url+'api/productPlan',{\r\n            id: 0,\r\n            done: false,\r\n            productType: currentProductType,\r\n            estimatedQuantity: currentEstimatedQuantity,\r\n            estimatedArrival: currentEstimatedArrival,\r\n            usedWeight: currentUsedWeight,\r\n            resourceID: currentResourceID\r\n        }).then(()=> fetchProductPlans());\r\n\r\n        setModalProductPlan(false);\r\n    }\r\n\r\n    function handleEvaluations(){\r\n        setShowProductPlans(false);\r\n        setShowResourceEvaluation(true);\r\n    }\r\n\r\n    function handleProjectPlans(){\r\n        setShowResourceEvaluation(false);\r\n        setShowProductPlans(true);\r\n    }\r\n\r\n    function handleModalReceive(id,estimatedArrival, weight, material, color, purpose, price,\r\n        registryDate, supplier){\r\n        \r\n        setCurrentResourceID(id);\r\n        setCurrentId(id);\r\n        setCurrentWeight(weight);\r\n        setCurrentMaterial(material);\r\n        setCurrentColor(color);\r\n        setCurrentPurpose(purpose);\r\n        setCurrentSupplier(supplier);\r\n        setCurrentPrice(price);\r\n        setCurrentEstimatedArrival(estimatedArrival);\r\n        setCurrentRegistryDate(registryDate);\r\n\r\n        setModalReceive(true);\r\n    }\r\n\r\n    function handleModalProductPlan(evaluationId){\r\n        patchEvaluationAssignedToPlan(evaluationId);\r\n        setModalProductPlan(true);\r\n    }\r\n\r\n    function handleReturned(){\r\n        setModalReceive(false);\r\n        putStatus(statuses[2].status);\r\n        fetchResources();\r\n        setModalSupplierFeedback(true);\r\n        \r\n    }\r\n\r\n    function handleAccepted(){\r\n        setModalReceive(false);\r\n        putStatus(statuses[1].status);\r\n        setModalEvaluation(true);\r\n        // use put to change the specified resource to \"Accepted\" in status\r\n        // open Evaluation modal and add new evaluation.\r\n    }\r\n\r\n    function handleAddResourceEvaluation(e){\r\n        e.preventDefault();\r\n        addResourceEvaluation();\r\n        patchQualityReasoning();\r\n        setModalEvaluation(false);\r\n    }\r\n\r\n    function handleJustSupplierFeedback(e){\r\n        e.preventDefault();\r\n        patchQualityReasoning();\r\n        setModalSupplierFeedback(false);\r\n    }\r\n\r\n\r\n    function putStatus(selectedStatus){\r\n\r\n        axios.put(url + 'api/textileResources/'+ currentId,{\r\n            estimatedArrival: currentEstimatedArrival,\r\n            registryDate: currentRegistryDate,\r\n            material: currentMaterial,\r\n            price: currentPrice,\r\n            status: selectedStatus,\r\n            supplier: currentSupplier,\r\n            purpose: currentPurpose,\r\n            weight: currentWeight,\r\n            color: currentColor\r\n        });\r\n        fetchResources();\r\n    }\r\n\r\n    function GetOneCategory(props){\r\n        axios.get(url + 'api/productCategory/'+props.cat, {\r\n        }).then(result => {return(JSON.stringify(result.data.title))});\r\n    }\r\n\r\n    function patchQualityReasoning(){\r\n        axios.patch(url+ \"api/supplierFeedback/\"+ currentResourceID,{\r\n            qualityReasoning: currentQualityReasoning\r\n        });\r\n    }\r\n\r\n    function patchEvaluationAssignedToPlan(evaluationId){\r\n\r\n        axios.patch(url+ \"api/evaluated/\"+ evaluationId,{\r\n            assignedToPlan: true\r\n        });\r\n\r\n        fetchResourceEvaluations();\r\n        fetchProductPlans();\r\n    }\r\n\r\n    function patchDate(e){\r\n        e.preventDefault();\r\n        axios.patch(url+'api/productPlan/'+ currentId,{\r\n            estimatedArrival: currentEstimatedArrival\r\n        });\r\n        fetchProductPlans();\r\n        setModalDateUpdate(false);\r\n    }\r\n\r\n\r\n    return(\r\n        <div class=\"main\">\r\n            {/**/}\r\n            <div class = \"selection\">\r\n            <button class=\"selectionButton\" onClick={() => handleEvaluations()}>Manage Evaluations</button>\r\n            <button class=\"selectionButton\" onClick={() => handleProjectPlans()}>Manage Product planning</button>\r\n            </div>\r\n\r\n            <div class= \"display\">\r\n            {/*show resourceEvaluations (show resources with 'to evaluate' status)*/}\r\n            {showResourceEvaluation ? \r\n            <div class = \"fullPanel\">\r\n                <div class = \"halfPanel\">\r\n                <h2>The following resources are waiting for evaluation: </h2>\r\n                {resources.map(resource => (resource.status == \"To Evaluate\" ? \r\n                    <ul key={resource.id} onMouseOver={()=> setCurrentResourceID(resource.id)}>\r\n                    <button class=\"changesButton\" onClick={() => \r\n                    handleModalReceive(resource.id,resource.estimatedArrival,resource.weight,resource.material,\r\n                        resource.color, resource.purpose, resource.price, resource.registryDate, \r\n                        resource.supplier)}>Evaluate</button>\r\n                    {resource.weight} kg of {resource.material}\r\n                    </ul>\r\n                    : null)\r\n                )}\r\n                </div>\r\n\r\n                <div class = \"halfPanel\" id=\"end\">\r\n                <h2>Current evaluations</h2>\r\n                {resourceEvaluations.map(evaluation =>\r\n                    <ul key={evaluation.id}> {evaluation.receivedAt} \r\n                    </ul>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            \r\n            :\r\n            null}\r\n\r\n            {/*show product plans*/}\r\n\r\n            {showProductPlans ? \r\n                <div class = \"fullPanel\">\r\n                <div class = \"halfPanel\">\r\n                <h2>Assign evaluated resources to product plans</h2>\r\n\r\n\r\n                {resourceEvaluations.map(evaluation => (evaluation.assignedToPlan ? \r\n                    null\r\n                    :\r\n                    <ul key={evaluation.id} onMouseOver={()=> setCurrentResourceID(evaluation.resourceID)}>\r\n                        Evaluation {evaluation.resourceID} ({evaluation.evaluationReasoning})\r\n                    <button class=\"changesButton\" onClick={() => handleModalProductPlan(evaluation.id)}>Assign</button>\r\n                    </ul>\r\n                    )\r\n                    )}\r\n                </div>\r\n                <div class = \"halfPanel\" id=\"end\">\r\n\r\n                <h2>Current product plans</h2>\r\n\r\n                {productPlans.map(plan =>\r\n                    <ul key={plan.id} onMouseOver={()=> setCurrentResourceID(plan.id)}>\r\n                        {plan.estimatedQuantity} of {plan.productType} due on {plan.estimatedArrival}\r\n\r\n                        {plan.estimatedArrival<currentDate?\r\n                        <button class=\"changesButton\" onClick={()=> handlePatchDate(plan.id)}>Update arrival date</button>\r\n                        :\r\n                        null\r\n                        }\r\n\r\n                        {plan.done ?\r\n                        <b> completed</b>\r\n                        :\r\n                        <button class=\"changesButton\" onClick={() => manageProductPlanCompletion()}> Complete </button>}\r\n                    </ul>\r\n                    )}\r\n                </div>\r\n                </div>\r\n            \r\n            :\r\n            null}\r\n            \r\n            <div>\r\n                <Modal\r\n                isOpen={modalSupplierFeedback}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>Why did you return the resource?</h2>\r\n                    <button class=\"changesButton\" onClick={() => setModalSupplierFeedback(false)}> Close </button>\r\n                    <label>\r\n                        Describe the quality\r\n                        <input type=\"text\" onChange={(e) => setCurrentQualityReasoning(e.target.value)}></input>\r\n                    </label>\r\n                    <button class=\"changesButton\" onClick = {e => handleJustSupplierFeedback(e)}>Proceed to evaluate</button>\r\n                </Modal>\r\n            </div>\r\n\r\n            {/*Modal to add new resource Evaluation*/}\r\n\r\n            <div>\r\n                <Modal\r\n                isOpen={modalResourceEvaluation}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>New Evaluation</h2>\r\n                    <label>\r\n                        Describe the quality\r\n                        <input type=\"text\" onChange={(e) => setCurrentQualityReasoning(e.target.value)}></input>\r\n                    </label>\r\n                    <button class=\"changesButton\" onClick = {e => handleAddResourceEvaluation(e)}>Proceed to evaluate</button>\r\n                </Modal>\r\n            </div>\r\n\r\n            {/*Modal to add new product plan (show resources with 'accepted' status)*/}\r\n            \r\n            <div>\r\n                <Modal\r\n                isOpen={modalProductPlan}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>New Product Plan</h2>\r\n                    \r\n                    <label>\r\n                            Product type\r\n                            <select onChange={(e) => setCurrentProductType(e.target.value)}>\r\n                            {productTypes.map( option => \r\n                            <option key={option.id} value={option.title}> {option.title} \r\n                            <GetOneCategory cat={option.productCategoryID} /> </option>)}\r\n                            </select>\r\n                    </label>\r\n                    \r\n                    <label>\r\n                            Estimated Arrival date\r\n                            <input type = \"date\" onChange={(e) => setCurrentEstimatedArrival(e.target.value)}></input>    \r\n                    </label>\r\n\r\n                    <label>\r\n                        EstimatedQuantity\r\n                        <input type = \"number\" min=\"0\" step={10} onChange={(e) => setCurrentEstimatedQuantity(e.target.value)}></input>   \r\n                    </label>\r\n\r\n                    <label>\r\n                        Used Weight\r\n                        <input type = \"number\" min=\"0\" step={5} onChange={(e) => setCurrentUsedWeight(e.target.value)}></input>   \r\n                    </label>\r\n\r\n                    <button class=\"changesButton\" onClick = {e => addProductPlan(e)}>Add a new Product plan</button>\r\n                </Modal>\r\n            </div>\r\n\r\n            <div>\r\n                <Modal\r\n                isOpen={modalReceive}\r\n                appElement={document.getElementById('root')}>\r\n                    <button class=\"changesButton\" onClick = {() => setModalReceive(false)}>Close</button>\r\n                    <h2>Accept or decline the product</h2>\r\n                    <div>\r\n                    <button class=\"changesButton\" onClick = {() => handleAccepted()}>Accept</button>\r\n                    <button class=\"changesButton\" onClick = {() => handleReturned()} >Return</button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n\r\n            <div>\r\n                <Modal\r\n                isOpen={modalDateUpdate}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>Set a new date</h2>\r\n                    <label>\r\n                            Estimated Arrival date\r\n                            <input type = \"date\" onChange={(e) => setCurrentEstimatedArrival(e.target.value)}></input>    \r\n                    </label>\r\n                    <button class=\"changesButton\" onClick = {(e) => patchDate(e)}>Set</button>\r\n                \r\n                </Modal>\r\n            </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Overview;","\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal from 'react-modal';\r\nimport \"C:/Users/umada/my-application/src/Styling/Main.scss\";\r\n\r\nfunction ManageOptions() {\r\n\r\n  const url = \"https://management-backend-app.herokuapp.com/\";\r\n\r\n  // icons\r\n  const plus = <FontAwesomeIcon icon={faPlus} />\r\n  const trash = <FontAwesomeIcon icon={faTrash} />\r\n\r\n  // loaded lists\r\n  const [productCategories, setProductCategories] = useState([]);\r\n  const [productTypes, setProductTypes] = useState([]);\r\n\r\n  // panels\r\n  const [showProductTypes, setShowProductTypes] = useState(false);\r\n  const [showProductCategories, setShowProductCategories] = useState(false);\r\n\r\n  // modal dependencies\r\n  const [modalProductType, setModalProductType] = useState(false);\r\n  const [modalProductCategory, setModalProductCategory] = useState(false);\r\n\r\n  // variables\r\n  const [currentProductCategoryID, setCurrentProductCategoryID] = useState(1);\r\n  const [currentType, setCurrentType] = useState(\"\");\r\n  const [currentTitle, setCurrentTitle] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    fetchProductTypes();\r\n    fetchProductCategories();\r\n  }, []);\r\n\r\n  async function fetchProductTypes() {\r\n    await axios.get(url+'api/productType')\r\n      .then(result => {\r\n        setProductTypes(result.data);\r\n      })\r\n  }\r\n\r\n  async function fetchProductCategories() {\r\n    await axios.get(url+'api/productCategory')\r\n      .then(result => {\r\n        setProductCategories(result.data);\r\n      })\r\n  }\r\n\r\n\r\n  function addProductType(e) {\r\n    e.preventDefault();\r\n    axios.post(url+'api/productType', {\r\n      id: 0,\r\n      productCategoryID: currentProductCategoryID,\r\n      title: currentTitle,\r\n      type: currentType,\r\n    }).then(() => fetchProductTypes());\r\n    setModalProductType(false);\r\n  }\r\n\r\n  async function addProductCategory(e) {\r\n    e.preventDefault();\r\n    axios.post(url+'api/productCategory', {\r\n      id: 0,\r\n      title: currentTitle,\r\n    }).then(() => fetchProductCategories());\r\n    setModalProductCategory(false);\r\n  }\r\n\r\n  async function deleteProductType(id) {\r\n    axios.delete(url+'api/productType/' + id)\r\n      .then(() => fetchProductTypes());\r\n  }\r\n\r\n  async function deleteProductCategory(id) {\r\n    axios.delete(url+'api/productCategory/' + id)\r\n      .then(() => fetchProductCategories());\r\n  }\r\n\r\n  function handleTypes() {\r\n    setShowProductCategories(false);\r\n    setShowProductTypes(true);\r\n  }\r\n  function handleCategories() {\r\n    setShowProductTypes(false);\r\n    setShowProductCategories(true);\r\n  }\r\n\r\n  return (\r\n    <div class=\"main\">\r\n\r\n      <div class=\"selection\">\r\n        <button class=\"selectionButton\" onClick={() => handleTypes()}>Product Types</button>\r\n        <button class=\"selectionButton\" onClick={() => handleCategories()}>Product Categories</button>\r\n      </div>\r\n\r\n      <div class=\"display\">\r\n\r\n        {/*type pannel*/}\r\n        \r\n        {showProductTypes ?\r\n          <div id=\"inner\">\r\n            <button class=\"additionButton\" onClick={() => setModalProductType(true)}>{plus}</button>\r\n            {productTypes.map(type => <ul key={type.id}>{type.title}\r\n            <button class=\"additionButton\" onClick={() => deleteProductType(type.id)}>{trash}</button></ul>)}\r\n          </div>\r\n          :\r\n          <></>}\r\n        {showProductCategories ?\r\n          <div id=\"inner\">\r\n            <button class=\"additionButton\" onClick={() => setModalProductCategory(true)}>{plus}</button>\r\n            {productCategories.map(category => <ul key={category.id}>{category.title}\r\n            <button class=\"additionButton\" onClick={() => deleteProductCategory(category.id)}>{trash}</button></ul>)}\r\n            {/*map all, add new, delete*/}\r\n          </div>\r\n          :\r\n          <></>}\r\n      \r\n\r\n      {/*Modals*/}\r\n      <div>\r\n        <Modal\r\n          isOpen={modalProductType}\r\n          appElement={document.getElementById('root')}>\r\n          <h2>New Product type</h2>\r\n          <button class=\"changesButton\" onClick={() => setModalProductType(false)}> Close </button>\r\n          <p><input type=\"text\" placeholder=\"New Type\" onChange={e => setCurrentType(e.target.value)}></input></p>\r\n          <p><input type=\"text\" placeholder=\"New Title\" onChange={e => setCurrentTitle(e.target.value)}></input></p>\r\n         \r\n\r\n          <label>\r\n            Categories\r\n            <select onChange={(e) => setCurrentProductCategoryID(e.target.value)}>\r\n              {productCategories.map(option =>\r\n                <option key={option.id} value={option.id}>{option.title}</option>)}\r\n            </select>\r\n          </label>\r\n\r\n          <button class=\"changesButton\" onClick={e => addProductType(e)}>Add a new type</button>\r\n        </Modal>\r\n      </div>\r\n\r\n      <div> {/*Category modal*/}\r\n        <Modal\r\n          isOpen={modalProductCategory}\r\n          appElement={document.getElementById('root')}>\r\n          <h2>New Product Category</h2>\r\n          <button class=\"changesButton\" onClick={() => setModalProductCategory(false)}> Close </button>\r\n          <p><input type=\"text\" placeholder=\"New Title\" onChange={e => setCurrentTitle(e.target.value)}></input></p>\r\n          <button class=\"changesButton\" onClick={e => addProductCategory(e)}>Add a new category</button>\r\n        </Modal>\r\n      </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ManageOptions;","import {useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport Modal, { setAppElement } from 'react-modal';\r\nimport \"C:/Users/umada/my-application/src/Styling/Main.scss\";\r\nimport ManageOptions from \"../Production/ManageOptions\";\r\n// patch 'undone' plan to 'done'\r\n// final products (see final products, delete them)\r\n\r\nfunction Overview(){\r\n\r\n    const url = \"https://management-backend-app.herokuapp.com/api/\";\r\n\r\n    // loaded values\r\n    const [finalProducts, setFinalProducts] = useState([]);\r\n    const [productPlans, setProductPlans] = useState([]);\r\n\r\n    // variables\r\n\r\n    const [currentPlanId, setCurrentPlanId] = useState(0);\r\n    const [currentQualityAmount, setCurrentQualityAmount] = useState(0);\r\n    const [currentTotalAmount, setCurrentTotalAmount] = useState(0);\r\n    const [currentUnitPrice, setCurrentUnitPrice] = useState(0);\r\n\r\n    // panels\r\n\r\n    const [productOverviewPanel, setProductOverviewPanel] = useState(true);\r\n    const [profitPanel, setProfitPanel] = useState(false);\r\n\r\n    // modals\r\n    const [modalFinalProduct, setModalFinalProduct] = useState(false);\r\n\r\n    async function fetchProductPlans(){\r\n        await axios.get(url+'productPlan')\r\n        .then(result => {\r\n            setProductPlans(result.data)\r\n        })\r\n    }\r\n\r\n    async function fetchFinalProducts(){\r\n        await axios.get(url+'finalProduct')\r\n        .then(result => { \r\n            setFinalProducts(result.data);\r\n        })\r\n    }\r\n  \r\n    async function addFinalProduct(){\r\n        axios.post(url+'finalProduct', {\r\n            id: 0,\r\n            productPlanID: currentPlanId,\r\n            qualityAmount: currentQualityAmount,\r\n            totalAmount: currentTotalAmount,\r\n            unitPrice: currentUnitPrice\r\n        }).then(()=> fetchFinalProducts());\r\n    }\r\n\r\n    // delete deletes product plan, final product, evaluation and resource.\r\n\r\n    function handleProductsPanel(){\r\n        setProductOverviewPanel(true);\r\n        setProfitPanel(false);\r\n    }\r\n\r\n    function handleProfitPanel(){\r\n        setProfitPanel(true);\r\n        setProductOverviewPanel(false);\r\n    }\r\n\r\n    function handlePatchDonePlan(planId){\r\n        axios.patch(url+\"productPlan/\"+ planId,{\r\n            done:true\r\n        });\r\n        fetchProductPlans();\r\n        setModalFinalProduct(true);\r\n    }\r\n\r\n    function handleAddFinalProduct(e){\r\n        e.preventDefault();\r\n        addFinalProduct();\r\n        setModalFinalProduct(false);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        fetchProductPlans();\r\n        fetchFinalProducts();\r\n    }, []);\r\n\r\n\r\n    return(\r\n\r\n        <div class=\"main\" >\r\n            <div class=\"selection\">\r\n\r\n                <button class=\"selectionButton\" onClick = {()=> handleProductsPanel()}>Product overview</button>\r\n               \r\n            </div>\r\n\r\n            <div class=\"display\">\r\n\r\n                {productOverviewPanel&&(\r\n                    <div class=\"fullPanel\">\r\n                        <div class=\"halfPanel\">\r\n\r\n                            <h2>Finalize plans</h2>\r\n\r\n                            {productPlans.map(plan => \r\n                            <ul key={plan.id} onMouseOver={()=> setCurrentPlanId(plan.id)}>\r\n                                {plan.estimatedQuantity} units of {plan.productType} \r\n                                <button class=\"changesButton\" onClick = {() => handlePatchDonePlan(plan.id)}>Done</button>\r\n                            </ul>\r\n                            )}\r\n\r\n                        </div>\r\n                        <div class=\"halfPanel\">\r\n                            <h2>Available products</h2>\r\n                            {finalProducts.map(product => <ul key={product.id}>\r\n                              Plan {product.productPlanID} \r\n                            </ul>)}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {profitPanel&&(\r\n\r\n                    <div class=\"fullPanel\">\r\n                        <h2>All plans</h2>\r\n                        {finalProducts.map(product =>\r\n                            <div>\r\n                                <p>Plan : {product.productPlanID}</p>\r\n                                <p>Total good products: {product.qualityAmount}</p>\r\n                                <p>Production efficiency : {parseFloat( parseFloat(product.qualityAmount) / parseFloat(product.totalAmount) ).toFixed(2)} </p>\r\n                                <p>Profit : {parseFloat(product.qualityAmount)*parseFloat(product.unitPrice)} DKK </p>\r\n                            </div>)\r\n                        }\r\n\r\n                    </div>\r\n                )}\r\n                \r\n                <div>\r\n                <Modal\r\n                isOpen={modalFinalProduct}\r\n                appElement={document.getElementById('root')}>\r\n                    <h2>Fill the fields to establish a final product</h2>\r\n                    <p>\r\n                    <label>\r\n                        Total Amount\r\n                        <input type = \"number\" min=\"0\" step={1} onChange={(e) => setCurrentTotalAmount(e.target.value)}></input>   \r\n                    </label>\r\n                    </p>\r\n                    <p>\r\n                    <label>\r\n                        Quality Amount\r\n                        <input type = \"number\" min=\"0\" step={1} onChange={(e) => setCurrentQualityAmount(e.target.value)}></input>   \r\n                    </label>\r\n                    </p>\r\n                    <p>\r\n                    <label>\r\n                        Unit price\r\n                        <input type = \"number\" min=\"0\" step={1} onChange={(e) => setCurrentUnitPrice(e.target.value)}></input>   \r\n                    </label>\r\n                    </p>\r\n                    <button class=\"changesButton\" onClick = {(e) => handleAddFinalProduct(e)}>Proceed</button>\r\n                </Modal>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Overview;","\r\nimport './Styling/App.scss'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Navigation from './Navigation';\r\nimport PurchaseOverview from'./Components/Purchase/Overview.js';\r\nimport ManagePurchaseOptions from'./Components/Purchase/ManageOptions.js';\r\nimport ProductionOverview from'./Components/Production/Overview.js';\r\nimport ManageProductionOptions from'./Components/Production/ManageOptions.js';\r\nimport SalesOverview from'./Components/Sales/Overview.js';\r\nimport \"./Styling/Navbar.scss\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div class=\"full\">\r\n      <Router>\r\n        <Route path='/:page' component={Navigation} />\r\n        <Route exact path='/' component={Navigation} />\r\n        <Route exact path='/purchaseOverview' component={PurchaseOverview} />\r\n        <Route exact path='/managePurchaseOptions' component={ManagePurchaseOptions} />\r\n        <Route exact path='/productionOverview' component={ProductionOverview} />\r\n        <Route exact path='/manageProductionOptions' component={ManageProductionOptions} />\r\n        <Route exact path='/salesOverview' component={SalesOverview} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Styling/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}